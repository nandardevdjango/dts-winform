----IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'IS_T_TM_DIST' AND TABLE_NAME = 'MRKT_BRANDPACK_DISTRIBUTOR')
----BEGIN
----ALTER TABLE MRKT_BRANDPACK_DISTRIBUTOR ADD IS_T_TM_DIST BIT NULL;
----ALTER TABLE MRKT_BRANDPACK_DISTRIBUTOR ADD SHIP_TO_ID VARCHAR(25) NULL;
----END
----GO
-------------------------------------------------------------------------
----IF EXISTS(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'MAX_ORDER' AND TABLE_NAME = 'PROJ_BRANDPACK')
----BEGIN
---- ALTER TABLE PROJ_BRANDPACK ALTER COLUMN MAX_ORDER DECIMAL(18,3) NULL;
----END
----GO
-----------------------------------------------------------------------------------------
------ ALTER TABLE PROJ_BRANDPACK ALTER COLUMN START_DATE SMALLDATETIME NULL; DROP INDEXNYA
--------------------------------------------------------------------------------------
----IF EXISTS(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'APPROVED_DISC_PCT' AND TABLE_NAME = 'PROJ_BRANDPACK')
----BEGIN
---- ALTER TABLE PROJ_BRANDPACK ALTER COLUMN APPROVED_DISC_PCT DECIMAL(18,2) NULL;
----END
----GO
----------------------------------------------------------------------------
----IF EXISTS(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'DISTRIBUTOR_ID' AND TABLE_NAME = 'PROJ_BRANDPACK')
----BEGIN
---- ALTER TABLE PROJ_BRANDPACK ALTER COLUMN DISTRIBUTOR_ID VARCHAR(10) NULL;
----END
----GO
------------------------------------------------------------------------------------------
----UPDATE MRKT_BRANDPACK_DISTRIBUTOR SET IS_T_TM_DIST = 0;
----GO
----UPDATE MRKT_BRANDPACK_DISTRIBUTOR SET ISSCPD = 0 WHERE ISSCPD IS NULL;
----GO
--------------------------------------------------------------
----IF NOT EXISTS(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'PROJ_BRANDPACK_ID' AND TABLE_NAME = 'ORDR_PO_BRANDPACK')
----BEGIN
----ALTER TABLE ORDR_PO_BRANDPACK ADD PROJ_BRANDPACK_ID VARCHAR(30) NULL;
----END
----GO
----UPDATE ORDR_PO_BRANDPACK SET PROJ_BRANDPACK_ID = NULL
----WHERE PROJ_BRANDPACK_ID = '';
----GO
----UPDATE ORDR_PO_BRANDPACK SET PLANTATION_ID = NULL WHERE PLANTATION_ID = '';
----GO
----
----UPDATE ORDR_PO_BRANDPACK SET TERRITORY_ID = NULL WHERE TERRITORY_ID = '';
----GO
-----------------------------------------------------------------------------------------
----IF NOT EXISTS(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'PRICE' AND TABLE_NAME = 'PROJ_BRANDPACK')
----BEGIN
----ALTER TABLE PROJ_BRANDPACK ADD PRICE DECIMAL(18,2) NULL
----END
----GO
-------------------------------------------------------------------------------
----IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Check_Availability_Disc_Agreement' AND TYPE = 'P')
----BEGIN
----DROP PROCEDURE Usp_Check_Availability_Disc_Agreement
----END
----GO
----CREATE PROCEDURE Usp_Check_Availability_Disc_Agreement
----@DISTRIBUTOR_ID VARCHAR(10),
----@BRANDPACK_ID VARCHAR(14),
----@O_COUNTQTYQ1 BIT OUTPUT,
----@O_COUNTQTYQ2 BIT OUTPUT,
----@O_COUNTQTYQ3 BIT OUTPUT,
----@O_COUNTQTYQ4 BIT OUTPUT,
----@O_COUNTQTYS1 BIT OUTPUT,
----@O_COUNTQTYS2 BIT OUTPUT,
----@O_COUNTQTYY BIT OUTPUT,
----@O_DEVIDED_QTY DECIMAL(18,3) OUTPUT,
----@O_DEVIDE_FACTOR DECIMAL(18,3) OUTPUT,
----@O_UNIT VARCHAR(15) OUTPUT,
----@PO_DATE SMALLDATETIME
----AS
----SET NOCOUNT ON;
----DECLARE @IsInvoice BIT, @IA_BRANDPACK_ID VARCHAR(14), @V_BRANDPACK_NAME VARCHAR(100),@V_BRANDPACK_ID VARCHAR(14);
----SELECT @IsInvoice = (SELECT AllowRules FROM RefBussinesRules WHERE CodeApp = 'MSC0007');
----IF (@IsInvoice = 1)
----BEGIN
----	SELECT @O_DEVIDED_QTY = (SELECT DEVIDED_QUANTITY FROM BRND_BRANDPACK WHERE BRANDPACK_ID = @BRANDPACK_ID );
----	SELECT @O_DEVIDE_FACTOR = (SELECT DEVIDE_FACTOR FROM BRND_PACK WHERE PACK_ID = (SELECT PACK_ID FROM BRND_BRANDPACK 
----								WHERE BRANDPACK_ID = @BRANDPACK_ID));
----	SELECT @O_UNIT = (SELECT UNIT FROM BRND_BRANDPACK WHERE BRANDPACK_ID = @BRANDPACK_ID );
----
----	IF OBJECT_ID('tempdb..#T_SAVING') IS NOT NULL
----    BEGIN DROP TABLE #T_SAVING; END
----
----	SELECT ACRH.FLAG,ACRD.DISC_QTY,ACRD.LEFT_QTY INTO #T_SAVING FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACRD ON ACRH.ACHIEVEMENT_ID
----        = ACRD.ACHIEVEMENT_ID WHERE ACRD.CAN_RELEASE = 1 AND ACRH.AGREEMENT_NO = ANY(SELECT AGREEMENT_NO FROM AGREE_AGREEMENT
----        WHERE YEAR(END_DATE) >= YEAR(@PO_DATE) -1 )AND ACRH.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND ACRD.BRANDPACK_ID = @BRANDPACK_ID;  
----        
----    CREATE CLUSTERED INDEX IDX_T_S ON #T_SAVING(FLAG,LEFT_QTY);
----	SELECT @O_COUNTQTYQ1 = ISNULL((SELECT 1 WHERE EXISTS(SELECT LEFT_QTY FROM #T_SAVING WHERE FLAG = 'Q1' AND LEFT_QTY > 0)),0);
----	
----	SELECT @O_COUNTQTYQ2 = ISNULL((SELECT 1 WHERE EXISTS(SELECT LEFT_QTY FROM #T_SAVING WHERE FLAG = 'Q2' AND LEFT_QTY > 0)),0);
----
----	SELECT @O_COUNTQTYQ3 = ISNULL((SELECT 1 WHERE EXISTS(SELECT LEFT_QTY FROM #T_SAVING WHERE FLAG = 'Q3' AND LEFT_QTY > 0)),0);
----
----	SELECT @O_COUNTQTYQ4 = ISNULL((SELECT 1 WHERE EXISTS(SELECT LEFT_QTY FROM #T_SAVING WHERE FLAG = 'Q4' AND LEFT_QTY > 0)),0);
----
----	SELECT @O_COUNTQTYS1 = ISNULL((SELECT 1 WHERE EXISTS(SELECT LEFT_QTY FROM #T_SAVING WHERE FLAG = 'S1' AND LEFT_QTY > 0)),0);
----
----	SELECT @O_COUNTQTYS2 = ISNULL((SELECT 1 WHERE EXISTS(SELECT LEFT_QTY FROM #T_SAVING WHERE FLAG = 'S2' AND LEFT_QTY > 0)),0);
----
----	SELECT @O_COUNTQTYY = ISNULL((SELECT 1 WHERE EXISTS(SELECT LEFT_QTY FROM #T_SAVING WHERE FLAG = 'Y' AND LEFT_QTY > 0)),0);
----	DROP TABLE #T_SAVING;
----END
----ELSE
----BEGIN
----RAISERROR('DPD is not set to Invoice',16,1);
----END
----GO
---------------------------------------------------------------
----IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Check_Availability_Disc_Sales' AND TYPE = 'P')
----BEGIN
----DROP PROCEDURE Usp_Check_Availability_Disc_Sales ;
----END
----GO
----CREATE PROCEDURE Usp_Check_Availability_Disc_Sales
----@DISTRIBUTOR_ID VARCHAR(10),
----@BRANDPACK_ID VARCHAR(14),
----@O_DEVIDED_QTY DECIMAL(18,3) OUTPUT,
----@O_DEVIDE_FACTOR DECIMAL(18,3) OUTPUT,
----@PO_DATE SMALLDATETIME,
----@O_UNIT VARCHAR(15) OUTPUT,
----@O_COUNTMG BIT OUTPUT,
----@O_COUNTCPR BIT OUTPUT,
----@O_COUNTCPD BIT OUTPUT,
----@O_COUNTCPSD BIT OUTPUT,
----@O_COUNTKP BIT OUTPUT,
----@O_COUNTDK BIT OUTPUT,
----@O_CountCPSD_TM BIT OUTPUT,
----@O_CountCPD_TM BIT OUTPUT
----AS 
----SET NOCOUNT ON;
----SELECT @O_DEVIDED_QTY = (SELECT DEVIDED_QUANTITY FROM BRND_BRANDPACK WHERE BRANDPACK_ID = @BRANDPACK_ID );
----SELECT @O_DEVIDE_FACTOR = (SELECT DEVIDE_FACTOR FROM BRND_PACK WHERE PACK_ID = (SELECT PACK_ID FROM BRND_BRANDPACK 
----						   WHERE BRANDPACK_ID = @BRANDPACK_ID));
----SELECT @O_UNIT = (SELECT UNIT FROM BRND_BRANDPACK WHERE BRANDPACK_ID = @BRANDPACK_ID );
----
----IF OBJECT_ID('tempdb..#T_MRKT') IS NOT NULL
----BEGIN DROP TABLE #T_MRKT; END
----
----SELECT MBD.ISRPK,MBD.GIVEN_DISC_PCT,MBD.ISPKPP,MBD.ISDK,MBD.ISCPR,MBD.ISCP,MBD.ISSCPD,MBD.IS_T_TM_DIST,MBD.ISHK INTO #T_MRKT
----FROM MRKT_BRANDPACK_DISTRIBUTOR MBD INNER JOIN MRKT_BRANDPACK MB ON MBD.PROG_BRANDPACK_ID = MB.PROG_BRANDPACK_ID
----WHERE MBD.START_DATE <= @PO_DATE AND MBD.END_DATE >= @PO_DATE AND MBD.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
----AND MBD.BONUS_VALUE = 0
----AND MB.BRANDPACK_ID = @BRANDPACK_ID;
----
----SELECT @O_COUNTMG = ISNULL((SELECT 1 WHERE EXISTS(SELECT TOP 1 ISRPK,GIVEN_DISC_PCT FROM #T_MRKT WHERE (ISPKPP = 0
----                    AND ISDK = 0 AND ISCPR = 0 AND ISCP = 0 AND ISHK = 0))),0) OPTION(KEEP PLAN);
----SELECT @O_COUNTCPR = ISNULL((SELECT 1 WHERE EXISTS(SELECT TOP 1 ISCPR FROM #T_MRKT WHERE ISCPR = 1)),0);
----
----SELECT @O_COUNTKP = ISNULL((SELECT 1 WHERE EXISTS(SELECT TOP 1 ISPKPP FROM #T_MRKT WHERE ISPKPP = 1)),0);
----SELECT @O_COUNTDK = ISNULL((SELECT 1 WHERE EXISTS(SELECT TOP 1 ISDK  FROM #T_MRKT WHERE ISDK = 1)),0);
------CPD & CPDS DISTRIBUTOR
----SELECT @O_COUNTCPD = ISNULL((SELECT 1 WHERE EXISTS(SELECT TOP 1 ISCP FROM #T_MRKT WHERE (ISCP = 1 AND ISSCPD = 0 AND IS_T_TM_DIST = 0))),0);
----SELECT @O_COUNTCPSD = ISNULL((SELECT 1 WHERE EXISTS(SELECT TOP 1 ISSCPD  FROM #T_MRKT WHERE (ISCP = 1 AND ISSCPD = 1 AND IS_T_TM_DIST = 0))),0);
------CPD & CPDS TM_DISTRIBUTOR
----SELECT @O_CountCPSD_TM = ISNULL((SELECT 1 WHERE EXISTS(SELECT TOP 1 ISSCPD  FROM #T_MRKT WHERE (ISCP = 1 AND ISSCPD = 1 AND IS_T_TM_DIST = 1))),0);
----SELECT @O_CountCPD_TM  = ISNULL((SELECT 1 WHERE EXISTS(SELECT TOP 1 ISSCPD  FROM #T_MRKT WHERE (ISCP = 1 AND ISSCPD = 0 AND IS_T_TM_DIST = 1))),0);
----DROP TABLE #T_MRKT;
----GO
----UPDATE ORDR_OA_BRANDPACK_DISC SET GQSY_SGT_P_FLAG = 'CS' WHERE GQSY_SGT_P_FLAG = 'SC'
----UPDATE ORDR_OA_REMAINDING SET FLAG = 'CS' WHERE FLAG = 'SC'
----UPDATE MRKT_DISC_HISTORY SET SGT_FLAG = 'CS' WHERE SGT_FLAG = 'SC'
----GO
------rubah seluruh flag yang ada sc jadi cs
----
------------DROP PROCEDURE---Usp_Check_Availability_Disc_Qty_Sales_Agreement
----
----
------IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE  NAME = 'Usp_Check_Availability_Disc_Qty_Sales_Agreement'
------	AND TYPE = 'P')
------DROP PROCEDURE Usp_Check_Availability_Disc_Qty_Sales_Agreement
------GO
----
----IF NOT EXISTS( SELECT * FROM INFORMATION_SCHEMA.COLUMNS 
----            WHERE TABLE_NAME = 'DIST_PLANT_PRICE' 
----           AND  COLUMN_NAME = 'IncludeDPD')
----BEGIN
----ALTER TABLE DIST_PLANT_PRICE ADD [IncludeDPD] BIT NULL;
----END
----GO
----UPDATE DIST_PLANT_PRICE SET IncludeDPD = 0 WHERE CREATE_DATE >= '07/01/2011';
----GO
-------------------------------------------
----IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'Uv_Price_Distributor')
----DROP VIEW Uv_Price_Distributor
----GO
----CREATE VIEW Uv_Price_Distributor 
----AS
----SELECT DPP.IDApp,DPP.IncludeDPD,DPP.PRICE_TAG,DPP.BRANDPACK_ID,BP.BRANDPACK_NAME,DPP.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,
----DPP.PLANTATION_ID,PL.PLANTATION_NAME,'PLANTATION_AREA' = CASE WHEN TER0.TERRITORY_AREA IS NOT NULL THEN TER0.TERRITORY_AREA ELSE DR2.TERRITORY_AREA END,
----DPP.PRICE,DPP.START_DATE
----FROM DIST_PLANT_PRICE DPP INNER JOIN BRND_BRANDPACK BP ON DPP.BRANDPACK_ID = BP.BRANDPACK_ID
----INNER JOIN DIST_DISTRIBUTOR DR ON DPP.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
----INNER JOIN PLANTATION PL ON PL.PLANTATION_ID = DPP.PLANTATION_ID
----LEFT OUTER JOIN(SELECT TER1.TERRITORY_AREA,PL1.PLANTATION_ID FROM TERRITORY TER1 INNER JOIN PLANTATION PL1 ON PL1.TERRITORY_ID = TER1.TERRITORY_ID)TER0
----ON TER0.PLANTATION_ID = PL.PLANTATION_ID
----LEFT OUTER JOIN(SELECT DR1.DISTRIBUTOR_ID,TER2.TERRITORY_AREA FROM DIST_DISTRIBUTOR DR1 INNER JOIN TERRITORY TER2 ON TER2.TERRITORY_ID = DR1.TERRITORY_ID)DR2
----ON DR2.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
----GO
-----------------------------------------------------------------------------------
----IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Generate_Sales_Discount_Stage_1' AND TYPE = 'P')
----DROP PROCEDURE Usp_Generate_Sales_Discount_Stage_1
----GO
----CREATE PROCEDURE Usp_Generate_Sales_Discount_Stage_1
----@DISTRIBUTOR_ID VARCHAR(10),
----@BRANDPACK_ID VARCHAR(14),
----@PO_REF_NO VARCHAR(25),
----@FLAG VARCHAR(2)
----AS
----SET NOCOUNT ON;
----DECLARE @PO_DATE SMALLDATETIME;
----SET @PO_DATE = (SELECT PO_REF_DATE FROM ORDR_PURCHASE_ORDER WHERE PO_REF_NO = @PO_REF_NO);
----IF (@FLAG = 'KP')
----   BEGIN
----	SELECT MBD.PROG_BRANDPACK_DIST_ID,MBD.GIVEN_PKPP,MBD.TARGET_PKPP,MBD.START_DATE,MBD.END_DATE FROM MRKT_BRANDPACK_DISTRIBUTOR MBD
---- 	INNER JOIN MRKT_BRANDPACK MB ON MBD.PROG_BRANDPACK_ID = MB.PROG_BRANDPACK_ID
----	WHERE MB.BRANDPACK_ID = @BRANDPACK_ID AND MBD.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
----	AND MBD.START_DATE <= @PO_DATE AND MBD.END_DATE >= @PO_DATE AND MBD.ISPKPP = 1 ;
----   END
----ELSE IF (@FLAG = 'DK')
----   BEGIN
----	SELECT MBD.PROG_BRANDPACK_DIST_ID,MBD.GIVEN_DK,MBD.TARGET_DK,MBD.START_DATE,MBD.END_DATE FROM MRKT_BRANDPACK_DISTRIBUTOR MBD
---- 	INNER JOIN MRKT_BRANDPACK MB ON MBD.PROG_BRANDPACK_ID = MB.PROG_BRANDPACK_ID
----	WHERE MB.BRANDPACK_ID = @BRANDPACK_ID AND MBD.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
----	AND MBD.START_DATE <= @PO_DATE AND MBD.END_DATE >= @PO_DATE AND MBD.ISDK = 1 ;
----   END
----ELSE IF(@FLAG = 'MG')
----	BEGIN
----	SELECT MBD.PROG_BRANDPACK_DIST_ID,MBD.GIVEN_DISC_PCT,MBD.START_DATE,MBD.END_DATE FROM MRKT_BRANDPACK_DISTRIBUTOR MBD
---- 	INNER JOIN MRKT_BRANDPACK MB ON MBD.PROG_BRANDPACK_ID = MB.PROG_BRANDPACK_ID
----	WHERE MB.BRANDPACK_ID = @BRANDPACK_ID AND MBD.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
----	AND MBD.START_DATE <= @PO_DATE AND MBD.END_DATE >= @PO_DATE AND ((MBD.ISRPK = 1) OR (MBD.GIVEN_DISC_PCT > 0))
---- 	END
----ELSE IF(@FLAG = 'CR')
----	BEGIN
----	SELECT MBD.PROG_BRANDPACK_DIST_ID,MBD.GIVEN_CPR,MBD.TARGET_CPR, MBD.START_DATE,MBD.END_DATE FROM MRKT_BRANDPACK_DISTRIBUTOR MBD
---- 	INNER JOIN MRKT_BRANDPACK MB ON MBD.PROG_BRANDPACK_ID = MB.PROG_BRANDPACK_ID
----	WHERE MB.BRANDPACK_ID = @BRANDPACK_ID AND MBD.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
----	AND MBD.START_DATE <= @PO_DATE AND MBD.END_DATE >= @PO_DATE AND MBD.ISCPR = 1; 
----	END
----ELSE IF (@FLAG = 'CP')
----   BEGIN
---- 	SELECT MBD.PROG_BRANDPACK_DIST_ID,MBD.GIVEN_CP,MBD.TARGET_CP,MBD.START_DATE,MBD.END_DATE FROM MRKT_BRANDPACK_DISTRIBUTOR MBD
---- 	INNER JOIN MRKT_BRANDPACK MB ON MBD.PROG_BRANDPACK_ID = MB.PROG_BRANDPACK_ID
----	WHERE MB.BRANDPACK_ID = @BRANDPACK_ID AND MBD.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
----	AND MBD.START_DATE <= @PO_DATE AND MBD.END_DATE >= @PO_DATE AND MBD.ISCP = 1 AND MBD.ISSCPD = 0 AND MBD.IS_T_TM_DIST = 0;
----   END 
----ELSE IF(@FLAG = 'CS')
---- 	BEGIN
----	SELECT MBD.PROG_BRANDPACK_DIST_ID,MBD.GIVEN_CP AS GIVEN_CPSD,MBD.TARGET_CP,MBD.START_DATE,MBD.END_DATE FROM MRKT_BRANDPACK_DISTRIBUTOR MBD
---- 	INNER JOIN MRKT_BRANDPACK MB ON MBD.PROG_BRANDPACK_ID = MB.PROG_BRANDPACK_ID
----	WHERE MB.BRANDPACK_ID = @BRANDPACK_ID AND MBD.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
----	AND MBD.START_DATE <= @PO_DATE AND MBD.END_DATE >= @PO_DATE AND MBD.ISCP = 1 AND MBD.ISSCPD = 1 AND MBD.IS_T_TM_DIST = 0;
----	END
----ELSE IF(@FLAG = 'TD')
----	BEGIN
----	SELECT MBD.PROG_BRANDPACK_DIST_ID,MBD.GIVEN_CP AS GIVEN_CP,MBD.TARGET_CP,MBD.START_DATE,MBD.END_DATE FROM MRKT_BRANDPACK_DISTRIBUTOR MBD
---- 	INNER JOIN MRKT_BRANDPACK MB ON MBD.PROG_BRANDPACK_ID = MB.PROG_BRANDPACK_ID
----	WHERE MB.BRANDPACK_ID = @BRANDPACK_ID AND MBD.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
----	AND MBD.START_DATE <= @PO_DATE AND MBD.END_DATE >= @PO_DATE AND MBD.ISCP = 1 AND MBD.ISSCPD = 0 AND MBD.IS_T_TM_DIST = 1;
----	END 
----ELSE IF(@FLAG = 'TS')
----	BEGIN
----	SELECT MBD.PROG_BRANDPACK_DIST_ID,MBD.GIVEN_CP AS GIVEN_CPSD,MBD.TARGET_CP,MBD.START_DATE,MBD.END_DATE FROM MRKT_BRANDPACK_DISTRIBUTOR MBD
---- 	INNER JOIN MRKT_BRANDPACK MB ON MBD.PROG_BRANDPACK_ID = MB.PROG_BRANDPACK_ID
----	WHERE MB.BRANDPACK_ID = @BRANDPACK_ID AND MBD.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
----	AND MBD.START_DATE <= @PO_DATE AND MBD.END_DATE >= @PO_DATE AND MBD.ISCP = 1 AND MBD.ISSCPD = 1 AND MBD.IS_T_TM_DIST = 1;
----	END 
------CP Target CPD hanya ke distributor saja
------CS target CPD(S) hanya ke distributor saja
------TD Target CPD Ke distributor dan TM
------TS Target CPD(S) ke TM dan Distributor
----GO
--------------------------------------------------------------------
----IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Check_Sum_Disc_Qty_MRKT_DISC_HISTORY'
----   AND TYPE = 'P')
----DROP PROCEDURE Usp_Check_Sum_Disc_Qty_MRKT_DISC_HISTORY
----GO
----CREATE PROCEDURE Usp_Check_Sum_Disc_Qty_MRKT_DISC_HISTORY
----@MRKT_DISC_HIST_ID VARCHAR(110)
----AS
----EXECUTE sp_executesql
----N'SET NOCOUNT ON;
----DECLARE @V_RELEASE_QTY DECIMAL(18,3),@V_LEFT_QTY DECIMAL(18,3),@V_DISC_QTY DECIMAL(18,3),
----@SUM_RELEASE_QTY DECIMAL(18,3)
----BEGIN
----  SELECT @V_DISC_QTY = ISNULL(MRKT_DISC_QTY,0),@V_RELEASE_QTY = ISNULL(MRKT_RELEASE_QTY,0),
----  @V_LEFT_QTY = ISNULL(MRKT_LEFT_QTY,0) FROM MRKT_DISC_HISTORY WHERE MRKT_DISC_HIST_ID = @V_MRKT_DISC_HIST_ID; 
----  SET @SUM_RELEASE_QTY = CAST((SELECT ISNULL(SUM(DISC_QTY),0) FROM ORDR_OA_BRANDPACK_DISC WHERE MRKT_DISC_HIST_ID = @V_MRKT_DISC_HIST_ID)AS DECIMAL(18,3))+
----                         CAST((SELECT ISNULL(SUM(QTY),0) FROM ORDR_OA_REMAINDING WHERE MRKT_DISC_HIST_ID = @V_MRKT_DISC_HIST_ID)AS DECIMAL(18,3))
----  IF (@SUM_RELEASE_QTY <> @V_RELEASE_QTY)
----     BEGIN
----	UPDATE MRKT_DISC_HISTORY SET MRKT_RELEASE_QTY = @SUM_RELEASE_QTY,
----	MRKT_LEFT_QTY = (@V_DISC_QTY - @SUM_RELEASE_QTY) WHERE MRKT_DISC_HIST_ID = @V_MRKT_DISC_HIST_ID
----     END
----END',N'@V_MRKT_DISC_HIST_ID VARCHAR(110)',@V_MRKT_DISC_HIST_ID = @MRKT_DISC_HIST_ID;
----GO
---------------------------------------------------------------------------------
----IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Sp_Insert_MRKT_BRANDPACK_DISTRIBUTOR' AND TYPE = 'P')
----DROP PROCEDURE Sp_Insert_MRKT_BRANDPACK_DISTRIBUTOR
----GO
----IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Insert_MRKT_BRANDPACK_DISTRIBUTOR' AND TYPE = 'P')
----DROP PROCEDURE Usp_Insert_MRKT_BRANDPACK_DISTRIBUTOR
----GO
----CREATE PROCEDURE Usp_Insert_MRKT_BRANDPACK_DISTRIBUTOR
----@PROG_BRANDPACK_DIST_ID VARCHAR(40),
----@PROG_BRANDPACK_ID VARCHAR(30),
----@AGREE_BRANDPACK_ID VARCHAR(39),
----@DISTRIBUTOR_ID VARCHAR(10),
----@START_DATE DATETIME,
----@END_DATE DATETIME,
----@GIVEN_DISC_PCT DECIMAL(10,2),
----@TARGET_QTY DECIMAL(18,3),
----@TARGET_DISC_PCT DECIMAL(10,2),
----@STEPPING_FLAG BIT,
----@ISRPK BIT,
----@ISPKPP BIT,
----@GIVEN_PKPP DECIMAL(10,2),
----@TARGET_PKPP DECIMAL(18,3),
----@ISCP BIT,
----@GIVEN_CP DECIMAL(10,2),
----@TARGET_CP DECIMAL(18,3),
----@ISSCPD BIT,
----@IS_T_TM_DIST BIT,
----@SHIP_TO_ID VARCHAR(25),
----@ISCPR BIT,
----@GIVEN_CPR DECIMAL(10,2),
----@TARGET_CPR DECIMAL(18,3),
----@ISDK BIT,
----@GIVEN_DK DECIMAL(10,2),
----@TARGET_DK DECIMAL(18,3),
----@ISHK BIT,
----@TARGET_HK DECIMAL(18,3),
----@PRICE_HK DECIMAL(10,2),
----@BONUS_VALUE DECIMAL(18,2),
----@CREATE_BY VARCHAR(30)
----AS
----SET NOCOUNT ON;
----IF NOT EXISTS(SELECT PROG_BRANDPACK_DIST_ID FROM MRKT_BRANDPACK_DISTRIBUTOR WHERE PROG_BRANDPACK_DIST_ID = @PROG_BRANDPACK_DIST_ID)
----BEGIN
----INSERT INTO MRKT_BRANDPACK_DISTRIBUTOR(PROG_BRANDPACK_DIST_ID,PROG_BRANDPACK_ID,AGREE_BRANDPACK_ID,
----DISTRIBUTOR_ID,START_DATE,END_DATE,ISRPK,GIVEN_DISC_PCT,TARGET_QTY,TARGET_DISC_PCT,STEPPING_FLAG,
----ISPKPP,GIVEN_PKPP,TARGET_PKPP,BONUS_VALUE,ISCP,GIVEN_CP,TARGET_CP,ISSCPD,IS_T_TM_DIST,SHIP_TO_ID,ISCPR,GIVEN_CPR,TARGET_CPR,ISDK,GIVEN_DK,TARGET_DK,ISHK,TARGET_HK,PRICE_HK,CREATE_BY,CREATE_DATE)
----VALUES(@PROG_BRANDPACK_DIST_ID,@PROG_BRANDPACK_ID,@AGREE_BRANDPACK_ID,
----@DISTRIBUTOR_ID,@START_DATE,@END_DATE,@ISRPK,@GIVEN_DISC_PCT,@TARGET_QTY,@TARGET_DISC_PCT,@STEPPING_FLAG,
----@ISPKPP,@GIVEN_PKPP,@TARGET_PKPP,@BONUS_VALUE,@ISCP,@GIVEN_CP,@TARGET_CP,@ISSCPD,@IS_T_TM_DIST,@SHIP_TO_ID,@ISCPR,@GIVEN_CPR,@TARGET_CPR,@ISDK,@GIVEN_DK,@TARGET_DK,@ISHK,@TARGET_HK,@PRICE_HK,@CREATE_BY,GETDATE())
----END
----GO
------------------------------------------------
----IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Sp_Update_MRKT_BRANDPACK_DISTRIBUTOR' AND TYPE = 'P')
----DROP PROCEDURE Sp_Update_MRKT_BRANDPACK_DISTRIBUTOR
----GO
----IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Update_MRKT_BRANDPACK_DISTRIBUTOR' AND TYPE = 'P')
----DROP PROCEDURE Usp_Update_MRKT_BRANDPACK_DISTRIBUTOR
----GO
----CREATE PROCEDURE Usp_Update_MRKT_BRANDPACK_DISTRIBUTOR
----@PROG_BRANDPACK_DIST_ID VARCHAR(40),
----@PROG_BRANDPACK_ID VARCHAR(30),
----@AGREE_BRANDPACK_ID VARCHAR(39),
----@DISTRIBUTOR_ID VARCHAR(10),
----@START_DATE DATETIME,
----@END_DATE DATETIME,
----@GIVEN_DISC_PCT DECIMAL(10,2),
----@TARGET_QTY DECIMAL(18,3),
----@TARGET_DISC_PCT DECIMAL(10,2),
----@STEPPING_FLAG BIT,
----@ISRPK BIT,
----@ISPKPP BIT,
----@GIVEN_PKPP DECIMAL(10,2),
----@TARGET_PKPP DECIMAL(18,3),
----@ISCP BIT,
----@GIVEN_CP DECIMAL(10,2),
----@TARGET_CP DECIMAL(18,3),
----@ISSCPD BIT,
----@IS_T_TM_DIST BIT,
----@SHIP_TO_ID VARCHAR(25),
----@ISCPR BIT,
----@GIVEN_CPR DECIMAL(10,2),
----@TARGET_CPR DECIMAL(18,3),
----@ISDK BIT,
----@GIVEN_DK DECIMAL(10,2),
----@TARGET_DK DECIMAL(18,3),
----@ISHK BIT,
----@TARGET_HK DECIMAL(18,3),
----@PRICE_HK DECIMAL(10,2),
----@BONUS_VALUE DECIMAL(18,2),
----@MODIFY_BY VARCHAR(30)
----AS
----SET NOCOUNT ON;
----IF EXISTS(SELECT PROG_BRANDPACK_DIST_ID FROM MRKT_BRANDPACK_DISTRIBUTOR WHERE PROG_BRANDPACK_DIST_ID = @PROG_BRANDPACK_DIST_ID)
----BEGIN
----UPDATE MRKT_BRANDPACK_DISTRIBUTOR SET PROG_BRANDPACK_ID = @PROG_BRANDPACK_ID,AGREE_BRANDPACK_ID = @AGREE_BRANDPACK_ID,
----DISTRIBUTOR_ID = @DISTRIBUTOR_ID,START_DATE = @START_DATE,END_DATE = @END_DATE,ISRPK = @ISRPK,
----GIVEN_DISC_PCT = @GIVEN_DISC_PCT,TARGET_QTY = @TARGET_QTY,TARGET_DISC_PCT = @TARGET_DISC_PCT,STEPPING_FLAG = @STEPPING_FLAG,
----ISPKPP = @ISPKPP,GIVEN_PKPP = @GIVEN_PKPP,TARGET_PKPP = @TARGET_PKPP,BONUS_VALUE = @BONUS_VALUE,ISCP = @ISCP,GIVEN_CP = @GIVEN_CP,
----TARGET_CP = @TARGET_CP,ISSCPD = @ISSCPD,SHIP_TO_ID = @SHIP_TO_ID,IS_T_TM_DIST = @IS_T_TM_DIST,ISCPR = @ISCPR,GIVEN_CPR = @GIVEN_CPR,TARGET_CPR = @TARGET_CPR,ISDK = @ISDK,GIVEN_DK = @GIVEN_DK,TARGET_DK = @TARGET_DK,ISHK = @ISHK,
----TARGET_HK = @TARGET_HK,PRICE_HK = @PRICE_HK,MODIFY_BY = @MODIFY_BY,MODIFY_DATE = GETDATE() WHERE PROG_BRANDPACK_DIST_ID = @PROG_BRANDPACK_DIST_ID
----END
----GO
-----------------------delete stored procedure Sp_Check_PROJ_REF_NO---
----IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Sp_Check_PROJ_REF_NO' AND TYPE = 'P')
----DROP PROCEDURE Sp_Check_PROJ_REF_NO
----GO
----------------------------------------------------------------------------------------------
----IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME  = 'Sp_Select_REFERENCED_PROJ_BRANDPACK' AND TYPE = 'P')
----DROP PROCEDURE Sp_Select_REFERENCED_PROJ_BRANDPACK
----GO
-------------------------------------------------------------------------------------
----IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Create_View_Sales_Program_Distributor_History' AND TYPE = 'P')
----DROP PROCEDURE Usp_Create_View_Sales_Program_Distributor_History
----GO
----CREATE PROCEDURE Usp_Create_View_Sales_Program_Distributor_History
----@DISTRIBUTOR_ID VARCHAR(30)
------,
------@END_DATE SMALLDATETIME,
------@START_DATE SMALLDATETIME
----AS
----SET NOCOUNT ON;
----SELECT MP.PROGRAM_ID,MP.PROGRAM_NAME,MB.BRANDPACK_ID,BB.BRANDPACK_NAME,MBD.START_DATE,
----MBD.END_DATE,MBD.GIVEN_DISC_PCT AS [GIVEN %],MBD.TARGET_QTY,MBD.TARGET_DISC_PCT AS [TARGET %],
----MBD.ISHK,MBD.PRICE_HK,MBD.TARGET_HK,MBD.ISDK,MBD.GIVEN_DK,MBD.TARGET_DK,
----MBD.ISCP AS ISCP_D,MBD.GIVEN_CP AS GIVEN_CP_D,MBD.TARGET_CP AS TARGET_CP_D,
----MBD.ISSCPD AS SPEC_CPD,MBD.IS_T_TM_DIST AS TARGET_TM_DIST,
----MBD.ISCPR AS ISCP_R,MBD.GIVEN_CPR AS GIVEN_CP_R,MBD.TARGET_CPR AS TARGET_CP_R,
----MBD.ISPKPP,MBD.GIVEN_PKPP,MBD.TARGET_PKPP,MBD.BONUS_VALUE AS GIVEN_VALUE_PKPP
----FROM MRKT_MARKETING_PROGRAM MP INNER JOIN MRKT_BRANDPACK MB ON
----MP.PROGRAM_ID = MB.PROGRAM_ID INNER JOIN MRKT_BRANDPACK_DISTRIBUTOR MBD
----ON MB.PROG_BRANDPACK_ID = MBD.PROG_BRANDPACK_ID 
----INNER JOIN BRND_BRANDPACK BB ON BB.BRANDPACK_ID = MB.BRANDPACK_ID
----WHERE --MBD.START_DATE >= @START_DATE AND MBD.END_DATE <= @END_DATE AND 
----MBD.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
----GO
------------------------------------------------------------------------------------------------
----IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Create_View_Agreement_Program_Distributor_History' AND TYPE = 'P')
----DROP PROCEDURE Usp_Create_View_Agreement_Program_Distributor_History
----GO
----CREATE PROCEDURE Usp_Create_View_Agreement_Program_Distributor_History
----@DISTRIBUTOR_ID VARCHAR(10)
----AS
----SET NOCOUNT ON;
----SELECT AGREEMENT_NO,AGREEMENT_DESC,BRAND_ID,BRAND_NAME,START_DATE,END_DATE,[GIVEN%],TARGET_Q1,
----TARGET_Q2,TARGET_Q3,TARGET_Q4,TARGET_S1,TARGET_S2
----FROM VIEW_AGREE_BRAND_INCLUDE WHERE DISTRIBUTOR_ID = @DISTRIBUTOR_ID
------AND START_DATE >= @START_DATE AND END_DATE <= @END_DATE ; 
----GO
--------------------------------------------------------------------------------------
----IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Sp_CREATE_VIEW_MRKT_BRANDPACK' AND TYPE = 'P')
----DROP PROCEDURE Sp_CREATE_VIEW_MRKT_BRANDPACK
----GO
----CREATE PROCEDURE Sp_CREATE_VIEW_MRKT_BRANDPACK
----@PROG_BRANDPACK_DIST_ID VARCHAR(40)
----AS
----SELECT MBD.PROG_BRANDPACK_DIST_ID,MBD.PROG_BRANDPACK_ID,
----MBD.AGREE_BRANDPACK_ID,MBD.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,
----MBD.START_DATE,MBD.END_DATE,MBD.ISRPK,MBD.GIVEN_DISC_PCT,
----MBD.TARGET_QTY,MBD.TARGET_DISC_PCT,MBD.STEPPING_FLAG,MP.PROGRAM_NAME,
----MB.PROGRAM_ID,MB.BRANDPACK_ID,BB.BRANDPACK_NAME,MBD.ISPKPP,MBD.GIVEN_PKPP,
----MBD.TARGET_PKPP,MBD.BONUS_VALUE,MBD.ISDK,MBD.GIVEN_DK,MBD.TARGET_DK,
----MBD.ISCP,MBD.GIVEN_CP,MBD.TARGET_CP,MBD.ISSCPD,MBD.IS_T_TM_DIST,MBD.SHIP_TO_ID,
----MBD.ISCPR,MBD.GIVEN_CPR,MBD.TARGET_CPR,
----MBD.ISHK,MBD.TARGET_HK,
----MBD.PRICE_HK FROM MRKT_BRANDPACK_DISTRIBUTOR MBD INNER JOIN MRKT_BRANDPACK MB
----ON MBD.PROG_BRANDPACK_ID = MB.PROG_BRANDPACK_ID INNER JOIN MRKT_MARKETING_PROGRAM MP
----ON MB.PROGRAM_ID = MP.PROGRAM_ID INNER JOIN DIST_DISTRIBUTOR DR ON DR.DISTRIBUTOR_ID = MBD.DISTRIBUTOR_ID
----INNER JOIN BRND_BRANDPACK BB ON BB.BRANDPACK_ID = MB.BRANDPACK_ID
----WHERE  MBD.PROG_BRANDPACK_DIST_ID = @PROG_BRANDPACK_DIST_ID
----GO
-----------------------------------------------------------------
----IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Create_Temp_Date_Invoice' AND TYPE = 'P')
----   DROP PROCEDURE Usp_Create_Temp_Date_Invoice
----GO
----CREATE PROCEDURE Usp_Create_Temp_Date_Invoice
----@I_START_DATE VARCHAR(20),
----@I_END_DATE VARCHAR(20),
----@I_UserName VARCHAR(100)
----AS
----SET NOCOUNT ON;
----SELECT START_DATE = @I_START_DATE,END_DATE = @I_END_DATE,UserName = @I_UserName INTO  ##T_START_DATE;
----GO
----------------------------------------------------------------------------------
----IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Create_View_OA_Ship_To' AND TYPE = 'P')
----DROP PROCEDURE Usp_Create_View_OA_Ship_To
----GO
----CREATE PROCEDURE Usp_Create_View_OA_Ship_To
----@DISTRIBUTOR_ID VARCHAR(10),
----@START_DATE SMALLDATETIME,
----@END_DATE SMALLDATETIME
----AS
----SET NOCOUNT ON;
----SELECT OPO.PO_REF_NO,OOA.OA_ID AS OA_REF_NO,OOA.OA_DATE,
----DR.DISTRIBUTOR_ID AS SHIP_TO_DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME AS SHIP_TO_DISTRIBUTOR_NAME,
----TER.TERRITORY_AREA AS TERRITORY_AREA,TM.MANAGER AS SHIP_TO_TM
----FROM ORDR_PURCHASE_ORDER OPO INNER JOIN ORDR_ORDER_ACCEPTANCE OOA ON OPO.PO_REF_NO = OOA.PO_REF_NO
----INNER JOIN OA_SHIP_TO OST ON OOA.OA_ID = OST.OA_ID LEFT OUTER JOIN SHIP_TO ST
----ON ST.SHIP_TO_ID = OST.SHIP_TO_ID INNER JOIN DIST_DISTRIBUTOR DR
----ON OPO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID LEFT OUTER JOIN TERRITORY_MANAGER TM ON ST.TM_ID = TM.TM_ID
----LEFT OUTER JOIN TERRITORY TER ON ST.TERRITORY_ID
---- = TER.TERRITORY_ID 
----WHERE OPO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND OOA.OA_DATE >= @START_DATE AND 
----OOA.OA_DATE <= @END_DATE;
----GO
---------------------------------------------------------------------
----IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Get_Total_Qty_Brand_By_Invoice' AND TYPE = 'P')
----DROP PROCEDURE Usp_Get_Total_Qty_Brand_By_Invoice
----GO
----CREATE PROCEDURE Usp_Get_Total_Qty_Brand_By_Invoice---TANGGAL DI CONVERSI JADI DECIMAL TAHUN BULAN TANGGAL
----@AGREEMENT_NO VARCHAR(32)
----AS
------PRT003 Setting referer invoice ke referencePO di InvoiceHeader ReferencePO = 1,NomorPO = 0
----IF (SELECT AllowRules FROM RefBussinesRules WHERE CodeApp = 'RPT003') = 1
----BEGIN
----SET DEADLOCK_PRIORITY NORMAL;SET NOCOUNT ON; SET ARITHABORT OFF ; SET ANSI_WARNINGS OFF ;
----        
----   SELECT DISTRIBUTOR_ID,BRAND_ID,SUM(QTY)AS TOTAL_INVOICE
----   FROM(
----		   SELECT PO.DISTRIBUTOR_ID,PO.BRAND_ID,PO.BRANDPACK_ID,(ISNULL(INVOICE.QTY,0)/PO.SPPB_QTY) * PO.PO_ORIGINAL_QTY AS QTY
----		   FROM tempdb..##T_MASTER_PO PO
----		   INNER JOIN (SELECT INV.PONUMBER,INV.REFERENCE,Tmbp.BRANDPACK_ID_DTS AS BRANDPACK_ID,INV.QTY 
----						FROM ##T_SELECT_INVOICE INV INNER JOIN COMPARE_ITEM Tmbp 
----						ON INV.BRANDPACK_ID =  Tmbp.BRANDPACK_ID_ACCPAC AND INV.QTY > 0
----    				   )INVOICE
----		   ON PO.BRANDPACK_ID = INVOICE.BRANDPACK_ID
----		   AND ((PO.PO_REF_NO = INVOICE.PONUMBER)OR(PO.RUN_NUMBER = INVOICE.REFERENCE))
----		   WHERE PO.DISTRIBUTOR_ID = SOME( SELECT DISTRIBUTOR_ID FROM Nufarm.DBO.DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO )
----       )INV
----   GROUP BY DISTRIBUTOR_ID,BRAND_ID
----	   OPTION(KEEP PLAN);	
----END 
----
----GO
---------------------------------------------------------------------------------------------
----IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Create_View_Distributor_Report_1' AND TYPE = 'P')
----DROP PROCEDURE Usp_Create_View_Distributor_Report_1
----GO
----CREATE PROCEDURE Usp_Create_View_Distributor_Report_1
----@StartDate DateTime,
----@EndDate DateTime
----AS 
----SET NOCOUNT ON;
----IF (@StartDate IS NOT NULL AND @EndDate IS NOT NULL)
----BEGIN
----	 SELECT DG.REGIONAL_AREA,TER.TERRITORY_AREA,OPO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,OPO.PO_REF_NO,OPO.PO_REF_DATE,
----	OOA.OA_ID AS OA_REF_NO,OOA.OA_DATE,BR.BRAND_ID,BR.BRAND_NAME,BB.BRANDPACK_ID,BB.BRANDPACK_NAME,OPB.PO_ORIGINAL_QTY AS PO_QTY,OOB.QTY_EVEN,
----	OPB.PO_PRICE_PERQTY AS PRICE,OOB.UNIT,OOB.REMARK,ISNULL(OA_DISC.REMAIND_QTY,0)AS REMAIND_QTY,OA_DISC.GIVEN_AGREEMENT,OA_DISC.[QUARTER],
----	OA_DISC.[SEMESTER],OA_DISC.YEARLY,OA_DISC.RPK,OA_DISC.DK,OA_DISC.CP_D,OA_DISC.CP_D_S,OA_DISC.PKPP,OPB.GIVEN_PKPP_VALUE,OA_DISC.CP_R,
----	OA_DISC.OTHER
----	--(OA_DISC.GIVEN_AGREEMENT * OOB.OA_PRICE_PERQTY) AS GIVEN_AMOUNT,
----	--(OA_DISC.[QUARTER]* OOB.OA_PRICE_PERQTY) AS QUARTER_AMOUNT,
----	--(OA_DISC.[SEMESTER] * OOB.OA_PRICE_PERQTY) AS SEMESTER_AMOUNT,
----	--(OA_DISC.[YEARLY] * OOB.OA_PRICE_PERQTY) AS YEARLY_AMOUNT,
----	--(OA_DISC.RPK * OOB.OA_PRICE_PERQTY) AS RPK_AMOUNT,
----	--(OA_DISC.DK * OOB.OA_PRICE_PERQTY) AS DK_AMOUNT,
----	--(OA_DISC.CP_D * OOB.OA_PRICE_PERQTY) AS CP_D_AMOUNT,
----	--(OA_DISC.PKPP * OOB.OA_PRICE_PERQTY) AS PKPP_AMOUNT,
----	--(OA_DISC.CP_R * OOB.OA_PRICE_PERQTY) AS CP_R_AMOUNT,
----	--(OA_DISC.OTHER * OOB.OA_PRICE_PERQTY) AS OTHER_AMOUNT,
----	--OOB.OA_ORIGINAL_QTY * OOB.OA_PRICE_PERQTY AS OA_AMOUNT,
----	--ISNULL(OA_DISC.REMAIND_QTY,0) * OOB.OA_PRICE_PERQTY AS REMAIND_AMOUNT,
----	--ISNULL(T_DISC.TOTAL_DISC,0)AS TOTAL_DISC,
----	--ISNULL(T_DISC.TOTAL_DISC,0) * OOB.OA_PRICE_PERQTY AS TOTAL_DISC_AMOUNT,
----	--OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_DELIVERY,
----	--(OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_DELIVERY,
----	--OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_SALES,
----	--(OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_SALES         
----	FROM ORDR_PURCHASE_ORDER OPO INNER JOIN DIST_DISTRIBUTOR DR ON OPO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
----	 INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = OPO.PO_REF_NO LEFT OUTER JOIN ORDR_ORDER_ACCEPTANCE OOA
----	ON OOA.PO_REF_NO = OPB.PO_REF_NO --INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
----	LEFT OUTER JOIN ORDR_OA_BRANDPACK OOB ON OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID AND OOB.OA_ID = OOA.OA_ID
----	INNER JOIN BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID --INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD ON OOBD.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
----	LEFT OUTER JOIN
----	               (
----	                 SELECT OA_BRANDPACK_ID,
----	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'RMOA' THEN DISC_QTY ELSE 0 END)AS REMAIND_QTY,
----	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'G' THEN DISC_QTY ELSE 0 END)AS GIVEN_AGREEMENT, 
----	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Q1' THEN DISC_QTY WHEN 'Q2' THEN DISC_QTY WHEN 'Q3' THEN DISC_QTY
----	                                     	  WHEN 'Q4' THEN DISC_QTY ELSE 0 END)AS [QUARTER],
----	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'S1' THEN DISC_QTY WHEN 'S2' THEN DISC_QTY ELSE 0 END)AS [SEMESTER], 
----	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Y' THEN DISC_QTY ELSE 0 END)AS YEARLY, 
----	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'MG' THEN DISC_QTY ELSE 0 END)AS RPK,
----					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'DK' THEN DISC_QTY ELSE 0 END)AS DK,
----	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CP' THEN DISC_QTY WHEN 'TD' THEN DISC_QTY ELSE 0 END)AS CP_D,
----					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CS' THEN DISC_QTY WHEN 'TS' THEN DISC_QTY WHEN 'SC' THEN DISC_QTY ELSE 0 END)AS CP_D_S,
----					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'KP' THEN DISC_QTY ELSE 0 END)AS PKPP,
----					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CR' THEN DISC_QTY ELSE 0 END) AS CP_R,
----					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'O'  THEN DISC_QTY ELSE 0 END)AS OTHER
----					 FROM ORDR_OA_BRANDPACK_DISC GROUP BY OA_BRANDPACK_ID
----	           	)OA_DISC ON OA_DISC.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
----	LEFT OUTER JOIN(
----	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
----	                 WHERE GQSY_SGT_P_FLAG != 'RMOA'
----	                 GROUP BY OA_BRANDPACK_ID
----	                )T_DISC ON OOB.OA_BRANDPACK_ID = T_DISC.OA_BRANDPACK_ID
----	LEFT OUTER JOIN( 
----	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
----	                 WHERE GQSY_SGT_P_FLAG = 'RMOA'
----	                 GROUP BY OA_BRANDPACK_ID
----	                )OA_LEFT ON OA_LEFT.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID 
----	INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
----	INNER JOIN DIST_REGIONAL DG ON DG.REGIONAL_ID = TER.REGIONAL_ID 
----	INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
----	WHERE OPO.PO_REF_DATE >= @StartDate AND OPO.PO_REF_DATE <= @EndDate
----END
----ELSE IF (@StartDate IS NOT NULL)
----BEGIN
----	 SELECT DG.REGIONAL_AREA,TER.TERRITORY_AREA,OPO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,OPO.PO_REF_NO,OPO.PO_REF_DATE,
----	OOA.OA_ID AS OA_REF_NO,OOA.OA_DATE,BR.BRAND_ID,BR.BRAND_NAME,BB.BRANDPACK_ID,BB.BRANDPACK_NAME,OPB.PO_ORIGINAL_QTY AS PO_QTY,OOB.QTY_EVEN,
----	OPB.PO_PRICE_PERQTY AS PRICE,OOB.UNIT,OOB.REMARK,ISNULL(OA_DISC.REMAIND_QTY,0)AS REMAIND_QTY,OA_DISC.GIVEN_AGREEMENT,OA_DISC.[QUARTER],
----	OA_DISC.[SEMESTER],OA_DISC.YEARLY,OA_DISC.RPK,OA_DISC.DK,OA_DISC.CP_D,OA_DISC.CP_D_S,OA_DISC.PKPP,OPB.GIVEN_PKPP_VALUE,OA_DISC.CP_R,
----	OA_DISC.OTHER
----	--(OA_DISC.GIVEN_AGREEMENT * OOB.OA_PRICE_PERQTY) AS GIVEN_AMOUNT,
----	--(OA_DISC.[QUARTER]* OOB.OA_PRICE_PERQTY) AS QUARTER_AMOUNT,
----	--(OA_DISC.[SEMESTER] * OOB.OA_PRICE_PERQTY) AS SEMESTER_AMOUNT,
----	--(OA_DISC.[YEARLY] * OOB.OA_PRICE_PERQTY) AS YEARLY_AMOUNT,
----	--(OA_DISC.RPK * OOB.OA_PRICE_PERQTY) AS RPK_AMOUNT,
----	--(OA_DISC.DK * OOB.OA_PRICE_PERQTY) AS DK_AMOUNT,
----	--(OA_DISC.CP_D * OOB.OA_PRICE_PERQTY) AS CP_D_AMOUNT,
----	--(OA_DISC.PKPP * OOB.OA_PRICE_PERQTY) AS PKPP_AMOUNT,
----	--(OA_DISC.CP_R * OOB.OA_PRICE_PERQTY) AS CP_R_AMOUNT,
----	--(OA_DISC.OTHER * OOB.OA_PRICE_PERQTY) AS OTHER_AMOUNT,
----	--OOB.OA_ORIGINAL_QTY * OOB.OA_PRICE_PERQTY AS OA_AMOUNT,
----	--ISNULL(OA_DISC.REMAIND_QTY,0) * OOB.OA_PRICE_PERQTY AS REMAIND_AMOUNT,
----	--ISNULL(T_DISC.TOTAL_DISC,0)AS TOTAL_DISC,
----	--ISNULL(T_DISC.TOTAL_DISC,0) * OOB.OA_PRICE_PERQTY AS TOTAL_DISC_AMOUNT,
----	--OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_DELIVERY,
----	--(OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_DELIVERY,
----	--OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_SALES,
----	--(OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_SALES              
----	FROM ORDR_PURCHASE_ORDER OPO INNER JOIN DIST_DISTRIBUTOR DR ON OPO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
----	 INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = OPO.PO_REF_NO LEFT OUTER JOIN ORDR_ORDER_ACCEPTANCE OOA
----	ON OOA.PO_REF_NO = OPB.PO_REF_NO --INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
----	LEFT OUTER JOIN ORDR_OA_BRANDPACK OOB ON OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID AND OOB.OA_ID = OOA.OA_ID
----	INNER JOIN BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID --INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD ON OOBD.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
----	LEFT OUTER JOIN
----	               (
----	                 SELECT OA_BRANDPACK_ID,
----	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'RMOA' THEN DISC_QTY ELSE 0 END)AS REMAIND_QTY,
----	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'G' THEN DISC_QTY ELSE 0 END)AS GIVEN_AGREEMENT, 
----	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Q1' THEN DISC_QTY WHEN 'Q2' THEN DISC_QTY WHEN 'Q3' THEN DISC_QTY
----	                                     	  WHEN 'Q4' THEN DISC_QTY ELSE 0 END)AS [QUARTER],
----	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'S1' THEN DISC_QTY WHEN 'S2' THEN DISC_QTY ELSE 0 END)AS [SEMESTER], 
----	           	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Y' THEN DISC_QTY ELSE 0 END)AS YEARLY, 
----	           	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'MG' THEN DISC_QTY ELSE 0 END)AS RPK,
----	             SUM(CASE GQSY_SGT_P_FLAG WHEN 'DK' THEN DISC_QTY ELSE 0 END)AS DK,
----				 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CP' THEN DISC_QTY WHEN 'TD' THEN DISC_QTY ELSE 0 END)AS CP_D,
----					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CS' THEN DISC_QTY WHEN 'TS' THEN DISC_QTY WHEN 'SC' THEN DISC_QTY ELSE 0 END)AS CP_D_S,
----	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'KP' THEN DISC_QTY ELSE 0 END)AS PKPP,
----	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CR' THEN DISC_QTY ELSE 0 END) AS CP_R,
----	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'O'  THEN DISC_QTY ELSE 0 END)AS OTHER
----	            	 FROM ORDR_OA_BRANDPACK_DISC GROUP BY OA_BRANDPACK_ID
----	           	)OA_DISC ON OA_DISC.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
----	LEFT OUTER JOIN(
----	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
----	                 WHERE GQSY_SGT_P_FLAG != 'RMOA'
----	                 GROUP BY OA_BRANDPACK_ID
----	                )T_DISC ON OOB.OA_BRANDPACK_ID = T_DISC.OA_BRANDPACK_ID
----	LEFT OUTER JOIN( 
----	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
----	                 WHERE GQSY_SGT_P_FLAG = 'RMOA'
----	                 GROUP BY OA_BRANDPACK_ID
----	                )OA_LEFT ON OA_LEFT.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID 
----	INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
----	INNER JOIN DIST_REGIONAL DG ON DG.REGIONAL_ID = TER.REGIONAL_ID 
----	INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
----	WHERE OPO.PO_REF_DATE >= @StartDate
----END
----ELSE IF (@EndDate IS NOT NULL)
----BEGIN
----  SELECT DG.REGIONAL_AREA,TER.TERRITORY_AREA,OPO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,OPO.PO_REF_NO,OPO.PO_REF_DATE,
----	OOA.OA_ID AS OA_REF_NO,OOA.OA_DATE,BR.BRAND_ID,BR.BRAND_NAME,BB.BRANDPACK_ID,BB.BRANDPACK_NAME,OPB.PO_ORIGINAL_QTY AS PO_QTY,OOB.QTY_EVEN,
----	OPB.PO_PRICE_PERQTY AS PRICE,OOB.UNIT,OOB.REMARK,ISNULL(OA_DISC.REMAIND_QTY,0)AS REMAIND_QTY,OA_DISC.GIVEN_AGREEMENT,OA_DISC.[QUARTER],
----	OA_DISC.[SEMESTER],OA_DISC.YEARLY,OA_DISC.RPK,OA_DISC.DK,OA_DISC.CP_D,OA_DISC.CP_D_S,OA_DISC.PKPP,OPB.GIVEN_PKPP_VALUE,OA_DISC.CP_R,
----	OA_DISC.OTHER
----	--(OA_DISC.GIVEN_AGREEMENT * OOB.OA_PRICE_PERQTY) AS GIVEN_AMOUNT,
----	--(OA_DISC.[QUARTER]* OOB.OA_PRICE_PERQTY) AS QUARTER_AMOUNT,
----	--(OA_DISC.[SEMESTER] * OOB.OA_PRICE_PERQTY) AS SEMESTER_AMOUNT,
----	--(OA_DISC.[YEARLY] * OOB.OA_PRICE_PERQTY) AS YEARLY_AMOUNT,
----	--(OA_DISC.RPK * OOB.OA_PRICE_PERQTY) AS RPK_AMOUNT,
----	--(OA_DISC.DK * OOB.OA_PRICE_PERQTY) AS DK_AMOUNT,
----	--(OA_DISC.CP_D * OOB.OA_PRICE_PERQTY) AS CP_D_AMOUNT,
----	--(OA_DISC.PKPP * OOB.OA_PRICE_PERQTY) AS PKPP_AMOUNT,
----	--(OA_DISC.CP_R * OOB.OA_PRICE_PERQTY) AS CP_R_AMOUNT,
----	--(OA_DISC.OTHER * OOB.OA_PRICE_PERQTY) AS OTHER_AMOUNT,
----	--OOB.OA_ORIGINAL_QTY * OOB.OA_PRICE_PERQTY AS OA_AMOUNT,
----	--ISNULL(OA_DISC.REMAIND_QTY,0) * OOB.OA_PRICE_PERQTY AS REMAIND_AMOUNT,
----	--ISNULL(T_DISC.TOTAL_DISC,0)AS TOTAL_DISC,
----	--ISNULL(T_DISC.TOTAL_DISC,0) * OOB.OA_PRICE_PERQTY AS TOTAL_DISC_AMOUNT,
----	--OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_DELIVERY,
----	--(OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_DELIVERY,
----	--OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_SALES,
----	--(OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_SALES       
----	FROM ORDR_PURCHASE_ORDER OPO INNER JOIN DIST_DISTRIBUTOR DR ON OPO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
----	 INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = OPO.PO_REF_NO LEFT OUTER JOIN ORDR_ORDER_ACCEPTANCE OOA
----	ON OOA.PO_REF_NO = OPB.PO_REF_NO --INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
----	LEFT OUTER JOIN ORDR_OA_BRANDPACK OOB ON OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID AND OOB.OA_ID = OOA.OA_ID
----	INNER JOIN BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID --INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD ON OOBD.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
----	LEFT OUTER JOIN
----	               (
----	                 SELECT OA_BRANDPACK_ID,
----	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'RMOA' THEN DISC_QTY ELSE 0 END)AS REMAIND_QTY,
----	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'G' THEN DISC_QTY ELSE 0 END)AS GIVEN_AGREEMENT, 
----	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Q1' THEN DISC_QTY WHEN 'Q2' THEN DISC_QTY WHEN 'Q3' THEN DISC_QTY
----	                                     	  WHEN 'Q4' THEN DISC_QTY ELSE 0 END)AS [QUARTER],
----	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'S1' THEN DISC_QTY WHEN 'S2' THEN DISC_QTY ELSE 0 END)AS [SEMESTER], 
----	           	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Y' THEN DISC_QTY ELSE 0 END)AS YEARLY, 
----	           	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'MG' THEN DISC_QTY ELSE 0 END)AS RPK,
----	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'DK' THEN DISC_QTY ELSE 0 END)AS DK,
----	        SUM(CASE GQSY_SGT_P_FLAG WHEN 'CP' THEN DISC_QTY WHEN 'TD' THEN DISC_QTY ELSE 0 END)AS CP_D,
----					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CS' THEN DISC_QTY WHEN 'TS' THEN DISC_QTY WHEN 'SC' THEN DISC_QTY ELSE 0 END)AS CP_D_S,
----	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'KP' THEN DISC_QTY ELSE 0 END)AS PKPP,
----	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CR' THEN DISC_QTY ELSE 0 END) AS CP_R,
----	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'O'  THEN DISC_QTY ELSE 0 END)AS OTHER
----	            	 FROM ORDR_OA_BRANDPACK_DISC GROUP BY OA_BRANDPACK_ID
----	           	)OA_DISC ON OA_DISC.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
----	LEFT OUTER JOIN(
----	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
----	                 WHERE GQSY_SGT_P_FLAG != 'RMOA'
----	                 GROUP BY OA_BRANDPACK_ID
----	                )T_DISC ON OOB.OA_BRANDPACK_ID = T_DISC.OA_BRANDPACK_ID
----	LEFT OUTER JOIN( 
----	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
----	                 WHERE GQSY_SGT_P_FLAG = 'RMOA'
----	                 GROUP BY OA_BRANDPACK_ID
----	                )OA_LEFT ON OA_LEFT.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID 
----	INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
----	INNER JOIN DIST_REGIONAL DG ON DG.REGIONAL_ID = TER.REGIONAL_ID 
----	INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
----	WHERE OPO.PO_REF_DATE <= @EndDate
----END
----GO
-----------------------------------------------------------------------
----IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Create_View_Report_Per_OA_Ref_No' AND TYPE = 'P')
----DROP PROCEDURE Usp_Create_View_Report_Per_OA_Ref_No
----GO
----CREATE PROCEDURE Usp_Create_View_Report_Per_OA_Ref_No
----@OA_REF_NO VARCHAR(30)
----AS
----EXECUTE sp_executesql
----N'SELECT OPO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,OPO.PO_REF_NO,OPO.PO_REF_DATE,
----OOA.OA_ID AS OA_REF_NO,OOA.OA_DATE,BB.BRANDPACK_NAME,OOB.OA_ORIGINAL_QTY ,OOB.QTY_EVEN,
----OOB.OA_PRICE_PERQTY AS PRICE,OOB.UNIT,OOB.REMARK,OA_DISC.REMAIND_QTY,OA_DISC.GIVEN_AGREEMENT,OA_DISC.[QUARTER],
----OA_DISC.[SEMESTER],OA_DISC.YEARLY,OA_DISC.RPK,OA_DISC.DK,OA_DISC.CP_D,OA_DISC.PKPP,OA_DISC.CP_R,
----OA_DISC.OTHER,(OA_DISC.GIVEN_AGREEMENT * OOB.OA_PRICE_PERQTY) AS GIVEN_AMOUNT,
----(OA_DISC.[QUARTER]* OOB.OA_PRICE_PERQTY) AS QUARTER_AMOUNT,
----(OA_DISC.[SEMESTER] * OOB.OA_PRICE_PERQTY) AS SEMESTER_AMOUNT,
----(OA_DISC.[YEARLY] * OOB.OA_PRICE_PERQTY) AS YEARLY_AMOUNT,
----(OA_DISC.RPK * OOB.OA_PRICE_PERQTY) AS RPK_AMOUNT,
----(OA_DISC.DK * OOB.OA_PRICE_PERQTY) AS DK_AMOUNT,
----(OA_DISC.CP_D * OOB.OA_PRICE_PERQTY) AS CP_D_AMOUNT,
----(OA_DISC.PKPP * OOB.OA_PRICE_PERQTY) AS PKPP_AMOUNT,
----(OA_DISC.CP_R * OOB.OA_PRICE_PERQTY) AS CP_R_AMOUNT,
----(OA_DISC.OTHER * OOB.OA_PRICE_PERQTY) AS OTHER_AMOUNT,
----(OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS OA_AMOUNT,
----(T_DISC.TOTAL_DISC * OOB.OA_PRICE_PERQTY) AS TOTAL_DISC_AMOUNT      
----FROM ORDR_PURCHASE_ORDER OPO INNER JOIN DIST_DISTRIBUTOR DR ON OPO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
---- INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = OPO.PO_REF_NO INNER JOIN ORDR_ORDER_ACCEPTANCE OOA
----ON OOA.PO_REF_NO = OPB.PO_REF_NO --INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
----INNER JOIN ORDR_OA_BRANDPACK OOB ON OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID AND OOB.OA_ID = OOA.OA_ID
----INNER JOIN BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID --INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD ON OOBD.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
----LEFT OUTER JOIN
----               (
----                 SELECT OA_BRANDPACK_ID,
----                 SUM(CASE GQSY_SGT_P_FLAG WHEN ''RMOA'' THEN DISC_QTY ELSE 0 END)AS REMAIND_QTY,
----                 SUM(CASE GQSY_SGT_P_FLAG WHEN ''G'' THEN DISC_QTY ELSE 0 END)AS GIVEN_AGREEMENT, 
----            	 SUM(CASE GQSY_SGT_P_FLAG WHEN ''Q1'' THEN DISC_QTY WHEN ''Q2'' THEN DISC_QTY WHEN ''Q3'' THEN DISC_QTY
----                                     	  WHEN ''Q4'' THEN DISC_QTY ELSE 0 END)AS [QUARTER],
----            	 SUM(CASE GQSY_SGT_P_FLAG WHEN ''S1'' THEN DISC_QTY WHEN ''S2'' THEN DISC_QTY ELSE 0 END)AS [SEMESTER], 
----           	 SUM(CASE GQSY_SGT_P_FLAG WHEN ''Y'' THEN DISC_QTY ELSE 0 END)AS YEARLY, 
----           	 SUM(CASE GQSY_SGT_P_FLAG WHEN ''MG'' THEN DISC_QTY ELSE 0 END)AS RPK,
----            	 SUM(CASE GQSY_SGT_P_FLAG WHEN ''DK'' THEN DISC_QTY ELSE 0 END)AS DK,
----           	 SUM(CASE GQSY_SGT_P_FLAG WHEN ''CP''  THEN DISC_QTY WHEN ''SC'' THEN DISC_QTY  WHEN ''TS''  THEN DISC_QTY WHEN ''TD'' THEN DISC_QTY WHEN ''CS'' THEN DISC_QTY ELSE 0 END)AS CP_D,
----		 SUM(CASE GQSY_SGT_P_FLAG WHEN ''KP'' THEN DISC_QTY ELSE 0 END)AS PKPP,
----            	 SUM(CASE GQSY_SGT_P_FLAG WHEN ''CR'' THEN DISC_QTY ELSE 0 END) AS CP_R,
----            	 SUM(CASE GQSY_SGT_P_FLAG WHEN ''O''  THEN DISC_QTY ELSE 0 END)AS OTHER
----            	 FROM ORDR_OA_BRANDPACK_DISC GROUP BY OA_BRANDPACK_ID
----           	)OA_DISC ON OA_DISC.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
----LEFT OUTER JOIN(
----                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
----                 WHERE GQSY_SGT_P_FLAG != ''RMOA''
----                 GROUP BY OA_BRANDPACK_ID
----                )T_DISC ON OOB.OA_BRANDPACK_ID = T_DISC.OA_BRANDPACK_ID
----LEFT OUTER JOIN( 
----                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
----                 WHERE GQSY_SGT_P_FLAG = ''RMOA''
----                 GROUP BY OA_BRANDPACK_ID
----                )OA_LEFT ON OA_LEFT.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID 
----WHERE OOA.OA_ID = @V_OA_REF_NO OPTION(KEEPFIXED PLAN)',N'@V_OA_REF_NO VARCHAR(30)',@V_OA_REF_NO = @OA_REF_NO
----GO
---------------------------------------------------------------------------------------
----IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Sp_Getview_OA_BRANDPACK' AND TYPE = 'P')
----DROP PROCEDURE Sp_Getview_OA_BRANDPACK
----GO
----CREATE PROCEDURE Sp_Getview_OA_BRANDPACK
----@DISTRIBUTOR_ID VARCHAR(10),--@AGREEMENT_NO VARCHAR(25),
----@GQSY_SGT_P_FLAG VARCHAR(5),
----@START_DATE SMALLDATETIME,
----@END_DATE SMALLDATETIME
----AS
----SET NOCOUNT ON;
----IF (@GQSY_SGT_P_FLAG IS NOT NULL)
----   IF (@GQSY_SGT_P_FLAG = 'CS' OR @GQSY_SGT_P_FLAG = 'TS')
----		BEGIN
----			SELECT PO.PO_REF_NO,OA.OA_ID AS OA_REF_NO,OA.OA_DATE,BB.BRANDPACK_NAME,OOB.OA_BRANDPACK_ID,OOB.QTY_EVEN + ISNULL(OOBD.LEFT_QTY,0) AS QUANTITY,
----			(OOB.QTY_EVEN + ISNULL(OOBD.LEFT_QTY,0)) * OOB.OA_PRICE_PERQTY AS AMOUNT,OOB.AGREE_DISC_QTY,
----			OOB.AGREE_DISC_QTY * OOB.OA_PRICE_PERQTY AS AMOUNT_AGREE_DISC_QTY,OOB.PROG_DISC_QTY,
----			OOB.PROG_DISC_QTY * OOB.OA_PRICE_PERQTY AS AMOUNT_PROG_DISC_QTY,OOB.OTHER_DISC_QTY,
----			OOB.OTHER_DISC_QTY * OOB.OA_PRICE_PERQTY AS AMOUNT_OTHER_DISC_QTY,
----			OOB.AGREE_DISC_QTY + OOB.PROG_DISC_QTY + OOB.OTHER_DISC_QTY AS TOTAL_DISC_QTY,
----			(OOB.AGREE_DISC_QTY + OOB.PROG_DISC_QTY + OOB.OTHER_DISC_QTY) * OOB.OA_PRICE_PERQTY AS TOTAL_DISC_AMOUNT,
----			ISNULL(OOR.LEFT_QTY,0) AS REMAINING,ISNULL(OOR.LEFT_QTY,0) * OOB.OA_PRICE_PERQTY AS AMOUNT_REMAINING
----			FROM ORDR_PURCHASE_ORDER PO INNER JOIN ORDR_PO_BRANDPACK OPB ON PO.PO_REF_NO = OPB.PO_REF_NO
----			INNER JOIN BRND_BRANDPACK BB ON BB.BRANDPACK_ID = OPB.BRANDPACK_ID INNER JOIN 
----			ORDR_ORDER_ACCEPTANCE OA ON PO.PO_REF_NO = OA.PO_REF_NO INNER JOIN ORDR_OA_BRANDPACK OOB
----			ON OOB.OA_ID = OA.OA_ID AND OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID
----			LEFT OUTER JOIN(
----					SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS LEFT_QTY
----        					FROM ORDR_OA_BRANDPACK_DISC WHERE GQSY_SGT_P_FLAG = 'RMOA'
----					GROUP BY OA_BRANDPACK_ID
----         				)OOBD
----			ON OOBD.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
----			LEFT OUTER JOIN(
----					SELECT OA_BRANDPACK_ID,ISNULL(SUM(LEFT_QTY),0)AS LEFT_QTY
----					FROM ORDR_OA_REMAINDING GROUP BY OA_BRANDPACK_ID
----               				)OOR
----			ON OOB.OA_BRANDPACK_ID = OOR.OA_BRANDPACK_ID
----			WHERE PO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND OA.OA_DATE >= @START_DATE AND OA.OA_DATE <= @END_DATE
----				AND EXISTS(SELECT OA_BRANDPACK_ID FROM ORDR_OA_BRANDPACK_DISC WHERE OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
----			   AND GQSY_SGT_P_FLAG IN('TS','CS'))
----		END
----	 ELSE IF (@GQSY_SGT_P_FLAG = 'CP' OR @GQSY_SGT_P_FLAG = 'TD')
----		BEGIN
----			SELECT PO.PO_REF_NO,OA.OA_ID AS OA_REF_NO,OA.OA_DATE,BB.BRANDPACK_NAME,OOB.OA_BRANDPACK_ID,OOB.QTY_EVEN + ISNULL(OOBD.LEFT_QTY,0) AS QUANTITY,
----			(OOB.QTY_EVEN + ISNULL(OOBD.LEFT_QTY,0)) * OOB.OA_PRICE_PERQTY AS AMOUNT,OOB.AGREE_DISC_QTY,
----			OOB.AGREE_DISC_QTY * OOB.OA_PRICE_PERQTY AS AMOUNT_AGREE_DISC_QTY,OOB.PROG_DISC_QTY,
----			OOB.PROG_DISC_QTY * OOB.OA_PRICE_PERQTY AS AMOUNT_PROG_DISC_QTY,OOB.OTHER_DISC_QTY,
----			OOB.OTHER_DISC_QTY * OOB.OA_PRICE_PERQTY AS AMOUNT_OTHER_DISC_QTY,
----			OOB.AGREE_DISC_QTY + OOB.PROG_DISC_QTY + OOB.OTHER_DISC_QTY AS TOTAL_DISC_QTY,
----			(OOB.AGREE_DISC_QTY + OOB.PROG_DISC_QTY + OOB.OTHER_DISC_QTY) * OOB.OA_PRICE_PERQTY AS TOTAL_DISC_AMOUNT,
----			ISNULL(OOR.LEFT_QTY,0) AS REMAINING,ISNULL(OOR.LEFT_QTY,0) * OOB.OA_PRICE_PERQTY AS AMOUNT_REMAINING
----			FROM ORDR_PURCHASE_ORDER PO INNER JOIN ORDR_PO_BRANDPACK OPB ON PO.PO_REF_NO = OPB.PO_REF_NO
----			INNER JOIN BRND_BRANDPACK BB ON BB.BRANDPACK_ID = OPB.BRANDPACK_ID INNER JOIN 
----			ORDR_ORDER_ACCEPTANCE OA ON PO.PO_REF_NO = OA.PO_REF_NO INNER JOIN ORDR_OA_BRANDPACK OOB
----			ON OOB.OA_ID = OA.OA_ID AND OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID
----			LEFT OUTER JOIN(
----					SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS LEFT_QTY
----        					FROM ORDR_OA_BRANDPACK_DISC WHERE GQSY_SGT_P_FLAG = 'RMOA'
----					GROUP BY OA_BRANDPACK_ID
----         				)OOBD
----			ON OOBD.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
----			LEFT OUTER JOIN(
----					SELECT OA_BRANDPACK_ID,ISNULL(SUM(LEFT_QTY),0)AS LEFT_QTY
----					FROM ORDR_OA_REMAINDING GROUP BY OA_BRANDPACK_ID
----               				)OOR
----			ON OOB.OA_BRANDPACK_ID = OOR.OA_BRANDPACK_ID
----			WHERE PO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND OA.OA_DATE >= @START_DATE AND OA.OA_DATE <= @END_DATE
----				AND EXISTS(SELECT OA_BRANDPACK_ID FROM ORDR_OA_BRANDPACK_DISC WHERE OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
----			   AND GQSY_SGT_P_FLAG IN('TD','CP'))
----		END
----	ELSE
----		BEGIN
----		SELECT PO.PO_REF_NO,OA.OA_ID AS OA_REF_NO,OA.OA_DATE,BB.BRANDPACK_NAME,OOB.OA_BRANDPACK_ID,OOB.QTY_EVEN + ISNULL(OOBD.LEFT_QTY,0) AS QUANTITY,
----		(OOB.QTY_EVEN + ISNULL(OOBD.LEFT_QTY,0)) * OOB.OA_PRICE_PERQTY AS AMOUNT,OOB.AGREE_DISC_QTY,
----		OOB.AGREE_DISC_QTY * OOB.OA_PRICE_PERQTY AS AMOUNT_AGREE_DISC_QTY,OOB.PROG_DISC_QTY,
----		OOB.PROG_DISC_QTY * OOB.OA_PRICE_PERQTY AS AMOUNT_PROG_DISC_QTY,OOB.OTHER_DISC_QTY,
----		OOB.OTHER_DISC_QTY * OOB.OA_PRICE_PERQTY AS AMOUNT_OTHER_DISC_QTY,
----		OOB.AGREE_DISC_QTY + OOB.PROG_DISC_QTY + OOB.OTHER_DISC_QTY AS TOTAL_DISC_QTY,
----		(OOB.AGREE_DISC_QTY + OOB.PROG_DISC_QTY + OOB.OTHER_DISC_QTY) * OOB.OA_PRICE_PERQTY AS TOTAL_DISC_AMOUNT,
----		ISNULL(OOR.LEFT_QTY,0) AS REMAINING,ISNULL(OOR.LEFT_QTY,0) * OOB.OA_PRICE_PERQTY AS AMOUNT_REMAINING
----		FROM ORDR_PURCHASE_ORDER PO INNER JOIN ORDR_PO_BRANDPACK OPB ON PO.PO_REF_NO = OPB.PO_REF_NO
----		INNER JOIN BRND_BRANDPACK BB ON BB.BRANDPACK_ID = OPB.BRANDPACK_ID INNER JOIN 
----		ORDR_ORDER_ACCEPTANCE OA ON PO.PO_REF_NO = OA.PO_REF_NO INNER JOIN ORDR_OA_BRANDPACK OOB
----		ON OOB.OA_ID = OA.OA_ID AND OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID
----		LEFT OUTER JOIN(
----				SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS LEFT_QTY
----        				FROM ORDR_OA_BRANDPACK_DISC WHERE GQSY_SGT_P_FLAG = 'RMOA'
----				GROUP BY OA_BRANDPACK_ID
----         			)OOBD
----		ON OOBD.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
----		LEFT OUTER JOIN(
----				SELECT OA_BRANDPACK_ID,ISNULL(SUM(LEFT_QTY),0)AS LEFT_QTY
----				FROM ORDR_OA_REMAINDING GROUP BY OA_BRANDPACK_ID
----               			)OOR
----		ON OOB.OA_BRANDPACK_ID = OOR.OA_BRANDPACK_ID
----		WHERE PO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND OA.OA_DATE >= @START_DATE AND OA.OA_DATE <= @END_DATE
----		AND EXISTS(SELECT OA_BRANDPACK_ID FROM ORDR_OA_BRANDPACK_DISC WHERE OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
----			   AND GQSY_SGT_P_FLAG LIKE @GQSY_SGT_P_FLAG + '%')
----	   END
----ELSE
---- BEGIN
----   	SELECT PO.PO_REF_NO,OA.OA_ID AS OA_REF_NO,OA.OA_DATE,BB.BRANDPACK_NAME,OOB.OA_BRANDPACK_ID,OOB.QTY_EVEN + ISNULL(OOBD.LEFT_QTY,0) AS QUANTITY,
----	(OOB.QTY_EVEN + ISNULL(OOBD.LEFT_QTY,0)) * OOB.OA_PRICE_PERQTY AS AMOUNT,OOB.AGREE_DISC_QTY,
----	OOB.AGREE_DISC_QTY * OOB.OA_PRICE_PERQTY AS AMOUNT_AGREE_DISC_QTY,OOB.PROG_DISC_QTY,
----	OOB.PROG_DISC_QTY * OOB.OA_PRICE_PERQTY AS AMOUNT_PROG_DISC_QTY,OOB.OTHER_DISC_QTY,
----	OOB.OTHER_DISC_QTY * OOB.OA_PRICE_PERQTY AS AMOUNT_OTHER_DISC_QTY,
----	OOB.AGREE_DISC_QTY + OOB.PROG_DISC_QTY + OOB.OTHER_DISC_QTY AS TOTAL_DISC_QTY,
----	(OOB.AGREE_DISC_QTY + OOB.PROG_DISC_QTY + OOB.OTHER_DISC_QTY) * OOB.OA_PRICE_PERQTY AS TOTAL_DISC_AMOUNT,
----	ISNULL(OOR.LEFT_QTY,0) AS REMAINING,ISNULL(OOR.LEFT_QTY,0) * OOB.OA_PRICE_PERQTY AS AMOUNT_REMAINING
----	FROM ORDR_PURCHASE_ORDER PO INNER JOIN ORDR_PO_BRANDPACK OPB ON PO.PO_REF_NO = OPB.PO_REF_NO
----	INNER JOIN BRND_BRANDPACK BB ON BB.BRANDPACK_ID = OPB.BRANDPACK_ID INNER JOIN 
----	ORDR_ORDER_ACCEPTANCE OA ON PO.PO_REF_NO = OA.PO_REF_NO INNER JOIN ORDR_OA_BRANDPACK OOB
----	ON OOB.OA_ID = OA.OA_ID AND OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID
----	LEFT OUTER JOIN(
----			SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS LEFT_QTY
----               	        FROM ORDR_OA_BRANDPACK_DISC WHERE GQSY_SGT_P_FLAG = 'RMOA'
----                	GROUP BY OA_BRANDPACK_ID
----                	)OOBD
----	ON OOBD.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
----	LEFT OUTER JOIN(
----			SELECT OA_BRANDPACK_ID,ISNULL(SUM(LEFT_QTY),0)AS LEFT_QTY
----			FROM ORDR_OA_REMAINDING
----			GROUP BY OA_BRANDPACK_ID
----               		)OOR
----	ON OOB.OA_BRANDPACK_ID = OOR.OA_BRANDPACK_ID
----	WHERE PO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND OA.OA_DATE >= @START_DATE AND OA.OA_DATE <= @END_DATE
----
----END
----GO
-----------------------------------------------------------------------------------------------
--IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'INACTIVE' AND TABLE_NAME = 'DIST_REGIONAL')
--BEGIN
--ALTER TABLE DIST_REGIONAL ADD INACTIVE BIT NULL;
--END
--GO
--UPDATE DIST_REGIONAL SET INACTIVE = 0 WHERE INACTIVE IS NULL;
--GO
--
--
--IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'INACTIVE' AND TABLE_NAME = 'TERRITORY_MANAGER')
--BEGIN
--ALTER TABLE TERRITORY_MANAGER ADD INACTIVE BIT NULL;
--END
--GO
--
--IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'INACTIVE' AND TABLE_NAME = 'DIST_DISTRIBUTOR')
--BEGIN
--ALTER TABLE DIST_DISTRIBUTOR ADD INACTIVE BIT NULL;
--END
--GO
--
--if NOT exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[FS]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
--BEGIN
--CREATE TABLE [dbo].[FS] (
--	[FS_ID] [varchar] (16) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
--	[FS_NAME] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
--	[CUR_TERRITORY_ID] [varchar] (10) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
--	[HP] [varchar] (16) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
--	[INACTIVE] [bit] NOT NULL ,
--	[CREATE_DATE] [smalldatetime] NOT NULL ,
--	[CREATE_BY] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
--	[MODIFY_DATE] [smalldatetime] NULL ,
--	[MODIFY_BY] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NULL 
--) ON [PRIMARY] ;
--
--
-- CREATE  CLUSTERED  INDEX [IX_FS] ON [dbo].[FS]([FS_NAME], [CUR_TERRITORY_ID]) ON [PRIMARY];
--
--ALTER TABLE [dbo].[FS] ADD 
--	CONSTRAINT [PK_FS] PRIMARY KEY  NONCLUSTERED 
--	(
--		[FS_ID]
--	)  ON [PRIMARY] ;
--END
--GO
IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'END_DATE' AND TABLE_NAME = 'DIST_PLANT_PRICE')
BEGIN
ALTER TABLE DIST_PLANT_PRICE ADD END_DATE SMALLDATETIME NULL;
END
GO
----------------------------------------------------
IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'Uv_Price_Distributor')
DROP VIEW Uv_Price_Distributor
GO
CREATE VIEW Uv_Price_Distributor 
AS
SELECT DPP.IDApp,DPP.PRICE_TAG,DPP.BRANDPACK_ID,BP.BRANDPACK_NAME,DPP.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,
DPP.PLANTATION_ID,PL.PLANTATION_NAME,'PLANTATION_AREA' = CASE WHEN TER0.TERRITORY_AREA IS NOT NULL THEN TER0.TERRITORY_AREA ELSE DR2.TERRITORY_AREA END,
DPP.PRICE,DPP.START_DATE,DPP.END_DATE,DPP.IncludeDPD

FROM DIST_PLANT_PRICE DPP INNER JOIN BRND_BRANDPACK BP ON DPP.BRANDPACK_ID = BP.BRANDPACK_ID
INNER JOIN DIST_DISTRIBUTOR DR ON DPP.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
INNER JOIN PLANTATION PL ON PL.PLANTATION_ID = DPP.PLANTATION_ID
LEFT OUTER JOIN(SELECT TER1.TERRITORY_AREA,PL1.PLANTATION_ID FROM TERRITORY TER1 INNER JOIN PLANTATION PL1 ON PL1.TERRITORY_ID = TER1.TERRITORY_ID)TER0
ON TER0.PLANTATION_ID = PL.PLANTATION_ID
LEFT OUTER JOIN(SELECT DR1.DISTRIBUTOR_ID,TER2.TERRITORY_AREA FROM DIST_DISTRIBUTOR DR1 INNER JOIN TERRITORY TER2 ON TER2.TERRITORY_ID = DR1.TERRITORY_ID)DR2
ON DR2.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
GO

-----------------------------------------------------------------------------------


if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[GIVEN_PROGRESSIVE]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table [dbo].[GIVEN_PROGRESSIVE]
GO

CREATE TABLE [dbo].[GIVEN_PROGRESSIVE] (
	[IDApp] [bigint] IDENTITY (1, 1) NOT FOR REPLICATION  NOT NULL ,
	[AGREE_BRAND_ID] [varchar] (32) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
	[PBQ4] [decimal](18, 3) NOT NULL ,
	[PBS2] [decimal](18, 3) NOT NULL ,
	[CPQ1] [decimal](18, 3) NOT NULL ,
	[CPQ2] [decimal](18, 3) NOT NULL ,
	[CPQ3] [decimal](18, 3) NOT NULL ,
	[CPS1] [decimal](18, 3) NOT NULL ,
	[CREATE_BY] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
	[CREATE_DATE] [smalldatetime] NOT NULL ,
	[MODIFY_BY] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
	[MODIFY_DATE] [smalldatetime] NULL 
) ON [PRIMARY]
GO

 CREATE  CLUSTERED  INDEX [IX_GIVEN_PROGRESSIVE] ON [dbo].[GIVEN_PROGRESSIVE]([AGREE_BRAND_ID]) ON [PRIMARY]
GO

ALTER TABLE [dbo].[GIVEN_PROGRESSIVE] ADD 
	CONSTRAINT [DF_GIVEN_PROGRESSIVE_PBQ4] DEFAULT (0) FOR [PBQ4],
	CONSTRAINT [DF_GIVEN_PROGRESSIVE_PBS2] DEFAULT (0) FOR [PBS2],
	CONSTRAINT [DF_GIVEN_PROGRESSIVE_CPQ1] DEFAULT (0) FOR [CPQ1],
	CONSTRAINT [DF_GIVEN_PROGRESSIVE_CPQ2] DEFAULT (0) FOR [CPQ2],
	CONSTRAINT [DF_GIVEN_PROGRESSIVE_CPQ3] DEFAULT (0) FOR [CPQ3],
	CONSTRAINT [DF_GIVEN_PROGRESSIVE_CPS1] DEFAULT (0) FOR [CPS1],
	CONSTRAINT [PK_GIVEN_PROGRESSIVE] PRIMARY KEY  NONCLUSTERED 
	(
		[IDApp]
	)  ON [PRIMARY] 
GO

ALTER TABLE [dbo].[GIVEN_PROGRESSIVE] ADD 
	CONSTRAINT [FK_GIVEN_PROGRESSIVE_AGREE_BRAND_INCLUDE] FOREIGN KEY 
	(
		[AGREE_BRAND_ID]
	) REFERENCES [dbo].[AGREE_BRAND_INCLUDE] (
		[AGREE_BRAND_ID]
	)
GO

--------------------------------------------------------------------------------------
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Get_Total_Qty_BrandPack_By_Invoice' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Total_Qty_BrandPack_By_Invoice
GO
CREATE PROCEDURE Usp_Get_Total_Qty_BrandPack_By_Invoice
@AGREEMENT_NO VARCHAR(32),
@DISTRIBUTOR_ID VARCHAR(10),
@FLAG VARCHAR(2),
@START_DATE SMALLDATETIME,
@END_DATE SMALLDATETIME
--,
--@START_DATE SMALLDATETIME,
--@END_DATE SMALLDATETIME
AS
--PRT003 Setting referer invoice ke referencePO di InvoiceHeader ReferencePO = 1,NomorPO = 0
IF (SELECT AllowRules FROM RefBussinesRules WHERE CodeApp = 'RPT003') = 1
 BEGIN 
 SET DEADLOCK_PRIORITY NORMAL;SET NOCOUNT ON;
            SELECT ABI.DISTRIBUTOR_ID,ABI.BRANDPACK_ID,ISNULL(SUM(INV.QTY),0)AS TOTAL_INVOICE,
	 ISNULL(SUM(INV.PO_ORIGINAL_QTY),0)AS TOTAL_PO_ORIGINAL FROM Nufarm.DBO.VIEW_AGREE_BRANDPACK_INCLUDE ABI
	    INNER JOIN ##T_PO_Original_By_Distributor INV
 	    ON ABI.BRANDPACK_ID = INV.BRANDPACK_ID
 	    AND ABI.DISTRIBUTOR_ID = INV.DISTRIBUTOR_ID
 	    WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO AND INV.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
 	    AND ABI.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
            GROUP BY ABI.DISTRIBUTOR_ID,ABI.BRANDPACK_ID OPTION(KEEP PLAN);
 END
 
GO
--------------------PROCEDURE BUAT MENJUMLAHKAN TOTAL BRAND DI NI87--
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Get_Total_Qty_Brand_By_Invoice' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Total_Qty_Brand_By_Invoice
GO
CREATE PROCEDURE Usp_Get_Total_Qty_Brand_By_Invoice---TANGGAL DI CONVERSI JADI DECIMAL TAHUN BULAN TANGGAL
@AGREEMENT_NO VARCHAR(32),
@START_DATE SMALLDATETIME,
@END_DATE SMALLDATETIME
AS
--PRT003 Setting referer invoice ke referencePO di InvoiceHeader ReferencePO = 1,NomorPO = 0
IF (SELECT AllowRules FROM RefBussinesRules WHERE CodeApp = 'RPT003') = 1
BEGIN
SET DEADLOCK_PRIORITY NORMAL;SET NOCOUNT ON; SET ARITHABORT OFF ; SET ANSI_WARNINGS OFF ;
        
   SELECT DISTRIBUTOR_ID,BRAND_ID,SUM(QTY)AS TOTAL_INVOICE
   FROM(
		   SELECT PO.DISTRIBUTOR_ID,PO.BRAND_ID,PO.BRANDPACK_ID,(ISNULL(INVOICE.QTY,0)/PO.SPPB_QTY) * PO.PO_ORIGINAL_QTY AS QTY
		   FROM tempdb..##T_MASTER_PO PO
		   INNER JOIN (SELECT INV.PONUMBER,INV.REFERENCE,Tmbp.BRANDPACK_ID_DTS AS BRANDPACK_ID,INV.QTY 
						FROM ##T_SELECT_INVOICE INV INNER JOIN COMPARE_ITEM Tmbp 
						ON INV.BRANDPACK_ID =  Tmbp.BRANDPACK_ID_ACCPAC AND INV.QTY > 0
    				   )INVOICE
		   ON PO.BRANDPACK_ID = INVOICE.BRANDPACK_ID
		   AND ((PO.PO_REF_NO = INVOICE.PONUMBER)OR(PO.RUN_NUMBER = INVOICE.REFERENCE))
		   WHERE PO.DISTRIBUTOR_ID = SOME( SELECT DISTRIBUTOR_ID FROM Nufarm.DBO.DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO )
		   AND PO.PO_REF_DATE >= @START_DATE AND PO.PO_REF_DATE <= @END_DATE
       )INV
   GROUP BY DISTRIBUTOR_ID,BRAND_ID
	   OPTION(KEEP PLAN);	
END 

GO
---------------------------------------------------------------------------

IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Get_Changed_Invoice_By_Brand_ID' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Changed_Invoice_By_Brand_ID
GO
CREATE PROCEDURE Usp_Get_Changed_Invoice_By_Brand_ID         
@AGREEMENT_NO VARCHAR(32),
@FLAG VARCHAR(2),
@START_DATE SMALLDATETIME,
@END_DATE SMALLDATETIME
AS
--PRT003 Setting referer invoice ke referencePO di InvoiceHeader ReferencePO = 1,NomorPO = 0
IF (SELECT AllowRules FROM RefBussinesRules WHERE CodeApp = 'RPT003') = 1
BEGIN
SET DEADLOCK_PRIORITY NORMAL;SET NOCOUNT ON; SET ARITHABORT OFF ; SET ANSI_WARNINGS OFF ;
SELECT ACH.DISTRIBUTOR_ID,ACH.BRAND_ID,ACH.TARGET,ISNULL(INV.TOTAL_INVOICE,0)AS TOTAL_INVOICE
FROM Nufarm.DBO.ACCRUED_HEADER ACH
INNER JOIN Tempdb..##T_Agreement_Brand INV
ON ACH.BRAND_ID = INV.BRAND_ID AND ACH.DISTRIBUTOR_ID = INV.DISTRIBUTOR_ID  
WHERE ACH.AGREEMENT_NO = @AGREEMENT_NO AND ACH.ACTUAL_DISTRIBUTOR <> CAST((ISNULL(INV.TOTAL_INVOICE,0))AS DECIMAL(18,3)) AND ACH.FLAG = @FLAG
 OPTION(KEEP PLAN) ;
END
GO
----------------------------------------------------------------
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Get_Changed_Invoice_By_BrandPack_ID' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Changed_Invoice_By_BrandPack_ID
GO
CREATE PROCEDURE Usp_Get_Changed_Invoice_By_BrandPack_ID
@AGREEMENT_NO VARCHAR(32),
@DISTRIBUTOR_ID VARCHAR(10),
@FLAG VARCHAR(2),
@START_DATE SMALLDATETIME,
@END_DATE SMALLDATETIME
AS
--PRT003 Setting referer invoice ke referencePO di InvoiceHeader ReferencePO = 1,NomorPO = 0
IF (SELECT AllowRules FROM RefBussinesRules WHERE CodeApp = 'RPT003') = 1
BEGIN
SET DEADLOCK_PRIORITY NORMAL;SET NOCOUNT ON;
SELECT ACD.ACHIEVEMENT_ID,ABI.BRANDPACK_ID,ACD.TOTAL_ACTUAL,ACD.DISC_QTY,ACD.RELEASE_QTY,ACD.LEFT_QTY,ACD.CAN_RELEASE,
ISNULL(INV.TOTAL_INVOICE,0)AS TOTAL_INVOICE,INV.TOTAL_PO_ORIGINAL
FROM Nufarm.dbo.VIEW_AGREE_BRANDPACK_INCLUDE ABI 
INNER JOIN Nufarm.DBO.ACCRUED_DETAIL ACD ON ABI.BRANDPACK_ID = ACD.BRANDPACK_ID
INNER JOIN Nufarm.DBO.ACCRUED_HEADER ACH ON ACD.ACHIEVEMENT_ID = ACH.ACHIEVEMENT_ID 
INNER JOIN Tempdb..##T_Agreement_BrandPack INV
ON ABI.DISTRIBUTOR_ID = INV.DISTRIBUTOR_ID AND ABI.BRANDPACK_ID = INV.BRANDPACK_ID 
AND ACD.BRANDPACK_ID = INV.BRANDPACK_ID
AND ACH.DISTRIBUTOR_ID = INV.DISTRIBUTOR_ID
WHERE ACH.AGREEMENT_NO = @AGREEMENT_NO AND ABI.AGREEMENT_NO = @AGREEMENT_NO
AND ABI.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
AND ACH.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND ACH.FLAG = @FLAG AND ACD.TOTAL_ACTUAL <> CAST((ISNULL(INV.TOTAL_INVOICE,0))AS DECIMAL(18,3)) 
OPTION(KEEP PLAN);
END
GO
----------------------------------------------------------------------
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Get_Total_Accrue_By_Year_Detail' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Total_Accrue_By_Year_Detail
GO
CREATE PROCEDURE Usp_Get_Total_Accrue_By_Year_Detail
@AGREEMENT_NO VARCHAR(32)
AS
SET DEADLOCK_PRIORITY NORMAL; SET NOCOUNT ON; 
DECLARE @V_QS_TREATMENT_FLAG CHAR(1);
SET @V_QS_TREATMENT_FLAG = (SELECT TOP 1 QS_TREATMENT_FLAG FROM AGREE_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO);
IF (@V_QS_TREATMENT_FLAG = 'S')
   BEGIN
	SELECT ACRH.AGREEMENT_NO + ACRH.BRAND_ID AS AGREE_BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,ISNULL(SUM(ACD.TOTAL_ACTUAL),0) AS TOTAL_ACTUAL,
	SUM(ACD.TOTAL_PO_ORIGINAL) AS TOTAL_PO_ORIGINAL
	FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACD ON ACRH.ACHIEVEMENT_ID = ACD.ACHIEVEMENT_ID
        WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.FLAG IN('S1','S2')
	GROUP BY ACRH.AGREEMENT_NO + ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID
	OPTION(KEEP PLAN);
   END
ELSE IF (@V_QS_TREATMENT_FLAG = 'Q')
   BEGIN
	SELECT ACRH.AGREEMENT_NO + ACRH.BRAND_ID AS AGREE_BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,ISNULL(SUM(ACD.TOTAL_ACTUAL),0) AS TOTAL_ACTUAL,
	SUM(ACD.TOTAL_PO_ORIGINAL) AS TOTAL_PO_ORIGINAL
	FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACD ON ACRH.ACHIEVEMENT_ID = ACD.ACHIEVEMENT_ID
        WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.FLAG IN('Q1','Q2','Q3','Q4')
	GROUP BY ACRH.AGREEMENT_NO + ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID
	OPTION(KEEP PLAN);
   END

GO
---------------------------
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Get_Total_Acrue_By_Year' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Total_Acrue_By_Year
GO
CREATE PROCEDURE Usp_Get_Total_Acrue_By_Year
@AGREEMENT_NO VARCHAR(32),
@CURRENT_FLAG VARCHAR(2)
AS
SET DEADLOCK_PRIORITY NORMAL; SET NOCOUNT ON;
DECLARE @V_QS_TREATMENT_FLAG CHAR(1),@V_IsTargetGroup BIT;
SET @V_QS_TREATMENT_FLAG = (SELECT TOP 1 QS_TREATMENT_FLAG FROM AGREE_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO);
IF (SELECT COUNT(AGREEMENT_NO) FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO) > 1
    BEGIN SET @V_IsTargetGroup = 1; END
ELSE 
    BEGIN SET @V_IsTargetGroup = 0; END
IF @V_QS_TREATMENT_FLAG = 'Q'
   BEGIN 
	SELECT ABI.DISTRIBUTOR_ID,ABI.AGREEMENT_NO,ABI.[ID] AS AGREE_BRAND_ID,ABI.BRAND_ID,ABI.TARGET_YEAR,
	'TOTAL_ACTUAL' = CASE @CURRENT_FLAG 
			 WHEN 'Q1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4
			 WHEN 'Q2' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q3 + ABI.TARGET_Q4
			 WHEN 'Q3' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q4
			 ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
        END,
	ACRH.TOTAL_PO_ORIGINAL,ACRH.TOTAL_PO_DISTRIBUTOR,
	'ACTUAL_YEAR_DISTRIBUTOR' = CASE @V_IsTargetGroup
				    WHEN 0 THEN CASE @CURRENT_FLAG 
					        WHEN 'Q1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4
					        WHEN 'Q2' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q3 + ABI.TARGET_Q4
					        WHEN 'Q3' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q4
					        ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) END
                                    ELSE  ISNULL(ACRH.ACTUAL_YEAR_DISTRIBUTOR,0)
                                    END,           		
        ABI.COMBINED_BRAND FROM VIEW_AGREE_BRAND_INCLUDE ABI
	LEFT OUTER JOIN( 
                    SELECT ACRHA.AGREE_BRAND_ID,ISNULL(ACRHA.ACTUAL_Q1,0) + ISNULL(ACRHA.ACTUAL_Q2,0) + ISNULL(ACRHA.ACTUAL_Q3,0) + ISNULL(ACRHA.ACTUAL_Q4,0) AS TOTAL_ACTUAL,
					ISNULL(ACRHA.TOTAL_PO_Q1,0) + ISNULL(ACRHA.TOTAL_PO_Q2,0) + ISNULL(ACRHA.TOTAL_PO_Q3,0) + ISNULL(ACRHA.TOTAL_PO_Q4,0) AS TOTAL_PO_ORIGINAL,
		   			ACRHD.DISTRIBUTOR_ID,
		   			ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q1,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q2,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q3,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q4,0) AS ACTUAL_YEAR_DISTRIBUTOR,
					ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_Q1,0) + ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_Q2,0) + ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_Q3,0) + ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_Q4,0) AS TOTAL_PO_DISTRIBUTOR
                        FROM(
				  			 SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
	    	  				 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_DISTRIBUTOR END),0)  AS ACTUAL_Q1,
							 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q1,
	    	  				 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_Q2,
							 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q2, 
	    	  				 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_DISTRIBUTOR END),0)  AS ACTUAL_Q3,
							 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q3,
	    	  				 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_Q4,
							 ISNULL(SUM(CASE FLAG when 'Q4' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q4
	    					 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO 
							 GROUP BY AGREEMENT_NO + BRAND_ID
            				)ACRHA
						INNER JOIN 
                            (SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
							 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q1,
							 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_Q1,
	    	 			     ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q2,
							 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_Q2,
	    	 			     ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q3,
							 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_Q3,
	    	 				 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q4,
							 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_Q4
	    	 				 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO
							 GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID 
            	 	        )ACRHD
						 ON ACRHD.AGREE_BRAND_ID = ACRHA.AGREE_BRAND_ID
                     )ACRH
         ON ACRH.AGREE_BRAND_ID = ABI.[ID] AND ACRH.DISTRIBUTOR_ID = ABI.DISTRIBUTOR_ID
	WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO OPTION(KEEP PLAN);
    END
 ELSE IF @V_QS_TREATMENT_FLAG = 'S'

     BEGIN
 	SELECT ABI.DISTRIBUTOR_ID,ABI.AGREEMENT_NO,ABI.[ID] AS AGREE_BRAND_ID,ABI.BRAND_ID,ABI.TARGET_YEAR,
        'TOTAL_ACTUAL' = CASE @CURRENT_FLAG 
						 WHEN 'S1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_S2
						 ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
        				 END,
		ACRH.TOTAL_PO_ORIGINAL,ACRH.TOTAL_PO_DISTRIBUTOR,
		'ACTUAL_YEAR_DISTRIBUTOR' = CASE @V_IsTargetGroup
					WHEN 0 THEN CASE @CURRENT_FLAG 
					WHEN 'S1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_S2 ELSE ISNULL(ACRH.TOTAL_ACTUAL,0)  END
					ELSE  ISNULL(ACRH.ACTUAL_YEAR_DISTRIBUTOR,0)
					END,           		
		ABI.COMBINED_BRAND FROM VIEW_AGREE_BRAND_INCLUDE ABI
		LEFT OUTER JOIN ( 
                         SELECT ACRHA.AGREE_BRAND_ID,ISNULL(ACRHA.ACTUAL_S1,0) + ISNULL(ACRHA.ACTUAL_S2,0)AS TOTAL_ACTUAL,
						 ACRHD.DISTRIBUTOR_ID,ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_S1,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_S2,0) AS ACTUAL_YEAR_DISTRIBUTOR,
						 ISNULL(ACRHA.TOTAL_PO_S1,0) + ISNULL(ACRHA.TOTAL_PO_S2,0) AS TOTAL_PO_ORIGINAL,
						 ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_S1,0) +  ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_S2,0) AS TOTAL_PO_DISTRIBUTOR
                         FROM(SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
		    				  ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_S1,
							  ISNULL(SUM(CASE FLAG WHEN 'S1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_S1,
		    				  ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_S2,
							  ISNULL(SUM(CASE FLAG WHEN 'S2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_S2
		    				  FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO
							  GROUP BY AGREEMENT_NO + BRAND_ID 
                    		 )ACRHA
 						 INNER JOIN(
							SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
		 						ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_S1,
							ISNULL(SUM(CASE FLAG WHEN 'S1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_S1,
    	 					ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_S2,
							ISNULL(SUM(CASE FLAG WHEN 'S2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_S2
    	 					FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO 
							GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID
									)ACRHD
   						 ON ACRHD.AGREE_BRAND_ID = ACRHA.AGREE_BRAND_ID
                       )ACRH
         ON ACRH.AGREE_BRAND_ID = ABI.[ID] AND ACRH.DISTRIBUTOR_ID = ABI.DISTRIBUTOR_ID
	WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO OPTION(KEEP PLAN);
     END

GO
-----------------------------------------------------
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Changed_Actual_Accrue_By_Year' AND TYPE = 'P')
	DROP PROCEDURE Usp_Changed_Actual_Accrue_By_Year
GO
CREATE PROCEDURE Usp_Changed_Actual_Accrue_By_Year
@AGREEMENT_NO VARCHAR(32),
@CURRENT_FLAG VARCHAR(2)
AS
SET DEADLOCK_PRIORITY NORMAL; SET NOCOUNT ON;
DECLARE @V_QS_TREATMENT_FLAG CHAR(1),@V_IsTargetGroup BIT;
SET @V_QS_TREATMENT_FLAG = (SELECT TOP 1 QS_TREATMENT_FLAG FROM AGREE_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO);
IF (SELECT COUNT(AGREEMENT_NO) FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO) > 1
    BEGIN SET @V_IsTargetGroup = 1; END
ELSE 
    BEGIN SET @V_IsTargetGroup = 0; END

IF @V_QS_TREATMENT_FLAG = 'Q'
   BEGIN 
	SELECT ABI.DISTRIBUTOR_ID,ABI.AGREEMENT_NO,ABI.[ID] AS AGREE_BRAND_ID,ABI.BRAND_ID,ABI.TARGET_YEAR,
       'TOTAL_ACTUAL' = CASE @CURRENT_FLAG 
			 WHEN 'Q1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4
			 WHEN 'Q2' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q3 + ABI.TARGET_Q4
			 WHEN 'Q3' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q4
			 ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
       			 END,
	ACRH.TOTAL_PO_ORIGINAL,ACRH.TOTAL_PO_DISTRIBUTOR,
	'ACTUAL_YEAR_DISTRIBUTOR' = CASE @V_IsTargetGroup
				    WHEN 0 THEN CASE @CURRENT_FLAG 
					        WHEN 'Q1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4
					        WHEN 'Q2' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q3 + ABI.TARGET_Q4
					        WHEN 'Q3' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q4
					        ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) END
                                    ELSE  ISNULL(ACRH.ACTUAL_YEAR_DISTRIBUTOR,0)
                                    END,           		
        ABI.COMBINED_BRAND FROM VIEW_AGREE_BRAND_INCLUDE ABI
	INNER JOIN( 
                   SELECT ACRHA.AGREE_BRAND_ID,ISNULL(ACRHA.ACTUAL_Q1,0) + ISNULL(ACRHA.ACTUAL_Q2,0) + ISNULL(ACRHA.ACTUAL_Q3,0) + ISNULL(ACRHA.ACTUAL_Q4,0) AS TOTAL_ACTUAL,
		   ISNULL(ACRHA.TOTAL_PO_Q1,0) + ISNULL(ACRHA.TOTAL_PO_Q2,0) + ISNULL(ACRHA.TOTAL_PO_Q3,0) + ISNULL(ACRHA.TOTAL_PO_Q4,0) AS TOTAL_PO_ORIGINAL,	
		   ISNULL(ACRHA1.ACTUAL_Y,0)AS ACTUAL_Y,ACRHD.DISTRIBUTOR_ID,
		   ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q1,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q2,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q3,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q4,0) AS ACTUAL_YEAR_DISTRIBUTOR,
		   ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_Q1,0) + ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_Q2,0) + ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_Q3,0) + ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_Q4,0) AS TOTAL_PO_DISTRIBUTOR
                   FROM
                     (
                      	 SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
				 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_DISTRIBUTOR END),0)  AS ACTUAL_Q1,
			 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q1,
				 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_Q2,
			 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q2, 
				 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_DISTRIBUTOR END),0)  AS ACTUAL_Q3,
			 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q3,
				 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_Q4,
			 ISNULL(SUM(CASE FLAG when 'Q4' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q4
			 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO 
			 GROUP BY AGREEMENT_NO + BRAND_ID
            	      )ACRHA
		    INNER JOIN
                            (SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,TOTAL_ACTUAL AS ACTUAL_Y
	  	             FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO AND FLAG = 'Y'	
            		     )ACRHA1
		    ON ACRHA.AGREE_BRAND_ID = ACRHA1.AGREE_BRAND_ID
                    INNER JOIN 
                            (SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
				 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q1,
				 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_Q1,
				     ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q2,
				 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_Q2,
				     ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q3,
				 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_Q3,
					 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q4,
				 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_Q4
					 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO
				 GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID 
            	 	     )ACRHD
		    ON ACRHD.AGREE_BRAND_ID = ACRHA.AGREE_BRAND_ID
                   )ACRH
         ON ACRH.AGREE_BRAND_ID = ABI.[ID] AND ACRH.DISTRIBUTOR_ID = ABI.DISTRIBUTOR_ID
	WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO
 	AND ACRH.ACTUAL_Y <> ACRH.TOTAL_ACTUAL OPTION(KEEP PLAN);
    END
 ELSE
     BEGIN
 	 SELECT ABI.DISTRIBUTOR_ID,ABI.AGREEMENT_NO,ABI.[ID] AS AGREE_BRAND_ID,ABI.BRAND_ID,ABI.TARGET_YEAR,
        'TOTAL_ACTUAL' = CASE @CURRENT_FLAG 
			 WHEN 'S1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_S2
			 ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
        		 END,
	ACRH.TOTAL_PO_ORIGINAL,ACRH.TOTAL_PO_DISTRIBUTOR,
	'ACTUAL_YEAR_DISTRIBUTOR' = CASE @V_IsTargetGroup
				    WHEN 0 THEN CASE @CURRENT_FLAG 
					       WHEN 'S1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_S2
			 		       ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
        		 		       END
                                    ELSE  ISNULL(ACRH.ACTUAL_YEAR_DISTRIBUTOR,0)
                                    END,           		
        ABI.COMBINED_BRAND FROM VIEW_AGREE_BRAND_INCLUDE ABI
	INNER JOIN ( 
                        SELECT ACRHA.AGREE_BRAND_ID,ISNULL(ACRHA.ACTUAL_S1,0) + ISNULL(ACRHA.ACTUAL_S2,0)AS TOTAL_ACTUAL,
			ISNULL(ACRHA1.ACTUAL_Y,0)AS ACTUAL_Y,ACRHD.DISTRIBUTOR_ID,
			ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_S1,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_S2,0) AS ACTUAL_YEAR_DISTRIBUTOR,
			 ISNULL(ACRHA.TOTAL_PO_S1,0) + ISNULL(ACRHA.TOTAL_PO_S2,0) AS TOTAL_PO_ORIGINAL,
			 ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_S1,0) +  ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_S2,0) AS TOTAL_PO_DISTRIBUTOR
                         FROM
                             (
                         	SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
		    		ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_S1,
				  ISNULL(SUM(CASE FLAG WHEN 'S1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_S1,
				  ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_S2,
				  ISNULL(SUM(CASE FLAG WHEN 'S2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_S2
				  FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO
				  GROUP BY AGREEMENT_NO + BRAND_ID 
                    	      )ACRHA
 			INNER JOIN
                                 (SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,TOTAL_ACTUAL AS ACTUAL_Y
	  	                  FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO AND FLAG = 'Y'	
		   	          )ACRHA1
			ON ACRHA.AGREE_BRAND_ID = ACRHA1.AGREE_BRAND_ID
                        INNER JOIN 
                                 (SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
						ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_S1,
				ISNULL(SUM(CASE FLAG WHEN 'S1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_S1,
					ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_S2,
				ISNULL(SUM(CASE FLAG WHEN 'S2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_S2
					FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO 
				GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID
                    	 	  )ACRHD
   			ON ACRHD.AGREE_BRAND_ID = ACRHA.AGREE_BRAND_ID
                     )ACRH
        ON ACRH.AGREE_BRAND_ID = ABI.[ID] AND ACRH.DISTRIBUTOR_ID = ABI.DISTRIBUTOR_ID
	WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO
 	AND ACRH.ACTUAL_Y <> ACRH.TOTAL_ACTUAL OPTION(KEEP PLAN);
   END

GO
------------------------------------------------------------------------------
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Get_Total_Accrue_By_Year_Detail' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Total_Accrue_By_Year_Detail
GO
CREATE PROCEDURE Usp_Get_Total_Accrue_By_Year_Detail
@AGREEMENT_NO VARCHAR(32)
AS
SET DEADLOCK_PRIORITY NORMAL; SET NOCOUNT ON; 
DECLARE @V_QS_TREATMENT_FLAG CHAR(1);
SET @V_QS_TREATMENT_FLAG = (SELECT TOP 1 QS_TREATMENT_FLAG FROM AGREE_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO);
IF (@V_QS_TREATMENT_FLAG = 'S')
   BEGIN
        SELECT ACRH.AGREEMENT_NO + ACRH.BRAND_ID AS AGREE_BRAND_ID,ACRH.DISTRIBUTOR_ID,ACRH.BRANDPACK_ID,ACRH.TOTAL_ACTUAL,
	ACRH.TOTAL_PO_ORIGINAL
        FROM(  
	      SELECT ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,ISNULL(SUM(ACD.TOTAL_ACTUAL),0) AS TOTAL_ACTUAL,
	      SUM(ACD.TOTAL_PO_ORIGINAL) AS TOTAL_PO_ORIGINAL
	      FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACD ON ACRH.ACHIEVEMENT_ID = ACD.ACHIEVEMENT_ID
              WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.FLAG IN('S1','S2')
	      GROUP BY ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID
             )ACRH
        INNER JOIN(SELECT ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,ACD.TOTAL_ACTUAL
	     	   FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACD ON ACRH.ACHIEVEMENT_ID = ACD.ACHIEVEMENT_ID
              	   WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.FLAG = 'Y'
                   )ACRH1 
        ON (ACRH.AGREEMENT_NO + ACRH.BRAND_ID + ACRH.DISTRIBUTOR_ID + ACRH.BRANDPACK_ID)
         = (ACRH1.AGREEMENT_NO + ACRH1.BRAND_ID + ACRH1.DISTRIBUTOR_ID + ACRH1.BRANDPACK_ID)
	WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.TOTAL_ACTUAL <> ACRH1.TOTAL_ACTUAL OPTION(KEEP PLAN);
   END
ELSE IF (@V_QS_TREATMENT_FLAG = 'Q')
   BEGIN
	SELECT ACRH.AGREEMENT_NO + ACRH.BRAND_ID AS AGREE_BRAND_ID,ACRH.DISTRIBUTOR_ID,ACRH.BRANDPACK_ID,ACRH.TOTAL_ACTUAL,
	ACRH.TOTAL_PO_ORIGINAL
        FROM(  
	      SELECT ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,ISNULL(SUM(ACD.TOTAL_ACTUAL),0) AS TOTAL_ACTUAL,
	      SUM(ACD.TOTAL_PO_ORIGINAL) AS TOTAL_PO_ORIGINAL
	      FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACD ON ACRH.ACHIEVEMENT_ID = ACD.ACHIEVEMENT_ID
              WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.FLAG IN('Q1','Q2','Q3','Q4')
	      GROUP BY ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID
             )ACRH
         INNER JOIN(SELECT ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,ACD.TOTAL_ACTUAL
	     	    FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACD ON ACRH.ACHIEVEMENT_ID = ACD.ACHIEVEMENT_ID
              	    WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.FLAG = 'Y'
                   )ACRH1 
         ON (ACRH.AGREEMENT_NO + ACRH.BRAND_ID + ACRH.DISTRIBUTOR_ID + ACRH.BRANDPACK_ID)
         = (ACRH1.AGREEMENT_NO + ACRH1.BRAND_ID + ACRH1.DISTRIBUTOR_ID + ACRH1.BRANDPACK_ID)
	WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.TOTAL_ACTUAL <> ACRH1.TOTAL_ACTUAL OPTION(KEEP PLAN);
   END

GO
-----------------------------------------------------------------------------------
--exec Usp_Get_Total_Qty_Brand_By_Invoice @START_DATE = 'Aug  1 2012',
-- @END_DATE = 'Oct 31 2012', @AGREEMENT_NO = '1100/NI/X/2008.1L-12'
--
--exec sp_executesql N'SET DEADLOCK_PRIORITY NORMAL ;SET NOCOUNT ON ; SET ARITHABORT OFF ; SET ANSI_WARNINGS OFF ;
--IF EXISTS(SELECT [NAME] FROM tempdb.DBO.SysObjects WHERE [NAME] = ''##T_Agreement_Brand'' 
--           AND TYPE = ''U'') 
--BEGIN DROP TABLE ##T_Agreement_Brand  ; END 
-- SELECT DISTRIBUTOR_ID,BRAND_ID,SUM(QTY)AS TOTAL_INVOICE INTO ##T_Agreement_Brand 
--  FROM( 
--       SELECT PO.DISTRIBUTOR_ID,PO.BRAND_ID,PO.BRANDPACK_ID,(ISNULL(INV.QTY,0)/PO.SPPB_QTY)* PO.PO_ORIGINAL_QTY AS QTY 
--       FROM tempdb..##T_MASTER_PO PO 
--       INNER JOIN COMPARE_ITEM Tmbp ON PO.BRANDPACK_ID = Tmbp.BRANDPACK_ID_DTS 
--       INNER JOIN ##T_SELECT_INVOICE INV ON Tmbp.BRANDPACK_ID_ACCPAC = INV.BRANDPACK_ID 
--       AND ((PO.PO_REF_NO = INV.PONUMBER) OR (PO.RUN_NUMBER = INV.REFERENCE)) 
--            WHERE PO.DISTRIBUTOR_ID = SOME( 
--       	 SELECT DISTRIBUTOR_ID FROM Nufarm.DBO.DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO 
--     		 )
--       AND PO.PO_REF_DATE >= @START_DATE AND PO.PO_REF_DATE <= @END_DATE 
--      )INV1   
-- GROUP BY DISTRIBUTOR_ID,BRAND_ID ; 
-- CREATE CLUSTERED INDEX IX_T_Agreement_Brand ON ##T_Agreement_Brand(TOTAL_INVOICE,BRAND_ID) ;', N'@START_DATE smalldatetime,@END_DATE smalldatetime,@AGREEMENT_NO varchar(25)', 
--@START_DATE = 'Aug  1 2012', @END_DATE = 'Oct 31 2012', @AGREEMENT_NO = '1100/NI/X/2008.1L-12'
--
--SELECT * FROM TEMPD..##T_Agreement_Brand
--
--exec sp_executesql N'SET DEADLOCK_PRIORITY NORMAL; SET NOCOUNT ON; 
-- SELECT ABI.BRANDPACK_ID,ABI.ACHIEVEMENT_ID,ABI.ACHIEVEMENT_BRANDPACK_ID 
-- FROM ( 
--       SELECT ''ACHIEVEMENT_ID''= ABI.DISTRIBUTOR_ID + ''|'' + ABI.AGREE_BRAND_ID + ''|Q1'',
--       ABI.BRANDPACK_ID,ABI.DISTRIBUTOR_ID + ''|'' + ABI.AGREE_BRAND_ID + ''|Q1|'' + ABI.BRANDPACK_ID AS ACHIEVEMENT_BRANDPACK_ID 
--       FROM VIEW_AGREE_BRANDPACK_INCLUDE ABI WHERE DISTRIBUTOR_ID + ''|'' + AGREE_BRAND_ID + ''|Q1'' = ''PAN104000|1100/NI/X/2008.1L-1200601|Q1'' 
--      )ABI 
-- WHERE NOT EXISTS(SELECT ACD.ACHIEVEMENT_BRANDPACK_ID FROM ACCRUED_DETAIL ACD INNER JOIN ACCRUED_HEADER ACRH 
--                   ON ACD.ACHIEVEMENT_ID = ACRH.ACHIEVEMENT_ID 
--                   WHERE ACRH.ACHIEVEMENT_ID = ''PAN104000|1100/NI/X/2008.1L-1200601|Q1'' AND ACD.ACHIEVEMENT_BRANDPACK_ID = ABI.ACHIEVEMENT_BRANDPACK_ID 
--                   AND ACRH.ACHIEVEMENT_ID = ABI.ACHIEVEMENT_ID 
--                  ) OPTION(KEEP PLAN);', N'@START_DATE smalldatetime,@END_DATE smalldatetime,@AGREEMENT_NO varchar(25),@FLAG varchar(2)', @START_DATE = 'Aug  1 2012 12:00AM', 
--@END_DATE = 'Oct 31 2012 12:00AM', @AGREEMENT_NO = '1100/NI/X/2008.1L-12', @FLAG = 'Q1'
--
--exec sp_executesql N'SET DEADLOCK_PRIORITY NORMAL; SET NOCOUNT ON ; SET ARITHABORT OFF ; SET ANSI_WARNINGS OFF ; 
--IF EXISTS(SELECT [NAME] FROM Tempdb.DBO.Sysobjects WHERE [NAME] = ''##T_PO_Original_By_Distributor'' AND Type = ''U'') 
-- BEGIN DROP TABLE ##T_PO_Original_By_Distributor ; END 
-- SELECT PO.DISTRIBUTOR_ID,tmbp.BRANDPACK_ID_DTS AS BRANDPACK_ID,(INV.QTY/PO.SPPB_QTY) * PO.PO_ORIGINAL_QTY AS QTY 
-- INTO ##T_PO_Original_By_Distributor FROM COMPARE_ITEM tmbp 
-- INNER JOIN ##T_SELECT_INVOICE INV ON tmbp.BRANDPACK_ID_ACCPAC = INV.BRANDPACK_ID 
-- INNER JOIN tempdb..##T_MASTER_PO PO ON PO.BRANDPACK_ID = tmbp.BRANDPACK_ID_DTS 
-- AND ((PO.PO_REF_NO = INV.PONUMBER) OR(PO.RUN_NUMBER = INV.REFERENCE) ) 
-- WHERE PO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND PO.PO_REF_DATE >= @START_DATE AND PO.PO_REF_DATE <= @END_DATE ; 
-- CREATE CLUSTERED INDEX IX_T_PO_Original_By_Distributor ON ##T_PO_Original_By_Distributor(QTY,DISTRIBUTOR_ID) ;', N'@START_DATE smalldatetime,@END_DATE 
--smalldatetime,@AGREEMENT_NO varchar(25),@FLAG varchar(2),@DISTRIBUTOR_ID varchar(10)', @START_DATE = 'Aug  1 2012 12:00AM', @END_DATE = 'Oct 31 2012 12:00AM', @AGREEMENT_NO = 
--'1100/NI/X/2008.1L-12', @FLAG = 'Q1', @DISTRIBUTOR_ID = 'PAN104000'
--
--exec sp_executesql N'SET DEADLOCK_PRIORITY NORMAL ;SET NOCOUNT ON ; SET ANSI_WARNINGS OFF ; 
--SELECT ''AGREE_BRAND_ID'' = @AGREEMENT_NO + '''' + BRAND_ID,DISTRIBUTOR_ID,ISNULL(SUM(PO_ORIGINAL_QTY),0)AS TOTAL_PO FROM ##T_MASTER_PO WHERE PO_REF_DATE >= @START_DATE 
--AND PO_REF_DATE <= @END_DATE GROUP BY DISTRIBUTOR_ID,@AGREEMENT_NO + '''' +  BRAND_ID ;', N'@AGREEMENT_NO varchar(25),@FLAG varchar(2),@DISTRIBUTOR_ID varchar(10),@START_DATE 
--smalldatetime,@END_DATE smalldatetime', @AGREEMENT_NO = '1100/NI/X/2008.1L-12', @FLAG = 'Q1', @DISTRIBUTOR_ID = 'PAN121000', 
--@START_DATE = 'Aug  1 2012', 
--@END_DATE = 'Oct 31 2012'
--
--SELECT * FROM DIST_DISTRIBUTOR WHERE DISTRIBUTOR_ID = 'MUL007000'
--
--SELECT PO.*,DR.DISTRIBUTOR_NAME
--FROM TEMPDB..##T_MASTER_PO PO INNER JOIN DIST_DISTRIBUTOR DR
--ON DR.DISTRIBUTOR_ID = PO.DISTRIBUTOR_ID
--
--exec sp_executesql N'SET DEADLOCK_PRIORITY NORMAL ;SET NOCOUNT ON ; SET ANSI_WARNINGS OFF ;
--SELECT TOP 1 AA.START_DATE,AA.END_DATE,AA.QS_TREATMENT_FLAG FROM AGREE_AGREEMENT AA INNER JOIN DISTRIBUTOR_AGREEMENT DA ON DA.AGREEMENT_NO = AA.AGREEMENT_NO 
-- WHERE AA.AGREEMENT_NO != @AGREEMENT_NO AND EXISTS(SELECT AGREEMENT_NO FROM AGREE_BRAND_INCLUDE WHERE AGREEMENT_NO = AA.AGREEMENT_NO AND TARGET_Q1 > 0 ) ORDER BY AA.START_DATE 
--DESC ;', N'@AGREEMENT_NO varchar(25),@FLAG varchar(2),@DISTRIBUTOR_ID varchar(10),@START_DATE smalldatetime,@END_DATE smalldatetime', @AGREEMENT_NO = '1100/NI/X/2008.1L-12', 
--@FLAG = 'Q1', @DISTRIBUTOR_ID = 'PAN121000', @START_DATE = 'Aug  1 2012 12:00AM', @END_DATE = 'Oct 31 2012 12:00AM'
--
--exec sp_executesql N'SET DEADLOCK_PRIORITY NORMAL ;SET NOCOUNT ON ; SET ARITHABORT OFF ; SET ANSI_WARNINGS OFF ;
-- SELECT 1 WHERE EXISTS(SELECT PO.BRANDPACK_ID 
--            FROM tempdb..##T_MASTER_PO PO 
--            INNER JOIN COMPARE_ITEM Tmbp ON PO.BRANDPACK_ID = Tmbp.BRANDPACK_ID_DTS 
--            INNER JOIN ##T_SELECT_INVOICE INV ON Tmbp.BRANDPACK_ID_ACCPAC = INV.BRANDPACK_ID 
--            AND ((PO.PO_REF_NO = INV.PONUMBER) OR (PO.RUN_NUMBER = INV.REFERENCE)) 
--            WHERE PO.DISTRIBUTOR_ID = SOME( 
--       	    SELECT DISTRIBUTOR_ID FROM Nufarm.DBO.DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO) 
--     		AND ((ISNULL(INV.QTY,0)/PO.SPPB_QTY) * PO.PO_ORIGINAL_QTY > 0 )
--            AND PO.PO_REF_DATE < @START_DATE) ', N'@AGREEMENT_NO varchar(25),@FLAG varchar(2),@DISTRIBUTOR_ID varchar(10),@START_DATE smalldatetime,@END_DATE smalldatetime', 
--@AGREEMENT_NO = '1100/NI/X/2008.1L-12', @FLAG = 'Q1', @DISTRIBUTOR_ID = 'PAN121000', @START_DATE = 'Aug  1 2012 12:00AM', @END_DATE = 'Oct 31 2012 12:00AM'
--
--exec sp_executesql N'SET DEADLOCK_PRIORITY NORMAL ;SET NOCOUNT ON ; SET ANSI_WARNINGS OFF ;
--DECLARE @V_START_DATE SMALLDATETIME ;
--SET @V_START_DATE = (SELECT START_DATE FROM AGREE_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO); 
--SELECT TOP 1 AA.START_DATE,AA.END_DATE,AA.QS_TREATMENT_FLAG FROM AGREE_AGREEMENT AA INNER JOIN DISTRIBUTOR_AGREEMENT DA ON DA.AGREEMENT_NO = AA.AGREEMENT_NO 
-- WHERE DAY(END_DATE) < DAY(@V_START_DATE) AND EXISTS(SELECT AGREEMENT_NO FROM AGREE_BRAND_INCLUDE WHERE AGREEMENT_NO = AA.AGREEMENT_NO AND TARGET_Q1 > 0 ) 
-- AND DA.DISTRIBUTOR_ID = SOME(SELECT DISTRIBUTOR_ID FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO) ORDER BY AA.START_DATE DESC ;', N'@AGREEMENT_NO 
--varchar(25),@FLAG varchar(2),@DISTRIBUTOR_ID varchar(10),@START_DATE smalldatetime,@END_DATE smalldatetime', @AGREEMENT_NO = '1100/NI/X/2008.1L-12', @FLAG = 'Q1', @DISTRIBUTOR_ID 
--= 'PAN121000', @START_DATE = 'Aug  1 2012 12:00AM', @END_DATE = 'Oct 31 2012 12:00AM'
--
--
--DECLARE @V_START_DATE SMALLDATETIME ;
--SELECT @V_START_DATE = (SELECT START_DATE FROM AGREE_AGREEMENT WHERE AGREEMENT_NO = '1100/NI/X/2008.1L-12'); 
--
--SELECT START_DATE = @V_START_DATE;
--
--SELECT TOP 1 AA.START_DATE,AA.END_DATE,AA.QS_TREATMENT_FLAG FROM AGREE_AGREEMENT AA INNER JOIN DISTRIBUTOR_AGREEMENT DA ON DA.AGREEMENT_NO = AA.AGREEMENT_NO 
-- WHERE END_DATE < '2012-08-01' AND EXISTS(SELECT AGREEMENT_NO FROM AGREE_BRAND_INCLUDE WHERE AGREEMENT_NO = AA.AGREEMENT_NO AND TARGET_Q1 > 0 ) 
-- AND DA.DISTRIBUTOR_ID = SOME(SELECT DISTRIBUTOR_ID FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO) ORDER BY AA.START_DATE DESC ;', N'@AGREEMENT_NO 
--varchar(25),@FLAG varchar(2),@DISTRIBUTOR_ID varchar(10),@START_DATE smalldatetime,@END_DATE smalldatetime', @AGREEMENT_NO = '1100/NI/X/2008.1L-12', @FLAG = 'Q1', @DISTRIBUTOR_ID 
--= 'PAN121000', @START_DATE = 'Aug  1 2012 12:00AM', @END_DATE = 'Oct 31 2012 12:00AM'
--
--exec sp_executesql N'SET DEADLOCK_PRIORITY NORMAL; SET NOCOUNT ON; 
--SELECT DA.DISTRIBUTOR_ID,ABI.AGREE_BRAND_ID,ABI.BRAND_ID,ABI.COMB_AGREE_BRAND_ID,ABI.TARGET_Q1
-- FROM DISTRIBUTOR_AGREEMENT DA INNER JOIN AGREE_BRAND_INCLUDE ABI ON DA.AGREEMENT_NO = ABI.AGREEMENT_NO 
-- WHERE DA.AGREEMENT_NO = @AGREEMENT_NO AND NOT EXISTS(SELECT ACHIEVEMENT_ID FROM ACCRUED_HEADER  
-- WHERE ACHIEVEMENT_ID = DA.DISTRIBUTOR_ID + ''|'' + @AGREEMENT_NO  + '''' + ABI.BRAND_ID + ''|Q1''
-- ) OPTION(KEEP PLAN);', N'@AGREEMENT_NO varchar(32)', @AGREEMENT_NO = '1100/NI/X/2008.1L-12'
--go
--exec sp_executesql N'SET DEADLOCK_PRIORITY NORMAL ;SET NOCOUNT ON ; SET ANSI_WARNINGS OFF ; 
--IF EXISTS(SELECT [NAME] FROM Tempdb.dbo.Sysobjects WHERE [NAME] = ''##T_MASTER_PO'' AND TYPE = ''U'') 
-- BEGIN DROP TABLE tempdb..##T_MASTER_PO ; END 
-- SELECT PO_REF_NO,PO_REF_DATE,DISTRIBUTOR_ID,BRAND_ID,BRANDPACK_ID,SPPB_QTY,PO_ORIGINAL_QTY,RUN_NUMBER INTO tempdb..##T_MASTER_PO FROM ( 
--  SELECT PO.PO_REF_NO,PO.PO_REF_DATE,PO.DISTRIBUTOR_ID,ABI.BRAND_ID,ABP.BRANDPACK_ID,OPB.PO_ORIGINAL_QTY,SB.SPPB_QTY,OOA.RUN_NUMBER 
--  FROM Nufarm.dbo.AGREE_BRAND_INCLUDE ABI 
--  INNER JOIN Nufarm.DBO.AGREE_BRANDPACK_INCLUDE ABP ON ABI.AGREE_BRAND_ID = ABP.AGREE_BRAND_ID
--  INNER JOIN Nufarm.dbo.ORDR_PO_BRANDPACK OPB ON OPB.BRANDPACK_ID = ABP.BRANDPACK_ID 
--  INNER JOIN Nufarm.dbo.ORDR_PURCHASE_ORDER PO 
--  ON PO.PO_REF_NO = OPB.PO_REF_NO INNER JOIN Nufarm.dbo.ORDR_ORDER_ACCEPTANCE OOA 
--  ON OOA.PO_REF_NO = PO.PO_REF_NO 
--  INNER JOIN ORDR_OA_BRANDPACK OOAB ON OOA.OA_ID = OOAB.OA_ID AND OOAB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID 
--  INNER JOIN SPPB_BRANDPACK SB ON SB.OA_BRANDPACK_ID = OOAB.OA_BRANDPACK_ID  
--  INNER JOIN DIST_PLANT_PRICE PL ON PL.PLANTATION_ID = OPB.PLANTATION_ID AND OPB.BRANDPACK_ID = PL.BRANDPACK_ID AND PO.DISTRIBUTOR_ID = PL.DISTRIBUTOR_ID 
--  WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO AND PO.PO_REF_DATE >= @START_DATE AND PO.PO_REF_DATE <= @END_DATE AND OPB.PO_ORIGINAL_QTY > 0 AND PL.IncludeDPD = 1
--  AND PO.DISTRIBUTOR_ID = SOME(SELECT DISTRIBUTOR_ID FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO) 
--  UNION 
--  SELECT PO.PO_REF_NO,PO.PO_REF_DATE,PO.DISTRIBUTOR_ID,ABI.BRAND_ID,ABP.BRANDPACK_ID,OPB.PO_ORIGINAL_QTY,SB.SPPB_QTY,OOA.RUN_NUMBER 
--  FROM Nufarm.dbo.AGREE_BRAND_INCLUDE ABI 
--  INNER JOIN Nufarm.DBO.AGREE_BRANDPACK_INCLUDE ABP ON ABI.AGREE_BRAND_ID = ABP.AGREE_BRAND_ID
--  INNER JOIN Nufarm.dbo.ORDR_PO_BRANDPACK OPB ON OPB.BRANDPACK_ID = ABP.BRANDPACK_ID 
--  INNER JOIN Nufarm.dbo.ORDR_PURCHASE_ORDER PO 
--  ON PO.PO_REF_NO = OPB.PO_REF_NO INNER JOIN Nufarm.dbo.ORDR_ORDER_ACCEPTANCE OOA 
--  ON OOA.PO_REF_NO = PO.PO_REF_NO 
--  INNER JOIN ORDR_OA_BRANDPACK OOAB ON OOA.OA_ID = OOAB.OA_ID AND OOAB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID 
--  INNER JOIN SPPB_BRANDPACK SB ON SB.OA_BRANDPACK_ID = OOAB.OA_BRANDPACK_ID  
--  WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO AND PO.PO_REF_DATE >= @START_DATE AND PO.PO_REF_DATE <= @END_DATE AND OPB.PO_ORIGINAL_QTY > 0 AND OPB.PLANTATION_ID IS NULL AND 
--OPB.PROJ_BRANDPACK_ID IS NULL 
--  AND PO.DISTRIBUTOR_ID = SOME(SELECT DISTRIBUTOR_ID FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO)
-- )B ;
-- CREATE CLUSTERED INDEX IX_T_MASTER_PO ON ##T_MASTER_PO(PO_REF_DATE,PO_REF_NO,RUN_NUMBER,DISTRIBUTOR_ID,BRANDPACK_ID) ;', N'@AGREEMENT_NO varchar(32),@START_DATE 
--smalldatetime,@END_DATE smalldatetime', @AGREEMENT_NO = '1100/NI/X/2008.1L-12', @START_DATE = 'Apr 30 2012 12:00AM', @END_DATE = 'Feb  1 2013 12:00AM'
--go
--exec sp_executesql N'SET DEADLOCK_PRIORITY NORMAL ;SET NOCOUNT ON ; SET ARITHABORT OFF ; SET ANSI_WARNINGS OFF ;
--IF EXISTS(SELECT [NAME] FROM tempdb.DBO.SysObjects WHERE [NAME] = ''##T_Agreement_Brand'' 
--           AND TYPE = ''U'') 
--BEGIN DROP TABLE ##T_Agreement_Brand  ; END 
-- SELECT DISTRIBUTOR_ID,BRAND_ID,SUM(QTY)AS TOTAL_INVOICE INTO ##T_Agreement_Brand 
--  FROM( 
--       SELECT PO.DISTRIBUTOR_ID,PO.BRAND_ID,PO.BRANDPACK_ID,(ISNULL(INV.QTY,0)/PO.SPPB_QTY)* PO.PO_ORIGINAL_QTY AS QTY 
--       FROM tempdb..##T_MASTER_PO PO 
--       INNER JOIN COMPARE_ITEM Tmbp ON PO.BRANDPACK_ID = Tmbp.BRANDPACK_ID_DTS 
--       INNER JOIN ##T_SELECT_INVOICE INV ON Tmbp.BRANDPACK_ID_ACCPAC = INV.BRANDPACK_ID 
--       AND ((PO.PO_REF_NO = INV.PONUMBER) OR (PO.RUN_NUMBER = INV.REFERENCE)) 
--            WHERE PO.DISTRIBUTOR_ID = SOME( 
--       	 SELECT DISTRIBUTOR_ID FROM Nufarm.DBO.DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO 
--     		 )
--       AND PO.PO_REF_DATE >= @START_DATE AND PO.PO_REF_DATE <= @END_DATE 
--      )INV1   
-- GROUP BY DISTRIBUTOR_ID,BRAND_ID ; 
-- CREATE CLUSTERED INDEX IX_T_Agreement_Brand ON ##T_Agreement_Brand(TOTAL_INVOICE,BRAND_ID) ;', N'@AGREEMENT_NO varchar(32),@START_DATE smalldatetime,@END_DATE smalldatetime', 
--@AGREEMENT_NO = '1100/NI/X/2008.1L-12', @START_DATE = 'Aug  1 2012 12:00AM', @END_DATE = 'Oct 31 2012 12:00AM'
--go
--
--exec Usp_Get_Changed_Invoice_By_Brand_ID @AGREEMENT_NO = '1100/NI/X/2008.1L-12', @START_DATE = 'Aug  1 2012 12:00AM', @END_DATE = 'Oct 31 2012 12:00AM', @FLAG = 'Q1'
--
--DELETE FROM ACCRUED_DETAIL WHERE ACHIEVEMENT_ID = ANY(SELECT ACHIEVEMENT_ID FROM ACCRUED_HEADER WHERE GP_ID IS NOT NULL AND AGREEMENT_NO = '0802/NI/VII/2008.12');
--DELETE FROM ACCRUED_HEADER WHERE GP_ID IS NOT NULL AND AGREEMENT_NO = '0802/NI/VII/2008.12';
--
--
--
--SELECT BRAND_ID,TOTAL_PO_DISTRIBUTOR FROM ACCRUED_HEADER
--WHERE GP_ID IS NOT NULL AND FLAG = 'Y'
--ORDER BY BRAND_ID
--
--COMPUTE SUM(TOTAL_PO_DISTRIBUTOR) BY BRAND_ID
--
--SELECT * FROM ACCRUED_DETAIL WHERE ACHIEVEMENT_ID = ANY(SELECT ACHIEVEMENT_ID
--FROM ACCRUED_HEADER WHERE GP_ID IS NOT NULL AND FLAG = 'Q1')
--DELETE FROM ACCRUED_DETAIL WHERE ACHIEVEMENT_ID = ANY(SELECT ACHIEVEMENT_ID FROM ACCRUED_HEADER
--WHERE GP_ID IS NOT NULL);



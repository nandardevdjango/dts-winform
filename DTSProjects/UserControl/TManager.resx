<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="GridEX1.WatermarkImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>
Use Nufarm;
GO

IF NOT EXISTS (SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = 'base table' AND TABLE_NAME = 'AGREE_PROGRESSIVE_DISC_VAL')
BEGIN
CREATE TABLE [dbo].[AGREE_PROGRESSIVE_DISC_VAL](
	IDApp [int] NOT NULL,
	[AGREEMENT_NO] [varchar](25) NOT NULL,
	[UP_TO_PCT] [decimal](19, 4) NOT NULL CONSTRAINT [DF_AGREE_PROGRESSIVE_DISC_VAL_UP_TO_PCT]  DEFAULT (0),
	[PRGSV_DISC_PCT] [decimal](18, 4) NOT NULL CONSTRAINT [DF_AGREE_PROGRESSIVE_DISC_VAL_PRGSV_DISC_PCT]  DEFAULT (0),
	[QSY_DISC_FLAG] [char](1) NOT NULL,
	[CREATE_BY] [varchar](50) NULL,
	[CREATE_DATE] [datetime] NULL,
	[MODIFY_BY] [varchar](50) NULL,
	[MODIFY_DATE] [datetime] NULL,
 CONSTRAINT [PK_AGREE_PROGRESSIVE_DISC_VAL] PRIMARY KEY CLUSTERED 
(
	IDApp ASC
) ON [PRIMARY]
) ON [PRIMARY]
END
GO

USE [Nufarm]
GO
IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[BRND_AVGPRICE]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
CREATE TABLE [dbo].[BRND_AVGPRICE](
	[IDApp] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	[BRAND_ID] [varchar](7) NOT NULL,
	[AVGPRICE] [decimal](18, 4) NOT NULL,
	[START_PERIODE] [smalldatetime] NULL,
	[CreatedBy] [varchar](50) NULL,
	[CreatedDate] [smalldatetime] NULL,
	[ModifiedBy] [varchar](50) NULL,
	[ModifiedDate] [smalldatetime] NULL,
 CONSTRAINT [PK_BRND_AVGPRICE] PRIMARY KEY CLUSTERED 
(
	[IDApp] ASC
) ON [PRIMARY]
) ON [PRIMARY]
END


IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'ACCRUED_HEADER')C WHERE ColumnName = 'TARGET_BY_VALUE')
ALTER TABLE ACCRUED_HEADER ADD TARGET_BY_VALUE DECIMAL(18,4) NULL ;
GO

IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'ACCRUED_HEADER')C WHERE ColumnName = 'ACTUAL_BY_VALUE')
ALTER TABLE ACCRUED_HEADER ADD ACTUAL_BY_VALUE DECIMAL(18,4) NULL ;
GO

IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'ACCRUED_HEADER')C WHERE ColumnName = 'DISPRO_BY_VALUE')
ALTER TABLE ACCRUED_HEADER ADD DISPRO_BY_VALUE DECIMAL(18,4) NULL ;
GO

IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'ACCRUED_HEADER')C WHERE ColumnName = 'ACH_DISPRO_BY_VALUE')
ALTER TABLE ACCRUED_HEADER ADD ACH_DISPRO_BY_VALUE DECIMAL(18,4) NULL ;
GO

IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'ACCRUED_HEADER')C WHERE ColumnName = 'DISC_BY_VALUE')
ALTER TABLE ACCRUED_HEADER ADD DISC_BY_VALUE DECIMAL(18,4) NULL ;
GO


IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'ACCRUED_HEADER')C WHERE ColumnName = 'DISC_BY_VOLUME')
ALTER TABLE ACCRUED_HEADER ADD DISC_BY_VOLUME DECIMAL(18,3) NULL ;
GO

IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'ACCRUED_HEADER')C WHERE ColumnName = 'AGREE_ACH_BY')
ALTER TABLE ACCRUED_HEADER ADD AGREE_ACH_BY CHAR(3) NULL ;
GO

IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'ACCRUED_HEADER')C WHERE ColumnName = 'DISC_DIST_BY_VOLUME')
ALTER TABLE ACCRUED_HEADER ADD DISC_DIST_BY_VOLUME DECIMAL(18,4) NULL ;
GO
IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'ACCRUED_HEADER')C WHERE ColumnName = 'DISC_DIST_BY_VALUE')
ALTER TABLE ACCRUED_HEADER ADD DISC_DIST_BY_VALUE DECIMAL(18,4) NULL ;
GO


set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go

ALTER PROCEDURE [dbo].[Usp_Create_Temp_Invoice_Table]
@DEC_START_DATE NUMERIC(9,0),@DEC_END_DATE NUMERIC(9,0),
@COMPUTERNAME VARCHAR(100)
AS
SET NOCOUNT ON;
DECLARE @Statement NVARCHAR(4000);

SET @Statement = 'SELECT SUBSTRING(REPLACE(RIGHT(RTRIM(INV.ITEM),14),''-'',''''),2,9)AS BRANDPACK_ID,INV.BRANDPACK_NAME,
      INV.QTYSHIPPED - INV.QTYRETURN AS QTY,RTRIM(INV.INVNUMBER)AS INVNUMBER, RTRIM(INV.PONUMBER) AS PONUMBER,RTRIM(INV.REFERENCE)AS REFERENCE,INV.INVDATE,INV.AUDTUSER
      INTO tempdb..##T_SELECT_INVOICE_' + @COMPUTERNAME + ' FROM
      (
       SELECT INVH.INVDATE,INVH.INVNUMBER,INVH.PONUMBER,RTRIM(ORD1.VALUE)AS REFERENCE,INVD.ITEM,INVD.[DESC] AS BRANDPACK_NAME,INVD.QTYSHIPPED,ISNULL(CRD.QTYRETURN,0)AS QTYRETURN,INVD.AUDTUSER
       FROM NI87.dbo.OEINVH INVH INNER JOIN NI87.dbo.OEINVD INVD ON INVH.INVUNIQ = INVD.INVUNIQ
       INNER JOIN NI87.DBO.OEORDH ORD ON ORD.ORDNUMBER = INVH.ORDNUMBER
       INNER JOIN NI87.DBO.OEORDHO ORD1 ON ORD.ORDUNIQ = ORD1.ORDUNIQ
       LEFT OUTER JOIN
                  (
		   SELECT CRDH1.INVNUMBER,CRDH1.ITEM,ISNULL(SUM(CRDH1.QTYRETURN),0)AS QTYRETURN
		   FROM 
			(								
                   	  SELECT CRDH.CRDUNIQ,CRDH.INVNUMBER,CRDH.CRDDATE,CRD.ITEM,ISNULL(CRD.QTYRETURN,0)AS QTYRETURN
                          FROM NI87.DBO.OECRDH CRDH INNER JOIN 
                          (
                            SELECT CRDUNIQ,ITEM,ISNULL(SUM(QTYRETURN),0)AS QTYRETURN
                            FROM NI87.DBO.OECRDD WHERE LINETYPE = 1 AND (RTRIM(ACCTSET) = ''FG'' OR RTRIM(ACCTSET) = ''FGST'')
						    GROUP BY CRDUNIQ,ITEM
                           )CRD ON CRDH.CRDUNIQ = CRD.CRDUNIQ      
                         )CRDH1
                   WHERE CRDH1.CRDDATE >= ' + CAST(@DEC_START_DATE AS VARCHAR(20)) + '' +
                   ' GROUP BY CRDH1.INVNUMBER,CRDH1.ITEM    
                  )CRD
        ON CRD.INVNUMBER = INVH.INVNUMBER 
        AND CRD.ITEM = INVD.ITEM
        WHERE RTRIM(ORD1.OPTFIELD) = ''DTSREF''
        AND LEN(RTRIM(ORD1.VALUE)) >= 4
        AND INVH.INVDATE >= ' + CAST(@DEC_START_DATE AS VARCHAR(20)) + '' +
        ' AND INVH.INVDATE <= ' + CAST(@DEC_END_DATE AS VARCHAR(20)) + '' +
	'	AND (RTRIM(INVD.ACCTSET) = ''FG'' OR RTRIM(INVD.ACCTSET) = ''FGST'') AND INVD.LINETYPE = 1
        AND LEN(RIGHT(RTRIM(INVD.ITEM),11)) >= 11
       )INV;
   CREATE NONCLUSTERED INDEX IDX_T_S_I ON ##T_SELECT_INVOICE_' + @COMPUTERNAME + '(INVDATE,QTY,BRANDPACK_ID,REFERENCE);'
execute sp_executesql @stmt = @statement;
GO
--UPDATE ACCRUED_HEADER SET TARGET_BY_VALUE = 0,ACTUAL_BY_VALUE = 0,DISPRO_BY_VALUE = 0,ACH_DISPRO_BY_VALUE = 0,
--DISC_BY_VALUE = 0,DISC_BY_VOLUME = 0,AGREE_ACH_BY = 'VOL'




--DROP PROCEDURE Sp_Select_QS_Flag
--DROP PROCEDURE Sp_Select_Y_Flag
--DROP PROCEDURE Usp_Select_ReferencedData_ABI
--
--IF NOT EXISTS(SELECT ColumnName FROM (
--			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
--               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
--			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
--			   WHERE t.[TABLE_NAME] = 'ACCRUED_HEADER')C WHERE ColumnName = 'COMBINED_BRAND_ID')
--ALTER TABLE ACCRUED_HEADER ADD COMBINED_BRAND_ID VARCHAR(7) NULL ;
--GO
--SET TRANSACTION ISOLATION LEVEL READ COMMITTED
--BEGIN TRANSACTION;
--DECLARE @V_BRAND_ID VARCHAR(7),@V_BRAND_NAME VARCHAR(100),@V_AVGPRICE DECIMAL(18,4);
--DECLARE CURSOR_AVGPRICE 
--CURSOR FOR 
--SELECT * FROM(
--SELECT PRODUCTS,CONVERT(DECIMAL(18,4),[Price Exclude PPN])AS [Price Exclude PPN] FROM impAvgPrice
--WHERE ([PRODUCTS CODE] IS NULL OR [PRODUCTS CODE] = '') 
--AND (PRODUCTS NOT LIKE '%1000000%') AND [PACK SIZE] = 'TOTAL')C
--WHERE PRODUCTS IN(SELECT BRAND_NAME FROM BRND_BRAND WHERE IsActive = 1);
--OPEN CURSOR_AVGPRICE ;
--FETCH NEXT FROM CURSOR_AVGPRICE INTO @V_BRAND_NAME,@V_AVGPRICE ;
--WHILE (@@FETCH_STATUS = 0)
--BEGIN
--SET @V_BRAND_ID = (SELECT TOP 1 BR.BRAND_ID FROM BRND_BRAND BR WHERE BR.IsActive = 1
--			       AND BRAND_NAME = @V_BRAND_NAME
--				   AND EXISTS(SELECT BRAND_ID FROM BRND_BRANDPACK WHERE IsActive = 1 AND BRAND_ID = BR.BRAND_ID)
--				   ORDER BY BR.CREATE_DATE DESC);
--	 IF(@V_BRAND_ID IS NOT NULL AND @V_AVGPRICE IS NOT NULL)
--	 BEGIN
--		INSERT INTO BRND_AVGPRICE(BRAND_ID,AVGPRICE,START_PERIODE,CreatedBy,CreatedDate)
--		VALUES(@V_BRAND_ID,@V_AVGPRICE,'04/12/2015','System',CONVERT(VARCHAR(100),GETDATE(),101)); 
--	 END
--	FETCH NEXT FROM CURSOR_AVGPRICE INTO @V_BRAND_NAME,@V_AVGPRICE ;
--END
--CLOSE CURSOR_AVGPRICE ;
--DEALLOCATE CURSOR_AVGPRICE ;
--
--IF(@@TRANCOUNT > 0)
--BEGIN
-- IF (@@ERROR > 0)
--	ROLLBACK TRANSACTION ;RETURN;
--END
--COMMIT TRANSACTION;
--GO

--UPDATE MANUAL
--Spark/Burndown 160 SL	25000

--Roundup Powermax 660 SL
--RoundUp SL

--UPDATE ImpAvgPrice SET PRODUCTS = 'WUZ 433 SL' WHERE [PRODUCTS] = 'Wuz 280 SC';
--GO
--UPDATE ImpAvgPrice SET PRODUCTS = 'TILLMASTER 240/120 SL' WHERE PRODUCTS = 'Tillmastar 240/120 SL';
--GO
--UPDATE ImpAvgPrice SET PRODUCTS = 'CYPERMETHRIN 250 EC' WHERE PRODUCTS = 'Cypermetrin 250 EC';
--GO
--UPDATE ImpAvgPrice SET PRODUCTS = 'BLAIT 20 WP' WHERE PRODUCTS = 'Blait  20 WP';
--GO
--INSERT INTO ImpAvgPrice (PRODUCTS,[Price Exclude PPN])
--VALUES('SPARK 160 SL',25000);
--GO

IF EXISTS(SELECT NAME FROM [sys].[objects] WHERE NAME = 'Usp_Get_Total_Qty_Brand_By_Invoice' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Total_Qty_Brand_By_Invoice
GO

CREATE PROCEDURE Usp_Get_Total_Qty_Brand_By_Invoice ---TANGGAL DI CONVERSI JADI DECIMAL TAHUN BULAN TANGGAL
@AGREEMENT_NO VARCHAR(32),
@START_DATE SMALLDATETIME,
@END_DATE SMALLDATETIME,
@COMPUTERNAME VARCHAR(100)
AS
--PRT003 Setting referer invoice ke referencePO di InvoiceHeader ReferencePO = 1,NomorPO = 0
SET DEADLOCK_PRIORITY NORMAL;SET NOCOUNT ON; SET ARITHABORT OFF ; SET ANSI_WARNINGS OFF ;
DECLARE @Statement NVARCHAR(3000);
IF (SELECT AllowRules FROM RefBussinesRules WHERE CodeApp = 'RPT003') = 1
BEGIN
   SET @Statement = 'SELECT DISTRIBUTOR_ID,BRAND_ID,SUM(QTY)AS TOTAL_INVOICE, SUM(PO_AMOUNT) AS PO_AMOUNT_DISTRIBUTOR,SUM(INV_AMOUNT) AS ACTUAL_AMOUNT_DISTRIBUTOR
  		     FROM( SELECT PO.DISTRIBUTOR_ID,PO.BRAND_ID,PO.BRANDPACK_ID,(ISNULL(INVOICE.QTY,0)/ISNULL(PO.SPPB_QTY,0)) * PO.PO_ORIGINAL_QTY AS QTY,
					PO.PO_AMOUNT,INVOICE.INV_AMOUNT
					 FROM tempdb..##T_MASTER_PO_' + @COMPUTERNAME + ' PO
					 INNER JOIN (SELECT INV.PONUMBER,INV.REFERENCE,Tmbp.BRANDPACK_ID_DTS AS BRANDPACK_ID,INV.QTY,INV.INV_AMOUNT 
							  FROM ##T_SELECT_INVOICE_' + @COMPUTERNAME + ' INV INNER JOIN COMPARE_ITEM Tmbp 
							  ON INV.BRANDPACK_ID =  Tmbp.BRANDPACK_ID_ACCPAC AND INV.QTY > 0
    			       				 )INVOICE
					 ON PO.BRANDPACK_ID = INVOICE.BRANDPACK_ID
					 AND ((PO.PO_REF_NO = INVOICE.PONUMBER)OR(PO.RUN_NUMBER = INVOICE.REFERENCE))
					 WHERE PO.DISTRIBUTOR_ID = SOME( SELECT DISTRIBUTOR_ID FROM Nufarm.DBO.DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @V_AGREEMENT_NO )
					 AND PO.PO_REF_DATE >= @V_START_DATE AND PO.PO_REF_DATE <= @V_END_DATE AND PO.IncludeDPD = ''YESS''
		       )INV
		   GROUP BY DISTRIBUTOR_ID,BRAND_ID
		   OPTION(KEEP PLAN);'
EXECUTE Sp_Executesql @Statement,N'@V_START_DATE SMALLDATETIME,@V_END_DATE SMALLDATETIME,@V_AGREEMENT_NO VARCHAR(100)',
		      @START_DATE,@END_DATE,@AGREEMENT_NO 
END 
GO

---------------------------------------------------------------------------------------------


IF EXISTS(SELECT NAME FROM [sys].[objects] WHERE NAME = 'Usp_Create_Temp_Invoice_Table' AND TYPE = 'P')
DROP PROCEDURE Usp_Create_Temp_Invoice_Table
GO
CREATE PROCEDURE Usp_Create_Temp_Invoice_Table
@DEC_START_DATE NUMERIC(9,0),@DEC_END_DATE NUMERIC(9,0),
@COMPUTERNAME VARCHAR(100)
AS
SET NOCOUNT ON;
DECLARE @Statement NVARCHAR(4000);

SET @Statement = 'SELECT SUBSTRING(REPLACE(RIGHT(RTRIM(INV.ITEM),14),''-'',''''),2,9)AS BRANDPACK_ID,INV.BRANDPACK_NAME,
      INV.QTYSHIPPED - INV.QTYRETURN AS QTY,RTRIM(INV.INVNUMBER)AS INVNUMBER, RTRIM(INV.PONUMBER) AS PONUMBER,RTRIM(INV.REFERENCE)AS REFERENCE,INV.INVDATE, 
	 (INV.QTYSHIPPED - INV.QTYRETURN)* INV.UNITPRICE AS INV_AMOUNT,INV.AUDTUSER
      INTO tempdb..##T_SELECT_INVOICE_' + @COMPUTERNAME + ' FROM
      (
       SELECT INVH.INVDATE,INVH.INVNUMBER,INVH.PONUMBER,RTRIM(ORD1.VALUE)AS REFERENCE,INVD.ITEM,INVD.[DESC] AS BRANDPACK_NAME,INVD.QTYSHIPPED,ISNULL(CRD.QTYRETURN,0)AS QTYRETURN,INVD.UNITPRICE,INVD.AUDTUSER
       FROM NI87.dbo.OEINVH INVH INNER JOIN NI87.dbo.OEINVD INVD ON INVH.INVUNIQ = INVD.INVUNIQ
       INNER JOIN NI87.DBO.OEORDH ORD ON ORD.ORDNUMBER = INVH.ORDNUMBER
       INNER JOIN NI87.DBO.OEORDHO ORD1 ON ORD.ORDUNIQ = ORD1.ORDUNIQ
       LEFT OUTER JOIN
                  (
		   SELECT CRDH1.INVNUMBER,CRDH1.ITEM,ISNULL(SUM(CRDH1.QTYRETURN),0)AS QTYRETURN
		   FROM 
			(								
                   	  SELECT CRDH.CRDUNIQ,CRDH.INVNUMBER,CRDH.CRDDATE,CRD.ITEM,ISNULL(CRD.QTYRETURN,0)AS QTYRETURN
                          FROM NI87.DBO.OECRDH CRDH INNER JOIN 
                          (
                            SELECT CRDUNIQ,ITEM,ISNULL(SUM(QTYRETURN),0)AS QTYRETURN
                            FROM NI87.DBO.OECRDD WHERE LINETYPE = 1 AND (RTRIM(ACCTSET) = ''FG'' OR RTRIM(ACCTSET) = ''FGST'')
						    GROUP BY CRDUNIQ,ITEM
                           )CRD ON CRDH.CRDUNIQ = CRD.CRDUNIQ      
                         )CRDH1
                   WHERE CRDH1.CRDDATE >= ' + CAST(@DEC_START_DATE AS VARCHAR(20)) + '' +
                   ' GROUP BY CRDH1.INVNUMBER,CRDH1.ITEM    
                  )CRD
        ON CRD.INVNUMBER = INVH.INVNUMBER 
        AND CRD.ITEM = INVD.ITEM
        WHERE RTRIM(ORD1.OPTFIELD) = ''DTSREF''
        AND LEN(RTRIM(ORD1.VALUE)) >= 4
        AND INVH.INVDATE >= ' + CAST(@DEC_START_DATE AS VARCHAR(20)) + '' +
        ' AND INVH.INVDATE <= ' + CAST(@DEC_END_DATE AS VARCHAR(20)) + '' +
	'	AND (RTRIM(INVD.ACCTSET) = ''FG'' OR RTRIM(INVD.ACCTSET) = ''FGST'') AND INVD.LINETYPE = 1
        AND LEN(RIGHT(RTRIM(INVD.ITEM),11)) >= 11
       )INV;
   CREATE CLUSTERED INDEX IDX_T_S_I ON ##T_SELECT_INVOICE_' + @COMPUTERNAME + '(INVDATE,QTY,BRANDPACK_ID,REFERENCE);'
execute sp_executesql @stmt = @statement;
GO


IF EXISTS(SELECT NAME FROM [sys].[objects] WHERE NAME = 'Usp_Get_Total_Qty_BrandPack_By_Invoice' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Total_Qty_BrandPack_By_Invoice
GO
CREATE PROCEDURE Usp_Get_Total_Qty_BrandPack_By_Invoice
@AGREEMENT_NO VARCHAR(32),
@DISTRIBUTOR_ID VARCHAR(10),
@FLAG VARCHAR(2),
@START_DATE SMALLDATETIME,
@END_DATE SMALLDATETIME,
@COMPUTERNAME VARCHAR(100)
AS
 SET DEADLOCK_PRIORITY NORMAL;SET NOCOUNT ON;
DECLARE @Statement NVARCHAR(3000);
IF (SELECT AllowRules FROM RefBussinesRules WHERE CodeApp = 'RPT003') = 1
 BEGIN 
	SET @Statement = 'SELECT ABI.DISTRIBUTOR_ID,ABI.BRANDPACK_ID,ISNULL(SUM(INV.QTY),0)AS TOTAL_INVOICE,ISNULL(SUM(INV.INV_AMOUNT),0) AS TOTAL_ACTUAL_AMOUNT,
		 	  ISNULL(SUM(INV.PO_ORIGINAL_QTY),0)AS TOTAL_PO_ORIGINAL FROM Nufarm.DBO.VIEW_AGREE_BRANDPACK_INCLUDE ABI
		    	  INNER JOIN ##T_PO_Original_By_Distributor_' + @COMPUTERNAME + ' INV ' + 
	 	    	 ' ON ABI.BRANDPACK_ID = INV.BRANDPACK_ID
	 	    	  AND ABI.DISTRIBUTOR_ID = INV.DISTRIBUTOR_ID
	 	    	  WHERE ABI.AGREEMENT_NO = @V_AGREEMENT_NO AND INV.DISTRIBUTOR_ID = @V_DISTRIBUTOR_ID
	 	    	  AND ABI.DISTRIBUTOR_ID = @V_DISTRIBUTOR_ID
	            	  GROUP BY ABI.DISTRIBUTOR_ID,ABI.BRANDPACK_ID OPTION(KEEP PLAN);'
	EXECUTE Sp_executesql @statement,N'@V_DISTRIBUTOR_ID VARCHAR(10),@V_AGREEMENT_NO VARCHAR(100)',
			       @DISTRIBUTOR_ID,@AGREEMENT_NO 
 END
GO

IF EXISTS(SELECT NAME FROM [sys].[objects] WHERE NAME = 'Usp_Get_Changed_Invoice_By_BrandPack_ID' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Changed_Invoice_By_BrandPack_ID
GO
CREATE PROCEDURE Usp_Get_Changed_Invoice_By_BrandPack_ID
@AGREEMENT_NO VARCHAR(32),
@DISTRIBUTOR_ID VARCHAR(10),
@FLAG VARCHAR(2),
@START_DATE SMALLDATETIME,
@END_DATE SMALLDATETIME,
@COMPUTERNAME VARCHAR(100)
AS
--PRT003 Setting referer invoice ke referencePO di InvoiceHeader ReferencePO = 1,NomorPO = 0
SET DEADLOCK_PRIORITY NORMAL;SET NOCOUNT ON;
DECLARE @Statement NVARCHAR(3000) ;

IF (SELECT AllowRules FROM RefBussinesRules WHERE CodeApp = 'RPT003') = 1
BEGIN
SET @Statement = 'IF EXISTS(SELECT ACD.ACHIEVEMENT_ID,ACD.BRANDPACK_ID,ACD.TOTAL_ACTUAL,ACD.DISC_QTY,ACD.RELEASE_QTY,ACD.LEFT_QTY,ACD.CAN_RELEASE,
				  ISNULL(INV.TOTAL_INVOICE,0)AS TOTAL_INVOICE,ISNULL(INV.TOTAL_PO_ORIGINAL,0) AS TOTAL_PO_ORIGINAL
				  FROM Nufarm.DBO.ACCRUED_DETAIL ACD INNER JOIN Nufarm.DBO.ACCRUED_HEADER ACH ON ACD.ACHIEVEMENT_ID = ACH.ACHIEVEMENT_ID 
				  INNER JOIN Tempdb..##T_Agreement_BrandPack_' + @COMPUTERNAME + ' INV
				  ON ACD.BRANDPACK_ID = INV.BRANDPACK_ID
				  AND ACH.DISTRIBUTOR_ID = INV.DISTRIBUTOR_ID
				  WHERE ACH.AGREEMENT_NO = @V_AGREEMENT_NO
				  AND ACH.DISTRIBUTOR_ID = @V_DISTRIBUTOR_ID AND ACH.FLAG = @V_FLAG AND ACD.TOTAL_ACTUAL <> CAST((ISNULL(INV.TOTAL_INVOICE,0))AS DECIMAL(18,3))) 
			BEGIN
			SELECT ACD.ACHIEVEMENT_ID,ACD.BRANDPACK_ID,ACD.TOTAL_ACTUAL,ACD.DISC_QTY,ACD.RELEASE_QTY,ACD.LEFT_QTY,ACD.CAN_RELEASE,
				  ISNULL(INV.TOTAL_INVOICE,0)AS TOTAL_INVOICE,ISNULL(INV.TOTAL_PO_ORIGINAL,0) AS TOTAL_PO_ORIGINAL,ISNULL(INV.TOTAL_ACTUAL_AMOUNT,0)AS TOTAL_ACTUAL_AMOUNT
				  FROM Nufarm.DBO.ACCRUED_DETAIL ACD INNER JOIN Nufarm.DBO.ACCRUED_HEADER ACH ON ACD.ACHIEVEMENT_ID = ACH.ACHIEVEMENT_ID 
				  LEFT OUTER JOIN Tempdb..##T_Agreement_BrandPack_' + @COMPUTERNAME + ' INV
				  ON ACD.BRANDPACK_ID = INV.BRANDPACK_ID
				  AND ACH.DISTRIBUTOR_ID = INV.DISTRIBUTOR_ID
				  WHERE ACH.AGREEMENT_NO = @V_AGREEMENT_NO
				  AND ACH.DISTRIBUTOR_ID = @V_DISTRIBUTOR_ID AND ACH.FLAG = @V_FLAG ;
			 END';
EXECUTE sp_executesql @Statement,N'@V_DISTRIBUTOR_ID VARCHAR(10),@V_AGREEMENT_NO VARCHAR(40),@V_FLAG VARCHAR(2)',
				   @DISTRIBUTOR_ID,@AGREEMENT_NO,@FLAG
END
GO

IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'ACCRUED_HEADER')C WHERE ColumnName = 'TOTAL_PO_AMOUNT')
ALTER TABLE ACCRUED_HEADER ADD TOTAL_PO_AMOUNT DECIMAL(18,4) NULL ;
GO

IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'ACCRUED_HEADER')C WHERE ColumnName = 'PO_AMOUNT_DISTRIBUTOR')
ALTER TABLE ACCRUED_HEADER ADD PO_AMOUNT_DISTRIBUTOR DECIMAL(18,4) NULL ;
GO

IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'ACCRUED_HEADER')C WHERE ColumnName = 'TOTAL_ACTUAL_AMOUNT')
ALTER TABLE ACCRUED_HEADER ADD TOTAL_ACTUAL_AMOUNT DECIMAL(18,4) NULL ;
GO
IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'ACCRUED_HEADER')C WHERE ColumnName = 'ACTUAL_AMOUNT_DISTRIBUTOR')
ALTER TABLE ACCRUED_HEADER ADD ACTUAL_AMOUNT_DISTRIBUTOR DECIMAL(18,4) NULL ;
GO

--UPDATE ACCRUED_HEADER SET TOTAL_PO_AMOUNT = 0,PO_AMOUNT_DISTRIBUTOR = 0,TOTAL_ACTUAL_AMOUNT = 0,
--ACTUAL_AMOUNT_DISTRIBUTOR = 0 ;
--GO


IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'ACCRUED_DETAIL')C WHERE ColumnName = 'TOTAL_ACTUAL_AMOUNT')
ALTER TABLE ACCRUED_DETAIL ADD TOTAL_ACTUAL_AMOUNT DECIMAL(18,4) NULL ;
GO

IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'ACCRUED_DETAIL')C WHERE ColumnName = 'TOTAL_PO_AMOUNT')
ALTER TABLE ACCRUED_DETAIL ADD TOTAL_PO_AMOUNT DECIMAL(18,4) NULL ;
GO

--UPDATE ACCRUED_DETAIL SET TOTAL_ACTUAL_AMOUNT = 0,TOTAL_PO_AMOUNT = 0 ;
--GO
---------------------------------------------------------------------------------------------------------
IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'ACCRUED_HEADER')C WHERE ColumnName = 'CPQ1_AMOUNT')
ALTER TABLE ACCRUED_HEADER ADD CPQ1_AMOUNT DECIMAL(18,4) NULL ;
GO
IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'ACCRUED_HEADER')C WHERE ColumnName = 'CPQ2_AMOUNT')
ALTER TABLE ACCRUED_HEADER ADD CPQ2_AMOUNT DECIMAL(18,4) NULL ;
GO
IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'ACCRUED_HEADER')C WHERE ColumnName = 'CPQ3_AMOUNT')
ALTER TABLE ACCRUED_HEADER ADD CPQ3_AMOUNT DECIMAL(18,4) NULL ;
GO

IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'ACCRUED_HEADER')C WHERE ColumnName = 'CPS1_AMOUNT')
ALTER TABLE ACCRUED_HEADER ADD CPS1_AMOUNT DECIMAL(18,4) NULL ;
GO

--UPDATE ACCRUED_HEADER SET CPQ1_AMOUNT = 0,CPQ2_AMOUNT = 0,CPQ3_AMOUNT = 0,CPS1_AMOUNT = 0;
--GO
-------------------------------------------------------------------------------------
IF EXISTS(SELECT NAME FROM [sys].[objects] WHERE NAME = 'Usp_Get_Total_Acrue_By_Year' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Total_Acrue_By_Year
GO
CREATE PROCEDURE Usp_Get_Total_Acrue_By_Year
@AGREEMENT_NO VARCHAR(32),
@CURRENT_FLAG VARCHAR(2)
AS
SET DEADLOCK_PRIORITY NORMAL; SET NOCOUNT ON;
DECLARE @V_QS_TREATMENT_FLAG CHAR(1),@V_IsTargetGroup BIT;
SET @V_QS_TREATMENT_FLAG = (SELECT TOP 1 QS_TREATMENT_FLAG FROM AGREE_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO);
IF (SELECT COUNT(AGREEMENT_NO) FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO) > 1
    BEGIN SET @V_IsTargetGroup = 1; END
ELSE 
    BEGIN SET @V_IsTargetGroup = 0; END
IF @V_QS_TREATMENT_FLAG = 'Q'
   BEGIN 
	SELECT ABI.DISTRIBUTOR_ID,ABI.AGREEMENT_NO,ABI.[ID] AS AGREE_BRAND_ID,ABI.BRAND_ID,ABI.TARGET_YEAR,
       TOTAL_ACTUAL = CASE @CURRENT_FLAG 
			 WHEN 'Q1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4
			 WHEN 'Q2' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q3 + ABI.TARGET_Q4
			 WHEN 'Q3' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q4
			 ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
       	     END,
		ISNULL(ACRH.TOTAL_PO_ORIGINAL,0)AS TOTAL_PO_ORIGINAL,ISNULL(ACRH.TOTAL_PO_DISTRIBUTOR,0) AS TOTAL_PO_DISTRIBUTOR,
		ACTUAL_YEAR_DISTRIBUTOR = CASE @V_IsTargetGroup
							 	  WHEN 0 THEN CASE @CURRENT_FLAG 
												  WHEN 'Q1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4
												  WHEN 'Q2' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q3 + ABI.TARGET_Q4
												  WHEN 'Q3' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q4
												  ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) END
                                  ELSE  ISNULL(ACRH.ACTUAL_YEAR_DISTRIBUTOR,0)
                                  END,           		
        ABI.COMBINED_BRAND,--UNTUK AMOUNT GAK USAH PAKE CURRENT FLAG LAH, KARENA BUKA ACCRUE LAGI
		ACRH.TOTAL_ACTUAL_AMOUNT, ACRH.TOTAL_PO_AMOUNT,ACRH.T_PO_DIST_AMOUNT AS PO_AMOUNT_DISTRIBUTOR,ACRH.ACTUAL_YEAR_DIST_AMOUNT FROM VIEW_AGREE_BRAND_INCLUDE ABI
	    LEFT OUTER JOIN( 
					   SELECT ACRHA.AGREE_BRAND_ID,ACRHA.ACTUAL_Q1 + ACRHA.ACTUAL_Q2 + ACRHA.ACTUAL_Q3 + ACRHA.ACTUAL_Q4  + ACRHA.TOTAL_JOIN_CP AS TOTAL_ACTUAL,
					   ACRHA.ACTUAL_AMTQ1 + ACRHA.ACTUAL_AMTQ2 + ACRHA.ACTUAL_AMTQ3 +  ACRHA.ACTUAL_AMTQ4 + ACRHA.TOTAL_JOIN_CPAMT AS TOTAL_ACTUAL_AMOUNT,
					   ACRHA.TOTAL_PO_Q1 + ACRHA.TOTAL_PO_Q2 + ACRHA.TOTAL_PO_Q3 + ACRHA.TOTAL_PO_Q4 AS TOTAL_PO_ORIGINAL,
					   ACRHA.TOTAL_PO_AMTQ1 +  ACRHA.TOTAL_PO_AMTQ2 +  ACRHA.TOTAL_PO_AMTQ3 +  ACRHA.TOTAL_PO_AMTQ4 AS TOTAL_PO_AMOUNT,  	
					   ACRHA1.ACTUAL_Y,ACRHA1.ACTUAL_AMTY, ACRHD.DISTRIBUTOR_ID,
					   ACRHD.ACDIST_Q1 + ACRHD.ACDIST_Q2 + ACRHD.ACDIST_Q3 + ACRHD.ACDIST_Q4 + ACRHD.TOTAL_CP AS ACTUAL_YEAR_DISTRIBUTOR,
					   ACRHD.ACDIST_AMTQ1 + ACRHD.ACDIST_AMTQ2 + ACRHD.ACDIST_AMTQ3 + ACRHD.ACDIST_AMTQ4 + ACRHD.TOTAL_CP_AMOUNT AS ACTUAL_YEAR_DIST_AMOUNT,
					   ACRHD.T_PO_DIST_Q1 + ACRHD.T_PO_DIST_Q2 + ACRHD.T_PO_DIST_Q3 + ACRHD.T_PO_DIST_Q4 AS TOTAL_PO_DISTRIBUTOR,
					   ACRHD.T_PO_DIST_AMTQ1 + ACRHD.T_PO_DIST_AMTQ2 + ACRHD.T_PO_DIST_AMTQ3 + ACRHD.T_PO_DIST_AMTQ4 AS T_PO_DIST_AMOUNT
					   FROM
						(
                      	 SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
						 --UNTUK QTY DULU
						 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_DISTRIBUTOR END),0)  AS ACTUAL_Q1,
						 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q1,
						 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_Q2,
						 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q2, 
						 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_DISTRIBUTOR END),0)  AS ACTUAL_Q3,
						 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q3,
						 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_Q4,
						 ISNULL(SUM(CASE FLAG when 'Q4' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q4,
					
						 ---UNTUK VALUE
						 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0)  AS ACTUAL_AMTQ1,
						 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS TOTAL_PO_AMTQ1,
						 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0)  AS ACTUAL_AMTQ2,
						 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS TOTAL_PO_AMTQ2,
						 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0)  AS ACTUAL_AMTQ3,
						 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS TOTAL_PO_AMTQ3,
						 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0)  AS ACTUAL_AMTQ4,
						 ISNULL(SUM(CASE FLAG when 'Q4' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS TOTAL_PO_AMTQ4,
						 ISNULL(SUM(TOTAL_CPQ1),0) + ISNULL(SUM(TOTAL_CPQ2),0) + ISNULL(SUM(TOTAL_CPQ3),0) AS TOTAL_JOIN_CP,
						 ISNULL(SUM(CPQ1_AMOUNT),0) + ISNULL(SUM(CPQ2_AMOUNT),0) + ISNULL(SUM(CPQ3_AMOUNT),0) AS TOTAL_JOIN_CPAMT
						 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO 
						 GROUP BY AGREEMENT_NO + BRAND_ID
            	        )ACRHA
					   LEFT OUTER JOIN
                        (SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,TOTAL_ACTUAL AS ACTUAL_Y,TOTAL_ACTUAL_AMOUNT AS ACTUAL_AMTY
  						 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO AND FLAG = 'Y'	
        				)ACRHA1
					   ON ACRHA.AGREE_BRAND_ID = ACRHA1.AGREE_BRAND_ID
                       INNER JOIN 
                            (SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
							 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACDIST_Q1,
							 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS T_PO_DIST_Q1,
							 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACDIST_Q2,
							 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS T_PO_DIST_Q2,
							 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_DISTRIBUTOR END),0) AS ACDIST_Q3,
							 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN TOTAL_PO_DISTRIBUTOR END),0) AS T_PO_DIST_Q3,
							 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_DISTRIBUTOR END),0) AS ACDIST_Q4,
							 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN TOTAL_PO_DISTRIBUTOR END),0) AS T_PO_DIST_Q4,

							 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACDIST_AMTQ1,
							 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS T_PO_DIST_AMTQ1,
							 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACDIST_AMTQ2,
							 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS T_PO_DIST_AMTQ2,
							 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACDIST_AMTQ3,
							 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS T_PO_DIST_AMTQ3,
							 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACDIST_AMTQ4,
							 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS T_PO_DIST_AMTQ4,
							 ISNULL(SUM(TOTAL_CPQ1),0) + ISNULL(SUM(TOTAL_CPQ2),0) + ISNULL(SUM(TOTAL_CPQ3),0) AS TOTAL_CP,
							 ISNULL(SUM(CPQ1_AMOUNT),0) + ISNULL(SUM(CPQ2_AMOUNT),0) + ISNULL(SUM(CPQ3_AMOUNT),0) AS TOTAL_CP_AMOUNT
							 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO
							 GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID 
            	 			 )ACRHD
						ON ACRHD.AGREE_BRAND_ID = ACRHA.AGREE_BRAND_ID
                   )ACRH
         ON ACRH.AGREE_BRAND_ID = ABI.[ID] AND ACRH.DISTRIBUTOR_ID = ABI.DISTRIBUTOR_ID
	WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO
 	OPTION(KEEP PLAN);
    END
 ELSE
     BEGIN
 	 SELECT ABI.DISTRIBUTOR_ID,ABI.AGREEMENT_NO,ABI.[ID] AS AGREE_BRAND_ID,ABI.BRAND_ID,ABI.TARGET_YEAR,
        TOTAL_ACTUAL = CASE @CURRENT_FLAG 
							WHEN 'S1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_S2
						    ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
        				END,
		ISNULL(ACRH.TOTAL_PO_ORIGINAL,0) AS TOTAL_PO_ORIGINAL,ISNULL(ACRH.TOTAL_PO_DISTRIBUTOR,0) AS TOTAL_PO_DISTRIBUTOR,		
		ACTUAL_YEAR_DISTRIBUTOR = CASE @V_IsTargetGroup
									   WHEN 0 THEN CASE @CURRENT_FLAG 
												  WHEN 'S1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_S2
			 									  ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
        		 								  END
									    ELSE  ISNULL(ACRH.ACTUAL_YEAR_DISTRIBUTOR,0)
                                   END,           		
        ABI.COMBINED_BRAND,--UNTUK AMOUNT GAK USAH PAKE CURRENT FLAG LAH, KARENA BUKA ACCRUE LAGI
		ACRH.TOTAL_ACTUAL_AMOUNT, ACRH.TOTAL_PO_AMOUNT,ACRH.T_PO_DIST_AMOUNT AS PO_AMOUNT_DISTRIBUTOR,ACRH.ACTUAL_YEAR_DIST_AMOUNT 
		FROM VIEW_AGREE_BRAND_INCLUDE ABI
		LEFT OUTER JOIN ( 
					      SELECT ACRHA.AGREE_BRAND_ID,
						  ACRHA.ACTUAL_S1 + ACRHA.ACTUAL_S2 + ACRHA.TOTAL_JOIN_CP AS TOTAL_ACTUAL,
						  ACRHA.ACTUAL_AMTS1 + ACRHA.ACTUAL_AMTS2 + ACRHA.TOTAL_JOIN_CPAMT AS TOTAL_ACTUAL_AMOUNT,
					      ACRHA1.ACTUAL_Y AS ACTUAL_Y,ACRHA1.ACTUAL_YAMT,ACRHD.DISTRIBUTOR_ID,
						  ACRHD.ACTDIST_S1 + ACRHD.ACTDIST_S2 + ACRHD.TOTAL_CP AS ACTUAL_YEAR_DISTRIBUTOR,
					      ACRHD.ACTDIST_AMTS1 + ACRHD.ACTDIST_AMTS2 + ACRHD.TOTAL_CPAMT AS ACTUAL_YEAR_DIST_AMOUNT,
						  ACRHA.TOTAL_PO_S1 + ACRHA.TOTAL_PO_S2 AS TOTAL_PO_ORIGINAL,
						  ACRHA.TOTAL_PO_AMTS1 + ACRHA.TOTAL_PO_AMTS2 AS TOTAL_PO_AMOUNT,
						  ACRHD.T_PO_DIST_S1 +  ACRHD.T_PO_DIST_S2 AS TOTAL_PO_DISTRIBUTOR,
						  ACRHD.T_PO_DIST_AMTS1 +  ACRHD.T_PO_DIST_AMTS2 AS  T_PO_DIST_AMOUNT
                         FROM
                             (
                         	   SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
		    				   ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_S1,
							   ISNULL(SUM(CASE FLAG WHEN 'S1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_S1,
							   ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_S2,
							   ISNULL(SUM(CASE FLAG WHEN 'S2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_S2,
								
							   ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACTUAL_AMTS1,
							   ISNULL(SUM(CASE FLAG WHEN 'S1' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS TOTAL_PO_AMTS1,
							   ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACTUAL_AMTS2,
							   ISNULL(SUM(CASE FLAG WHEN 'S2' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS TOTAL_PO_AMTS2,
							   ISNULL(SUM(TOTAL_CPS1),0) AS TOTAL_JOIN_CP,
							   ISNULL(SUM(CPS1_AMOUNT),0) AS TOTAL_JOIN_CPAMT
							   FROM ACCRUED_HEADER WHERE AGREEMENT_NO = '0361/NI/III/2007.14'
							   GROUP BY AGREEMENT_NO + BRAND_ID 
                    	      )ACRHA
 							LEFT OUTER JOIN
										(SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,TOTAL_ACTUAL AS ACTUAL_Y,TOTAL_ACTUAL_AMOUNT AS ACTUAL_YAMT
	  									 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = '0361/NI/III/2007.14' AND FLAG = 'Y'	
		   								 )ACRHA1
							ON ACRHA.AGREE_BRAND_ID = ACRHA1.AGREE_BRAND_ID
							INNER JOIN 
									  (SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
										ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTDIST_S1,
										ISNULL(SUM(CASE FLAG WHEN 'S1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS T_PO_DIST_S1,
										ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTDIST_S2,
										ISNULL(SUM(CASE FLAG WHEN 'S2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS T_PO_DIST_S2,
			
										ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACTDIST_AMTS1,
										ISNULL(SUM(CASE FLAG WHEN 'S1' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS T_PO_DIST_AMTS1,
										ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACTDIST_AMTS2,
										ISNULL(SUM(CASE FLAG WHEN 'S2' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS T_PO_DIST_AMTS2,
    	 								ISNULL(SUM(TOTAL_CPS1),0) AS TOTAL_CP,
										ISNULL(SUM(CPS1_AMOUNT),0) AS TOTAL_CPAMT
										FROM ACCRUED_HEADER WHERE AGREEMENT_NO = '0361/NI/III/2007.14' 
										GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID
                    	 				)ACRHD
   							ON ACRHD.AGREE_BRAND_ID = ACRHA.AGREE_BRAND_ID
						 )ACRH
			 ON ACRH.AGREE_BRAND_ID = ABI.[ID] AND ACRH.DISTRIBUTOR_ID = ABI.DISTRIBUTOR_ID
	WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO
 	OPTION(KEEP PLAN);
   END
GO

--------------------------------------------------------------------------------------------
IF EXISTS(SELECT NAME FROM [sys].[objects] WHERE NAME = 'Usp_Changed_Actual_Accrue_By_Year' AND TYPE = 'P')
	DROP PROCEDURE Usp_Changed_Actual_Accrue_By_Year
GO
CREATE PROCEDURE Usp_Changed_Actual_Accrue_By_Year
@AGREEMENT_NO VARCHAR(32),
@CURRENT_FLAG VARCHAR(2)
AS
SET DEADLOCK_PRIORITY NORMAL; SET NOCOUNT ON;
DECLARE @V_QS_TREATMENT_FLAG CHAR(1),@V_IsTargetGroup BIT;
SET @V_QS_TREATMENT_FLAG = (SELECT TOP 1 QS_TREATMENT_FLAG FROM AGREE_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO);
IF (SELECT COUNT(AGREEMENT_NO) FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO) > 1
    BEGIN SET @V_IsTargetGroup = 1; END
ELSE 
    BEGIN SET @V_IsTargetGroup = 0; END
IF @V_QS_TREATMENT_FLAG = 'Q'
   BEGIN 
	SELECT ABI.DISTRIBUTOR_ID,ABI.AGREEMENT_NO,ABI.[ID] AS AGREE_BRAND_ID,ABI.BRAND_ID,ABI.TARGET_YEAR,
       TOTAL_ACTUAL = CASE @CURRENT_FLAG 
			 WHEN 'Q1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4
			 WHEN 'Q2' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q3 + ABI.TARGET_Q4
			 WHEN 'Q3' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q4
			 ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
       	     END,
		ISNULL(ACRH.TOTAL_PO_ORIGINAL,0)AS TOTAL_PO_ORIGINAL,ISNULL(ACRH.TOTAL_PO_DISTRIBUTOR,0) AS TOTAL_PO_DISTRIBUTOR,
		ACTUAL_YEAR_DISTRIBUTOR = CASE @V_IsTargetGroup
							 	  WHEN 0 THEN CASE @CURRENT_FLAG 
												  WHEN 'Q1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4
												  WHEN 'Q2' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q3 + ABI.TARGET_Q4
												  WHEN 'Q3' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q4
												  ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) END
                                  ELSE  ISNULL(ACRH.ACTUAL_YEAR_DISTRIBUTOR,0)
                                  END,           		
        ABI.COMBINED_BRAND,--UNTUK AMOUNT GAK USAH PAKE CURRENT FLAG LAH, KARENA BUKA ACCRUE LAGI
		ACRH.TOTAL_ACTUAL_AMOUNT, ACRH.TOTAL_PO_AMOUNT,ACRH.T_PO_DIST_AMOUNT AS PO_AMOUNT_DISTRIBUTOR,ACRH.ACTUAL_YEAR_DIST_AMOUNT FROM VIEW_AGREE_BRAND_INCLUDE ABI
	    INNER JOIN( 
					   SELECT ACRHA.AGREE_BRAND_ID,ACRHA.ACTUAL_Q1 + ACRHA.ACTUAL_Q2 + ACRHA.ACTUAL_Q3 + ACRHA.ACTUAL_Q4  + ACRHA.TOTAL_JOIN_CP AS TOTAL_ACTUAL,
					   ACRHA.ACTUAL_AMTQ1 + ACRHA.ACTUAL_AMTQ2 + ACRHA.ACTUAL_AMTQ3 +  ACRHA.ACTUAL_AMTQ4 + ACRHA.TOTAL_JOIN_CPAMT AS TOTAL_ACTUAL_AMOUNT,
					   ACRHA.TOTAL_PO_Q1 + ACRHA.TOTAL_PO_Q2 + ACRHA.TOTAL_PO_Q3 + ACRHA.TOTAL_PO_Q4 AS TOTAL_PO_ORIGINAL,
					   ACRHA.TOTAL_PO_AMTQ1 +  ACRHA.TOTAL_PO_AMTQ2 +  ACRHA.TOTAL_PO_AMTQ3 +  ACRHA.TOTAL_PO_AMTQ4 AS TOTAL_PO_AMOUNT,  	
					   ACRHA1.ACTUAL_Y,ACRHA1.ACTUAL_AMTY, ACRHD.DISTRIBUTOR_ID,
					   ACRHD.ACDIST_Q1 + ACRHD.ACDIST_Q2 + ACRHD.ACDIST_Q3 + ACRHD.ACDIST_Q4 + ACRHD.TOTAL_CP AS ACTUAL_YEAR_DISTRIBUTOR,
					   ACRHD.ACDIST_AMTQ1 + ACRHD.ACDIST_AMTQ2 + ACRHD.ACDIST_AMTQ3 + ACRHD.ACDIST_AMTQ4 + ACRHD.TOTAL_CP_AMOUNT AS ACTUAL_YEAR_DIST_AMOUNT,
					   ACRHD.T_PO_DIST_Q1 + ACRHD.T_PO_DIST_Q2 + ACRHD.T_PO_DIST_Q3 + ACRHD.T_PO_DIST_Q4 AS TOTAL_PO_DISTRIBUTOR,
					   ACRHD.T_PO_DIST_AMTQ1 + ACRHD.T_PO_DIST_AMTQ2 + ACRHD.T_PO_DIST_AMTQ3 + ACRHD.T_PO_DIST_AMTQ4 AS T_PO_DIST_AMOUNT
					   FROM
						(
                      	 SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
						 --UNTUK QTY DULU
						 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_DISTRIBUTOR END),0)  AS ACTUAL_Q1,
						 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q1,
						 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_Q2,
						 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q2, 
						 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_DISTRIBUTOR END),0)  AS ACTUAL_Q3,
						 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q3,
						 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_Q4,
						 ISNULL(SUM(CASE FLAG when 'Q4' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q4,
					
						 ---UNTUK VALUE
						 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0)  AS ACTUAL_AMTQ1,
						 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS TOTAL_PO_AMTQ1,
						 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0)  AS ACTUAL_AMTQ2,
						 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS TOTAL_PO_AMTQ2,
						 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0)  AS ACTUAL_AMTQ3,
						 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS TOTAL_PO_AMTQ3,
						 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0)  AS ACTUAL_AMTQ4,
						 ISNULL(SUM(CASE FLAG when 'Q4' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_AMTQ4,
						 ISNULL(SUM(TOTAL_CPQ1),0) + ISNULL(SUM(TOTAL_CPQ2),0) + ISNULL(SUM(TOTAL_CPQ3),0) AS TOTAL_JOIN_CP,
						 ISNULL(SUM(CPQ1_AMOUNT),0) + ISNULL(SUM(CPQ2_AMOUNT),0) + ISNULL(SUM(CPQ3_AMOUNT),0) AS TOTAL_JOIN_CPAMT
						 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO 
						 GROUP BY AGREEMENT_NO + BRAND_ID
            	        )ACRHA
					   INNER JOIN
                        (SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,TOTAL_ACTUAL AS ACTUAL_Y,TOTAL_ACTUAL_AMOUNT AS ACTUAL_AMTY
  						 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO AND FLAG = 'Y'	
        				)ACRHA1
					   ON ACRHA.AGREE_BRAND_ID = ACRHA1.AGREE_BRAND_ID
                       INNER JOIN 
                            (SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
							 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACDIST_Q1,
							 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS T_PO_DIST_Q1,
							 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACDIST_Q2,
							 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS T_PO_DIST_Q2,
							 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_DISTRIBUTOR END),0) AS ACDIST_Q3,
							 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN TOTAL_PO_DISTRIBUTOR END),0) AS T_PO_DIST_Q3,
							 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_DISTRIBUTOR END),0) AS ACDIST_Q4,
							 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN TOTAL_PO_DISTRIBUTOR END),0) AS T_PO_DIST_Q4,

							 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACDIST_AMTQ1,
							 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS T_PO_DIST_AMTQ1,
							 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACDIST_AMTQ2,
							 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS T_PO_DIST_AMTQ2,
							 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACDIST_AMTQ3,
							 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS T_PO_DIST_AMTQ3,
							 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACDIST_AMTQ4,
							 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS T_PO_DIST_AMTQ4,
							 ISNULL(SUM(TOTAL_CPQ1),0) + ISNULL(SUM(TOTAL_CPQ2),0) + ISNULL(SUM(TOTAL_CPQ3),0) AS TOTAL_CP,
							 ISNULL(SUM(CPQ1_AMOUNT),0) + ISNULL(SUM(CPQ2_AMOUNT),0) + ISNULL(SUM(CPQ3_AMOUNT),0) AS TOTAL_CP_AMOUNT
							 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO
							 GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID 
            	 			 )ACRHD
						ON ACRHD.AGREE_BRAND_ID = ACRHA.AGREE_BRAND_ID
                   )ACRH
         ON ACRH.AGREE_BRAND_ID = ABI.[ID] AND ACRH.DISTRIBUTOR_ID = ABI.DISTRIBUTOR_ID
	WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO
 	AND ACRH.ACTUAL_Y <> ACRH.TOTAL_ACTUAL OPTION(KEEP PLAN);
    END
 ELSE
     BEGIN
 	 SELECT ABI.DISTRIBUTOR_ID,ABI.AGREEMENT_NO,ABI.[ID] AS AGREE_BRAND_ID,ABI.BRAND_ID,ABI.TARGET_YEAR,
        TOTAL_ACTUAL = CASE @CURRENT_FLAG 
							WHEN 'S1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_S2
						    ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
        				END,
		ISNULL(ACRH.TOTAL_PO_ORIGINAL,0) AS TOTAL_PO_ORIGINAL,ISNULL(ACRH.TOTAL_PO_DISTRIBUTOR,0) AS TOTAL_PO_DISTRIBUTOR,		
		ACTUAL_YEAR_DISTRIBUTOR = CASE @V_IsTargetGroup
									   WHEN 0 THEN CASE @CURRENT_FLAG 
												  WHEN 'S1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_S2
			 									  ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
        		 								  END
									    ELSE  ISNULL(ACRH.ACTUAL_YEAR_DISTRIBUTOR,0)
                                   END,           		
        ABI.COMBINED_BRAND,--UNTUK AMOUNT GAK USAH PAKE CURRENT FLAG LAH, KARENA BUKA ACCRUE LAGI
		ACRH.TOTAL_ACTUAL_AMOUNT, ACRH.TOTAL_PO_AMOUNT,ACRH.T_PO_DIST_AMOUNT AS PO_AMOUNT_DISTRIBUTOR,ACRH.ACTUAL_YEAR_DIST_AMOUNT 
		FROM VIEW_AGREE_BRAND_INCLUDE ABI
		INNER JOIN ( 
					      SELECT ACRHA.AGREE_BRAND_ID,
						  ACRHA.ACTUAL_S1 + ACRHA.ACTUAL_S2 + ACRHA.TOTAL_JOIN_CP AS TOTAL_ACTUAL,
						  ACRHA.ACTUAL_AMTS1 + ACRHA.ACTUAL_AMTS2 + ACRHA.TOTAL_JOIN_CPAMT AS TOTAL_ACTUAL_AMOUNT,
					      ACRHA1.ACTUAL_Y AS ACTUAL_Y,ACRHA1.ACTUAL_YAMT,ACRHD.DISTRIBUTOR_ID,
						  ACRHD.ACTDIST_S1 + ACRHD.ACTDIST_S2 + ACRHD.TOTAL_CP AS ACTUAL_YEAR_DISTRIBUTOR,
					      ACRHD.ACTDIST_AMTS1 + ACRHD.ACTDIST_AMTS2 + ACRHD.TOTAL_CPAMT AS ACTUAL_YEAR_DIST_AMOUNT,
						  ACRHA.TOTAL_PO_S1 + ACRHA.TOTAL_PO_S2 AS TOTAL_PO_ORIGINAL,
						  ACRHA.TOTAL_PO_AMTS1 + ACRHA.TOTAL_PO_AMTS2 AS TOTAL_PO_AMOUNT,
						  ACRHD.T_PO_DIST_S1 +  ACRHD.T_PO_DIST_S2 AS TOTAL_PO_DISTRIBUTOR,
						  ACRHD.T_PO_DIST_AMTS1 +  ACRHD.T_PO_DIST_AMTS2 AS  T_PO_DIST_AMOUNT
                         FROM
                             (
                         	   SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
		    				   ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_S1,
							   ISNULL(SUM(CASE FLAG WHEN 'S1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_S1,
							   ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_S2,
							   ISNULL(SUM(CASE FLAG WHEN 'S2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_S2,
								
							   ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACTUAL_AMTS1,
							   ISNULL(SUM(CASE FLAG WHEN 'S1' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS TOTAL_PO_AMTS1,
							   ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACTUAL_AMTS2,
							   ISNULL(SUM(CASE FLAG WHEN 'S2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_AMTS2,
							   ISNULL(SUM(TOTAL_CPS1),0) AS TOTAL_JOIN_CP,
							   ISNULL(SUM(CPS1_AMOUNT),0) AS TOTAL_JOIN_CPAMT
							   FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO
							   GROUP BY AGREEMENT_NO + BRAND_ID 
                    	      )ACRHA
 							INNER JOIN
										(SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,TOTAL_ACTUAL AS ACTUAL_Y,TOTAL_ACTUAL_AMOUNT AS ACTUAL_YAMT
	  									 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO AND FLAG = 'Y'	
		   								 )ACRHA1
							ON ACRHA.AGREE_BRAND_ID = ACRHA1.AGREE_BRAND_ID
							INNER JOIN 
									  (SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
										ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTDIST_S1,
										ISNULL(SUM(CASE FLAG WHEN 'S1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS T_PO_DIST_S1,
										ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTDIST_S2,
										ISNULL(SUM(CASE FLAG WHEN 'S2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS T_PO_DIST_S2,
			
										ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTDIST_AMTS1,
										ISNULL(SUM(CASE FLAG WHEN 'S1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS T_PO_DIST_AMTS1,
										ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTDIST_AMTS2,
										ISNULL(SUM(CASE FLAG WHEN 'S2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS T_PO_DIST_AMTS2,
    	 								ISNULL(SUM(TOTAL_CPS1),0) AS TOTAL_CP,
										ISNULL(SUM(CPS1_AMOUNT),0) AS TOTAL_CPAMT
										FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO 
										GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID
                    	 				)ACRHD
   							ON ACRHD.AGREE_BRAND_ID = ACRHA.AGREE_BRAND_ID
						 )ACRH
			 ON ACRH.AGREE_BRAND_ID = ABI.[ID] AND ACRH.DISTRIBUTOR_ID = ABI.DISTRIBUTOR_ID
	WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO
 	AND ACRH.ACTUAL_Y <> ACRH.TOTAL_ACTUAL OPTION(KEEP PLAN);
   END
GO

---------------------------------------------------------------------------------------------------------
IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'ACCRUED_DETAIL')C WHERE ColumnName = 'CPQ1_AMOUNT')
ALTER TABLE ACCRUED_DETAIL ADD CPQ1_AMOUNT DECIMAL(18,4) NULL ;
GO
IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'ACCRUED_DETAIL')C WHERE ColumnName = 'CPQ2_AMOUNT')
ALTER TABLE ACCRUED_DETAIL ADD CPQ2_AMOUNT DECIMAL(18,4) NULL ;
GO
IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'ACCRUED_DETAIL')C WHERE ColumnName = 'CPQ3_AMOUNT')
ALTER TABLE ACCRUED_DETAIL ADD CPQ3_AMOUNT DECIMAL(18,4) NULL ;
GO

IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'ACCRUED_DETAIL')C WHERE ColumnName = 'CPS1_AMOUNT')
ALTER TABLE ACCRUED_DETAIL ADD CPS1_AMOUNT DECIMAL(18,4) NULL ;
GO

--UPDATE ACCRUED_DETAIL SET CPQ1_AMOUNT = 0,CPQ2_AMOUNT = 0,CPQ3_AMOUNT = 0,CPS1_AMOUNT = 0;
--GO
------------------------------------------------------------------------------------------
IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'AGREE_BRAND_INCLUDE')C WHERE ColumnName = 'TARGET_S1_FM')
ALTER TABLE AGREE_BRAND_INCLUDE ADD TARGET_S1_FM DECIMAL(18,4) NULL ;
GO

IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'AGREE_BRAND_INCLUDE')C WHERE ColumnName = 'TARGET_S2_FM')
ALTER TABLE AGREE_BRAND_INCLUDE ADD TARGET_S2_FM DECIMAL(18,3) NULL ;
GO
IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'AGREE_BRAND_INCLUDE')C WHERE ColumnName = 'TARGET_S1_PL')
ALTER TABLE AGREE_BRAND_INCLUDE ADD TARGET_S1_PL DECIMAL(18,3) NULL ;
GO

IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'AGREE_BRAND_INCLUDE')C WHERE ColumnName = 'TARGET_S2_PL')
ALTER TABLE AGREE_BRAND_INCLUDE ADD TARGET_S2_PL DECIMAL(18,3) NULL ;
GO

IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'AGREE_BRAND_INCLUDE')C WHERE ColumnName = 'TARGET_Q1_FM')
ALTER TABLE AGREE_BRAND_INCLUDE ADD TARGET_Q1_FM DECIMAL(18,3) NULL ;
GO

IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'AGREE_BRAND_INCLUDE')C WHERE ColumnName = 'TARGET_Q2_FM')
ALTER TABLE AGREE_BRAND_INCLUDE ADD TARGET_Q2_FM DECIMAL(18,3) NULL ;
GO

IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'AGREE_BRAND_INCLUDE')C WHERE ColumnName = 'TARGET_Q3_FM')
ALTER TABLE AGREE_BRAND_INCLUDE ADD TARGET_Q3_FM DECIMAL(18,3) NULL ;
GO
IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'AGREE_BRAND_INCLUDE')C WHERE ColumnName = 'TARGET_Q4_FM')
ALTER TABLE AGREE_BRAND_INCLUDE ADD TARGET_Q4_FM DECIMAL(18,3) NULL ;
GO

IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'AGREE_BRAND_INCLUDE')C WHERE ColumnName = 'TARGET_Q1_PL')
ALTER TABLE AGREE_BRAND_INCLUDE ADD TARGET_Q1_PL DECIMAL(18,3) NULL ;
GO

IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'AGREE_BRAND_INCLUDE')C WHERE ColumnName = 'TARGET_Q2_PL')
ALTER TABLE AGREE_BRAND_INCLUDE ADD TARGET_Q2_PL DECIMAL(18,3) NULL ;
GO

IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'AGREE_BRAND_INCLUDE')C WHERE ColumnName = 'TARGET_Q3_PL')
ALTER TABLE AGREE_BRAND_INCLUDE ADD TARGET_Q3_PL DECIMAL(18,3) NULL ;
GO

IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'AGREE_BRAND_INCLUDE')C WHERE ColumnName = 'TARGET_Q4_PL')
ALTER TABLE AGREE_BRAND_INCLUDE ADD TARGET_Q4_PL DECIMAL(18,3) NULL ;
GO

--UPDATE AGREE_BRAND_INCLUDE SET TARGET_Q1_FM = 0,TARGET_Q2_FM = 0,TARGET_Q3_FM = 0,TARGET_Q4_FM = 0,TARGET_S1_FM = 0,TARGET_S2_FM = 0
--,TARGET_Q1_PL = 0,TARGET_Q2_PL = 0,TARGET_Q3_PL = 0,TARGET_Q4_PL = 0,TARGET_S1_PL = 0,TARGET_S2_PL = 0
--GO

----------------------------------------------------------------------------------------------
IF EXISTS(SELECT NAME FROM [sys].[objects] WHERE NAME = 'Usp_Changed_Acrue_BY_Year_Detail' AND TYPE = 'P')
DROP PROCEDURE Usp_Changed_Acrue_BY_Year_Detail
GO
CREATE PROCEDURE Usp_Changed_Acrue_BY_Year_Detail
@AGREEMENT_NO VARCHAR(32)
AS
SET DEADLOCK_PRIORITY NORMAL; SET NOCOUNT ON; 
DECLARE @V_QS_TREATMENT_FLAG CHAR(1);
SET @V_QS_TREATMENT_FLAG = (SELECT TOP 1 QS_TREATMENT_FLAG FROM AGREE_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO);
IF (@V_QS_TREATMENT_FLAG = 'S')
   BEGIN
        SELECT ACRH.AGREEMENT_NO + ACRH.BRAND_ID AS AGREE_BRAND_ID,ACRH.DISTRIBUTOR_ID,ACRH.BRANDPACK_ID,ACRH.TOTAL_ACTUAL,
		ACRH.TOTAL_PO_ORIGINAL,ACRH.TOTAL_PO_AMOUNT,ACRH.TOTAL_ACTUAL_AMOUNT
        FROM(  
			  SELECT ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,SUM(ACD.TOTAL_CPS1) + SUM(ACD.TOTAL_ACTUAL) AS TOTAL_ACTUAL,
			  --BAGIAN UANG--
			  SUM(ACD.CPS1_AMOUNT) + SUM(ACD.TOTAL_ACTUAL_AMOUNT) AS TOTAL_ACTUAL_AMOUNT,
			  SUM(ACD.TOTAL_PO_ORIGINAL) AS TOTAL_PO_ORIGINAL,SUM(ACD.TOTAL_PO_AMOUNT) AS TOTAL_PO_AMOUNT
			  FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACD ON ACRH.ACHIEVEMENT_ID = ACD.ACHIEVEMENT_ID
              WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.FLAG IN('S1','S2')
			  GROUP BY ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID
             )ACRH
        INNER JOIN(SELECT ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,ACD.TOTAL_ACTUAL
	     		   FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACD ON ACRH.ACHIEVEMENT_ID = ACD.ACHIEVEMENT_ID
              	   WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.FLAG = 'Y'
                   )ACRH1 
        ON (ACRH.AGREEMENT_NO + ACRH.BRAND_ID + ACRH.DISTRIBUTOR_ID + ACRH.BRANDPACK_ID)
           = (ACRH1.AGREEMENT_NO + ACRH1.BRAND_ID + ACRH1.DISTRIBUTOR_ID + ACRH1.BRANDPACK_ID)
		WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.TOTAL_ACTUAL <> ACRH1.TOTAL_ACTUAL OPTION(KEEP PLAN);
   END
ELSE IF (@V_QS_TREATMENT_FLAG = 'Q')
   BEGIN
		 SELECT ACRH.AGREEMENT_NO + ACRH.BRAND_ID AS AGREE_BRAND_ID,ACRH.DISTRIBUTOR_ID,ACRH.BRANDPACK_ID,ACRH.TOTAL_ACTUAL,
		ACRH.TOTAL_PO_ORIGINAL,ACRH.TOTAL_PO_AMOUNT,ACRH.TOTAL_ACTUAL_AMOUNT
        FROM(  
			  SELECT ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,
			  SUM(ACD.TOTAL_CPQ1) + SUM(ACD.TOTAL_CPQ2)+ SUM(ACD.TOTAL_CPQ3) + SUM(ACD.TOTAL_ACTUAL) AS TOTAL_ACTUAL,
			 	--BAGIAN DUITNYA
			  SUM(ACD.CPQ1_AMOUNT) + SUM(ACD.CPQ2_AMOUNT) + SUM(ACD.CPQ3_AMOUNT) + SUM(ACD.TOTAL_ACTUAL_AMOUNT) AS TOTAL_ACTUAL_AMOUNT,
			  SUM(ACD.TOTAL_PO_ORIGINAL) AS TOTAL_PO_ORIGINAL,SUM(ACD.TOTAL_PO_AMOUNT)AS TOTAL_PO_AMOUNT
			  FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACD ON ACRH.ACHIEVEMENT_ID = ACD.ACHIEVEMENT_ID
              WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.FLAG IN('Q1','Q2','Q3','Q4')
			  GROUP BY ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID
             )ACRH
         INNER JOIN(SELECT ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,ACD.TOTAL_ACTUAL
	     			FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACD ON ACRH.ACHIEVEMENT_ID = ACD.ACHIEVEMENT_ID
              	    WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.FLAG = 'Y'
                   )ACRH1 
         ON (ACRH.AGREEMENT_NO + ACRH.BRAND_ID + ACRH.DISTRIBUTOR_ID + ACRH.BRANDPACK_ID)
            = (ACRH1.AGREEMENT_NO + ACRH1.BRAND_ID + ACRH1.DISTRIBUTOR_ID + ACRH1.BRANDPACK_ID)
		WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.TOTAL_ACTUAL <> ACRH1.TOTAL_ACTUAL OPTION(KEEP PLAN);
   END
GO

IF EXISTS(SELECT NAME FROM [sys].[objects] WHERE NAME = 'Usp_Get_Total_Accrue_By_Year_Detail' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Total_Accrue_By_Year_Detail
GO
CREATE PROCEDURE Usp_Get_Total_Accrue_By_Year_Detail
@AGREEMENT_NO VARCHAR(32)
AS
SET DEADLOCK_PRIORITY NORMAL; SET NOCOUNT ON; 
DECLARE @V_QS_TREATMENT_FLAG CHAR(1);
SET @V_QS_TREATMENT_FLAG = (SELECT TOP 1 QS_TREATMENT_FLAG FROM AGREE_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO);
IF (@V_QS_TREATMENT_FLAG = 'S')
   BEGIN
	SELECT ACRH.AGREEMENT_NO + ACRH.BRAND_ID AS AGREE_BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,
	SUM(ACD.TOTAL_CPS1) + SUM(ACD.TOTAL_ACTUAL) AS TOTAL_ACTUAL,
	--BAGIAN UANG--
	SUM(ACD.CPS1_AMOUNT) + SUM(ACD.TOTAL_ACTUAL_AMOUNT) AS TOTAL_ACTUAL_AMOUNT,
	SUM(ACD.TOTAL_PO_ORIGINAL) AS TOTAL_PO_ORIGINAL,SUM(ACD.TOTAL_PO_AMOUNT) AS TOTAL_PO_AMOUNT
	FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACD ON ACRH.ACHIEVEMENT_ID = ACD.ACHIEVEMENT_ID
        WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.FLAG IN('S1','S2')
	GROUP BY ACRH.AGREEMENT_NO + ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID
	OPTION(KEEP PLAN);
   END
ELSE IF (@V_QS_TREATMENT_FLAG = 'Q')
   BEGIN
	SELECT ACRH.AGREEMENT_NO + ACRH.BRAND_ID AS AGREE_BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,
	SUM(ACD.TOTAL_CPQ1) + SUM(ACD.TOTAL_CPQ2) + SUM(ACD.TOTAL_CPQ3) + SUM(ACD.TOTAL_ACTUAL) AS TOTAL_ACTUAL,
	--BAGIAN DUITNYA
	SUM(ACD.CPQ1_AMOUNT) + SUM(ACD.CPQ2_AMOUNT) + SUM(ACD.CPQ3_AMOUNT) + SUM(ACD.TOTAL_ACTUAL_AMOUNT),
	SUM(ACD.TOTAL_PO_ORIGINAL) AS TOTAL_PO_ORIGINAL,SUM(ACD.TOTAL_PO_AMOUNT)AS TOTAL_PO_AMOUNT
	FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACD ON ACRH.ACHIEVEMENT_ID = ACD.ACHIEVEMENT_ID
        WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.FLAG IN('Q1','Q2','Q3','Q4')
	GROUP BY ACRH.AGREEMENT_NO + ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID
	OPTION(KEEP PLAN);
   END
GO
----------------------------------------------------------------------
IF EXISTS(SELECT NAME FROM [sys].[objects] WHERE NAME = 'Sp_Insert_AGREE_BRAND_ICNLUDE' AND TYPE = 'P')
DROP PROCEDURE Sp_Insert_AGREE_BRAND_ICNLUDE
GO
-------------------------------------------------------
IF EXISTS(SELECT NAME FROM [sys].[objects] WHERE NAME = 'Sp_Update_AGREE_BRAND_ICNLUDE' AND TYPE = 'P')
DROP PROCEDURE Sp_Update_AGREE_BRAND_ICNLUDE
GO


IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'BRND_AVGPRICE')C WHERE ColumnName = 'AVGPRICE_PL')
ALTER TABLE BRND_AVGPRICE ADD AVGPRICE_PL DECIMAL(18,4) NULL ;
GO


IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'ACCRUED_HEADER')C WHERE ColumnName = 'TARGET_FM')
ALTER TABLE ACCRUED_HEADER ADD TARGET_FM DECIMAL(18,3) NULL ;
GO

IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'ACCRUED_HEADER')C WHERE ColumnName = 'TARGET_PL')
ALTER TABLE ACCRUED_HEADER ADD TARGET_PL DECIMAL(18,3) NULL ;
GO

--UPDATE ACCRUED_HEADER SET TARGET_FM = 0,TARGET_PL = 0;
--GO

IF EXISTS(SELECT NAME FROM [sys].[objects] WHERE NAME = 'Usp_Get_Changed_Invoice_By_Brand_ID' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Changed_Invoice_By_Brand_ID
GO
CREATE PROCEDURE Usp_Get_Changed_Invoice_By_Brand_ID         
@AGREEMENT_NO VARCHAR(32),
@FLAG VARCHAR(2),
@START_DATE SMALLDATETIME,
@END_DATE SMALLDATETIME,
@COMPUTERNAME VARCHAR(100)
AS
--PRT003 Setting referer invoice ke referencePO di InvoiceHeader ReferencePO = 1,NomorPO = 0
DECLARE @Stmt nVARCHAR(1000);
SET DEADLOCK_PRIORITY NORMAL;SET NOCOUNT ON; SET ARITHABORT OFF ; SET ANSI_WARNINGS OFF ;
IF (SELECT AllowRules FROM RefBussinesRules WHERE CodeApp = 'RPT003') = 1
BEGIN
SET @Stmt = 'SELECT ACH.DISTRIBUTOR_ID,ACH.BRAND_ID,ACH.TARGET,ISNULL(INV.TOTAL_INVOICE,0)AS TOTAL_INVOICE,ISNULL(INV.PO_AMOUNT_DISTRIBUTOR,0),ISNULL(INV.ACTUAL_AMOUNT_DISTRIBUTOR,0),ACH.TARGET_FM,ACH.TARGET_PL
			FROM Nufarm.DBO.ACCRUED_HEADER ACH
			LEFT OUTER JOIN Tempdb.SYS.##T_Agreement_Brand_' + @COMPUTERNAME + ' INV
			ON ACH.BRAND_ID = INV.BRAND_ID AND ACH.DISTRIBUTOR_ID = INV.DISTRIBUTOR_ID  
			WHERE ACH.AGREEMENT_NO = @V_AGREEMENT_NO AND ACH.FLAG = @V_FLAG ' ;
    EXECUTE Sp_executesql @Stmt,N'@V_AGREEMENT_NO VARCHAR(100),@V_FLAG VARCHAR(2)',
				       @AGREEMENT_NO,@FLAG ;

END
GO 


----------------------------------------------------------------------------------------------------------------
IF EXISTS(SELECT TABLE_NAME FROM INFORMATION_SCHEMA.VIEWS WHERE TABLE_NAME = 'VIEW_AGREE_BRAND_INCLUDE')
DROP VIEW VIEW_AGREE_BRAND_INCLUDE
GO
CREATE VIEW VIEW_AGREE_BRAND_INCLUDE
AS
SELECT ABI.AGREE_BRAND_ID AS [ID],DR.TERRITORY_ID,DA.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,DA.AGREEMENT_NO,AA.QS_TREATMENT_FLAG,AA.AGREEMENT_DESC,
ABI.BRAND_ID,BR.BRAND_NAME,AA.START_DATE,AA.END_DATE,ABI.GIVEN_DISC_PCT AS [Given%],ABI.TARGET_Q1,
ABI.TARGET_Q2,ABI.TARGET_Q3,ABI.TARGET_Q4,ABI.TARGET_S1,ABI.TARGET_S2,ABI.TARGET_Q1_FM,ABI.TARGET_Q2_FM,ABI.TARGET_Q3_FM,ABI.TARGET_Q4_FM,ABI.TARGET_S1_FM,ABI.TARGET_S2_FM,
ABI.TARGET_Q1_PL,ABI.TARGET_Q2_PL,ABI.TARGET_Q3_PL,ABI.TARGET_Q4_PL,ABI.TARGET_S1_PL,ABI.TARGET_S2_PL,
CASE AA.QS_TREATMENT_FLAG WHEN 'S' THEN (ABI.TARGET_S1 + ABI.TARGET_S2) WHEN 'Q' THEN (ABI.TARGET_Q1 + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4) ELSE 0 END AS TARGET_YEAR,
CASE AA.QS_TREATMENT_FLAG WHEN 'S' THEN (ABI.TARGET_S1_FM + ABI.TARGET_S2_FM) WHEN 'Q' THEN (ABI.TARGET_Q1_FM + ABI.TARGET_Q2_FM + ABI.TARGET_Q4_FM) ELSE 0 END AS TARGET_YEAR_FM,
CASE AA.QS_TREATMENT_FLAG WHEN 'S' THEN (ABI.TARGET_S1_PL + ABI.TARGET_S2_PL) WHEN 'Q' THEN (ABI.TARGET_Q1_PL + ABI.TARGET_Q2_PL + ABI.TARGET_Q3_PL + ABI.TARGET_Q4_PL) ELSE 0 END AS TARGET_YEAR_PL,
ABI.COMB_AGREE_BRAND_ID AS COMBINED_BRAND
FROM AGREE_BRAND_INCLUDE ABI INNER JOIN AGREE_AGREEMENT AA ON ABI.AGREEMENT_NO = AA.AGREEMENT_NO
INNER JOIN BRND_BRAND BR ON ABI.BRAND_ID = BR.BRAND_ID INNER JOIN DISTRIBUTOR_AGREEMENT DA
ON DA.AGREEMENT_NO = AA.AGREEMENT_NO INNER JOIN DIST_DISTRIBUTOR DR ON DR.DISTRIBUTOR_ID = DA.DISTRIBUTOR_ID
GO

---======================END D P D VALUE DEVELOP MENT===========================================


--===============================================================================================
IF EXISTS(SELECT NAME FROM SYS.SYSOBJECTS WHERE NAME = 'Usp_CreateView_Remainding_Detail'
 AND TYPE = 'P')
DROP PROCEDURE Usp_CreateView_Remainding_Detail
GO
CREATE PROCEDURE Usp_CreateView_Remainding_Detail
@OA_BRANDPACK_ID VARCHAR(75),
@FLAG VARCHAR(5)
AS
SET NOCOUNT ON;
SELECT OPB.PO_REF_NO,OOB.OA_ID AS OA_REF_NO,OOR.QTY,OOR.RELEASE_QTY,OOR.LEFT_QTY
FROM ORDR_PO_BRANDPACK OPB INNER JOIN ORDR_OA_BRANDPACK OOB ON OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID
INNER JOIN ORDR_OA_REMAINDING OOR ON OOR.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
WHERE OOB.OA_BRANDPACK_ID = @OA_BRANDPACK_ID AND OOR.FLAG = @FLAG
GO
-----------------------------------------------------------------------------------------------------
IF EXISTS(SELECT NAME FROM SYS.SYSOBJECTS WHERE NAME = 'Usp_Check_Sum_Mathching_Disc_Qty'
 AND TYPE = 'P')
DROP PROCEDURE Usp_Check_Sum_Mathching_Disc_Qty
GO
CREATE PROCEDURE Usp_Check_Sum_Mathching_Disc_Qty
@OA_BRANDPACK_ID VARCHAR(75),
@DISCOUNT_TYPE VARCHAR(50)
AS
EXECUTE sp_executesql
N'SET NOCOUNT ON;
IF (@V_DISCOUNT_TYPE = ''Sales_Discount'')
   BEGIN
 	DECLARE @SUM_PROG_DISC_QTY DECIMAL(18,3),@PROG_DISC_QTY DECIMAL(18,3);
	SET @PROG_DISC_QTY =  (SELECT PROG_DISC_QTY FROM ORDR_OA_BRANDPACK WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID);-- AS DECIMAL(18,3))
	SET @SUM_PROG_DISC_QTY = (SELECT ISNULL(SUM(DISC_QTY),0) FROM ORDR_OA_BRANDPACK_DISC
	                         WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID AND GQSY_SGT_P_FLAG IN(''MG'',''KP'',''CR'',''CP'',''MS'',''DK'',''CS'',''TD'',''TS'',''CD'',''CT'',''DN'',''CA''));
        UPDATE ORDR_OA_BRANDPACK SET PROG_DISC_QTY = @SUM_PROG_DISC_QTY
		WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID;
		
   END
ELSE IF (@V_DISCOUNT_TYPE = ''Agreement_Discount'')
     BEGIN
	  DECLARE @SUM_AGREE_DISC_QTY DECIMAL(18,3),@AGREE_DISC_QTY DECIMAL(18,3)
	    SET @AGREE_DISC_QTY = (SELECT AGREE_DISC_QTY FROM ORDR_OA_BRANDPACK WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID);-- AS DECIMAL(18,3));
	    SET @SUM_AGREE_DISC_QTY = (SELECT ISNULL(SUM(DISC_QTY),0) FROM ORDR_OA_BRANDPACK_DISC
            WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID AND GQSY_SGT_P_FLAG IN(''G'',''Q1'',''Q2'',''Q3'',''Q4'',''S1'',''S2'',''Y''));
	    
            UPDATE ORDR_OA_BRANDPACK SET AGREE_DISC_QTY = @SUM_AGREE_DISC_QTY
	    WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID;
     END
ELSE IF (@V_DISCOUNT_TYPE = ''Other_Discount'')
      BEGIN
	   DECLARE @SUM_OTHER_DISC_QTY DECIMAL(18,3),@OTHER_DISC_QTY DECIMAL(18,3);
	     SET @OTHER_DISC_QTY = CAST((SELECT OTHER_DISC_QTY FROM ORDR_OA_BRANDPACK WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID) AS DECIMAL(18,3));
	     SET @SUM_OTHER_DISC_QTY = (SELECT ISNULL(SUM(DISC_QTY),0) FROM ORDR_OA_BRANDPACK_DISC
	     WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID AND GQSY_SGT_P_FLAG = ''O'');   
	    
             UPDATE ORDR_OA_BRANDPACK SET OTHER_DISC_QTY = @SUM_OTHER_DISC_QTY
		   WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID;
      END
ELSE IF (@V_DISCOUNT_TYPE = ''Project_Discount'')
     BEGIN
	  DECLARE @SUM_PROJ_DISC_QTY DECIMAL(18,3),@PROJ_DISC_QTY DECIMAL(18,3);
	     SET @PROJ_DISC_QTY = CAST((SELECT PROJ_DISC_QTY FROM ORDR_OA_BRANDPACK WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID) AS DECIMAL(18,3));
             SET @SUM_PROJ_DISC_QTY = CAST((SELECT ISNULL(SUM(DISC_QTY),0)
	        FROM ORDR_OA_BRANDPACK_DISC WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID AND
	        GQSY_SGT_P_FLAG = ''P'')AS DECIMAL(18,3));
	     UPDATE ORDR_OA_BRANDPACK SET PROJ_DISC_QTY = @SUM_PROJ_DISC_QTY 
		   WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID;	
      END',N'@V_OA_BRANDPACK_ID VARCHAR(70),@V_DISCOUNT_TYPE VARCHAR(50)',
     @V_OA_BRANDPACK_ID = @OA_BRANDPACK_ID,@V_DISCOUNT_TYPE = @DISCOUNT_TYPE;
 GO
--------------------------------------------------------------------------------------------------------

IF EXISTS(SELECT NAME FROM SYS.SYSOBJECTS WHERE NAME = 'Sp_Check_REFERENCED_OA'
 AND TYPE = 'P')
DROP PROCEDURE Sp_Check_REFERENCED_OA
GO
---------------------------------------------------------------------------------------------
IF EXISTS(SELECT NAME FROM SYS.SYSOBJECTS WHERE NAME = 'Sp_GetView_ORDR_OA_BRANDPACK_DISC_BY_MRKT' AND TYPE = 'P')
DROP PROCEDURE Sp_GetView_ORDR_OA_BRANDPACK_DISC_BY_MRKT
GO
CREATE PROCEDURE Sp_GetView_ORDR_OA_BRANDPACK_DISC_BY_MRKT
@DISTRIBUTOR_ID VARCHAR(10),
@START_DATE SMALLDATETIME,
@END_DATE SMALLDATETIME,
@GQSY_SGT_P_FLAG VARCHAR(5)
AS
SET NOCOUNT ON;

IF (@GQSY_SGT_P_FLAG IS NULL)
   BEGIN
	SELECT OOB.OA_BRANDPACK_ID,OOBD.DISC_QTY,OOBD.PRICE_PRQTY,OOBD.DISC_QTY * OOBD.PRICE_PRQTY AS AMOUNT_DISC_PRICE,
	[TYPE] = CASE GQSY_SGT_P_FLAG
		WHEN 'MG' THEN 'GIVEN_DPRD' WHEN 'CP' THEN 'GIVEN_CP(D)' WHEN 'CS' THEN 'GIVEN_CP(D)S' WHEN 'CR' THEN 'GIVEN_CP(R)'
		WHEN 'DK' THEN 'GIVEN_DK' WHEN 'KP' THEN 'GIVEN_PKPP' WHEN 'TD' THEN  'GIVEN_CP(D)' WHEN 'TS' THEN 'GIVEN_CP(D)S'
		WHEN 'CT' THEN 'GIVEN_CP(R M/T)' WHEN 'CD' THEN 'GIVEN_CP(R M/T)' WHEN 'DN' THEN 'DK(N)'  WHEN 'CA' THEN 'GIVEN_CP(D)AUTO'  END
	FROM ORDR_OA_BRANDPACK OOB INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD 
	ON OOB.OA_BRANDPACK_ID = OOBD.OA_BRANDPACK_ID 
	INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_BRANDPACK_ID = OOB.PO_BRANDPACK_ID
	INNER JOIN ORDR_PURCHASE_ORDER PO ON OPB.PO_REF_NO = PO.PO_REF_NO
	WHERE OOBD.GQSY_SGT_P_FLAG IN('MG','CR','CP','DK','KP','CS','TD','TS','CT','CD','CA') 
	AND PO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND PO.PO_REF_DATE >= @START_DATE AND PO.PO_REF_DATE <= @END_DATE;
   END
ELSE
   BEGIN
	IF (@GQSY_SGT_P_FLAG = 'CS' OR @GQSY_SGT_P_FLAG = 'TS')
	BEGIN
		SELECT OOB.OA_BRANDPACK_ID,OOBD.DISC_QTY,OOBD.PRICE_PRQTY,OOBD.DISC_QTY * OOBD.PRICE_PRQTY AS AMOUNT_DISC_PRICE,
		[TYPE']= CASE @GQSY_SGT_P_FLAG
			WHEN 'MG' THEN 'GIVEN_DPRD' WHEN 'CP' THEN 'GIVEN_CP(D)' WHEN 'CS' THEN 'GIVEN_CP(D)S' WHEN 'CR' THEN 'GIVEN_CP(R)'
			WHEN 'DK' THEN 'GIVEN_DK' WHEN 'KP' THEN 'GIVEN_PKPP' WHEN 'TD' THEN  'GIVEN_CP(D)' WHEN 'TS' THEN 'GIVEN_CP(D)S' 
			WHEN 'CT' THEN 'GIVEN_CP(R M/T)' WHEN 'CD' THEN 'GIVEN_CP(R M/T)' WHEN 'DN' THEN 'DK(N)'  WHEN 'CA' THEN 'GIVEN_CP(D)AUTO' END
		FROM ORDR_OA_BRANDPACK OOB INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD 
		ON OOB.OA_BRANDPACK_ID = OOBD.OA_BRANDPACK_ID 
		INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_BRANDPACK_ID = OOB.PO_BRANDPACK_ID
		INNER JOIN ORDR_PURCHASE_ORDER PO ON OPB.PO_REF_NO = PO.PO_REF_NO
		WHERE OOBD.GQSY_SGT_P_FLAG IN('CS','TS')
	END
	ELSE IF (@GQSY_SGT_P_FLAG = 'CP' OR @GQSY_SGT_P_FLAG = 'TD')
	BEGIN	
		SELECT OOB.OA_BRANDPACK_ID,OOBD.DISC_QTY,OOBD.PRICE_PRQTY,OOBD.DISC_QTY * OOBD.PRICE_PRQTY AS AMOUNT_DISC_PRICE,
		[TYPE] = CASE @GQSY_SGT_P_FLAG
			WHEN 'MG' THEN 'GIVEN_DPRD' WHEN 'CP' THEN 'GIVEN_CP(D)' WHEN 'CS' THEN 'GIVEN_CP(D)S' WHEN 'CR' THEN 'GIVEN_CP(R)'
			WHEN 'DK' THEN 'GIVEN_DK' WHEN 'KP' THEN 'GIVEN_PKPP' WHEN 'TD' THEN  'GIVEN_CP(D)' WHEN 'TS' THEN 'GIVEN_CP(D)S' 
		WHEN 'CT' THEN 'GIVEN_CP(R M/T)' WHEN 'CD' THEN 'GIVEN_CP(R M/T)' WHEN 'DN' THEN 'DK(N)'  WHEN 'CA' THEN 'GIVEN_CP(D)AUTO'  END
		FROM ORDR_OA_BRANDPACK OOB INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD 
		ON OOB.OA_BRANDPACK_ID = OOBD.OA_BRANDPACK_ID 
		INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_BRANDPACK_ID = OOB.PO_BRANDPACK_ID
		INNER JOIN ORDR_PURCHASE_ORDER PO ON OPB.PO_REF_NO = PO.PO_REF_NO
		WHERE OOBD.GQSY_SGT_P_FLAG IN('CP','TD')
	END
	ELSE IF(@GQSY_SGT_P_FLAG = 'CD' OR @GQSY_SGT_P_FLAG = 'CT')
	BEGIN
		SELECT OOB.OA_BRANDPACK_ID,OOBD.DISC_QTY,OOBD.PRICE_PRQTY,OOBD.DISC_QTY * OOBD.PRICE_PRQTY AS AMOUNT_DISC_PRICE,
		[TYPE] = CASE @GQSY_SGT_P_FLAG
			WHEN 'MG' THEN 'GIVEN_DPRD' WHEN 'CP' THEN 'GIVEN_CP(D)' WHEN 'CS' THEN 'GIVEN_CP(D)S' WHEN 'CR' THEN 'GIVEN_CP(R)'
			WHEN 'DK' THEN 'GIVEN_DK' WHEN 'KP' THEN 'GIVEN_PKPP' WHEN 'TD' THEN  'GIVEN_CP(D)' WHEN 'TS' THEN 'GIVEN_CP(D)S' 
			WHEN 'CT' THEN 'GIVEN_CP(R M/T)' WHEN 'CD' THEN 'GIVEN_CP(R M/T)' WHEN 'DN' THEN 'DK(N)'  WHEN 'CA' THEN 'GIVEN_CP(D)AUTO'  END
		FROM ORDR_OA_BRANDPACK OOB INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD 
		ON OOB.OA_BRANDPACK_ID = OOBD.OA_BRANDPACK_ID 
		INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_BRANDPACK_ID = OOB.PO_BRANDPACK_ID
		INNER JOIN ORDR_PURCHASE_ORDER PO ON OPB.PO_REF_NO = PO.PO_REF_NO
		WHERE OOBD.GQSY_SGT_P_FLAG IN('CD','CT')
	END
	ELSE
	BEGIN
		SELECT OOB.OA_BRANDPACK_ID,OOBD.DISC_QTY,OOBD.PRICE_PRQTY,OOBD.DISC_QTY * OOBD.PRICE_PRQTY AS AMOUNT_DISC_PRICE,
		[TYPE] = CASE @GQSY_SGT_P_FLAG
			WHEN 'MG' THEN 'GIVEN_DPRD' WHEN 'CP' THEN 'GIVEN_CP(D)' WHEN 'CS' THEN 'GIVEN_CP(D)S' WHEN 'CR' THEN 'GIVEN_CP(R)'
			WHEN 'DK' THEN 'GIVEN_DK' WHEN 'KP' THEN 'GIVEN_PKPP' WHEN 'TD' THEN  'GIVEN_CP(D)' WHEN 'TS' THEN 'GIVEN_CP(D)S' 
			WHEN 'CT' THEN 'GIVEN_CP(R M/T)' WHEN 'CD' THEN 'GIVEN_CP(R M/T)' WHEN 'DN' THEN 'DK(N)'  WHEN 'CA' THEN 'GIVEN_CP(D)AUTO' END
		FROM ORDR_OA_BRANDPACK OOB INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD 
		ON OOB.OA_BRANDPACK_ID = OOBD.OA_BRANDPACK_ID 
		INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_BRANDPACK_ID = OOB.PO_BRANDPACK_ID
		INNER JOIN ORDR_PURCHASE_ORDER PO ON OPB.PO_REF_NO = PO.PO_REF_NO
		WHERE OOBD.GQSY_SGT_P_FLAG LIKE  @GQSY_SGT_P_FLAG + '%'
		AND PO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND PO.PO_REF_DATE >= @START_DATE AND PO.PO_REF_DATE <= @END_DATE;
	END   
END
GO
--------------------------------------------------------------------------------------------------

---------------------------------------------------------------------------------------
----------------------PROCEDURE UNTUK MENGECUTE REPORT DISTRIBUTOR HEADER OA---------------------
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Create_View_Distributor_Report_1' AND TYPE = 'P')
DROP PROCEDURE Usp_Create_View_Distributor_Report_1
GO
CREATE PROCEDURE Usp_Create_View_Distributor_Report_1
@StartDate DateTime,
@EndDate DateTime
AS 
SET NOCOUNT ON;
IF (@StartDate IS NOT NULL AND @EndDate IS NOT NULL)
BEGIN
	 SELECT DG.REGIONAL_AREA,TER.TERRITORY_AREA,OPO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,OPO.PO_REF_NO,OPO.PO_REF_DATE,
	OOA.OA_ID AS OA_REF_NO,OOA.OA_DATE,BR.BRAND_ID,BR.BRAND_NAME,BB.BRANDPACK_ID,BB.BRANDPACK_NAME,OPB.PO_ORIGINAL_QTY AS PO_QTY,OOB.QTY_EVEN,
	OPB.PO_PRICE_PERQTY AS PRICE,OOB.UNIT,OOB.REMARK,ISNULL(OA_DISC.REMAIND_QTY,0)AS REMAIND_QTY,OA_DISC.GIVEN_AGREEMENT,OA_DISC.[QUARTER],
	OA_DISC.[SEMESTER],OA_DISC.YEARLY,OA_DISC.RPK,OA_DISC.DK,OA_DISC.CP_D,OA_DISC.CP_D_S,OA_DISC.CP_RMT,OA_DISC.PKPP,OPB.GIVEN_PKPP_VALUE,OA_DISC.CP_R,
	OA_DISC.CP_D_AUTO,OA_DISC.OTHER,
	ISNULL(T_DISC.TOTAL_DISC,0)AS TOTAL_DISC,
	--ISNULL(T_DISC.TOTAL_DISC,0) * OOB.OA_PRICE_PERQTY AS TOTAL_DISC_AMOUNT,
	OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_DELIVERY,
	--(OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_DELIVERY,
	OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_SALES
	--(OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_SALES         
	FROM ORDR_PURCHASE_ORDER OPO INNER JOIN DIST_DISTRIBUTOR DR ON OPO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
	 INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = OPO.PO_REF_NO LEFT OUTER JOIN ORDR_ORDER_ACCEPTANCE OOA
	ON OOA.PO_REF_NO = OPB.PO_REF_NO --INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
	LEFT OUTER JOIN ORDR_OA_BRANDPACK OOB ON OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID AND OOB.OA_ID = OOA.OA_ID
	INNER JOIN BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID --INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD ON OOBD.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
	LEFT OUTER JOIN
	               (
	                 SELECT OA_BRANDPACK_ID,
	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'RMOA' THEN DISC_QTY ELSE 0 END)AS REMAIND_QTY,
	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'G' THEN DISC_QTY ELSE 0 END)AS GIVEN_AGREEMENT, 
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Q1' THEN DISC_QTY WHEN 'Q2' THEN DISC_QTY WHEN 'Q3' THEN DISC_QTY
	                                     	  WHEN 'Q4' THEN DISC_QTY ELSE 0 END)AS [QUARTER],
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'S1' THEN DISC_QTY WHEN 'S2' THEN DISC_QTY ELSE 0 END)AS [SEMESTER], 
	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Y' THEN DISC_QTY ELSE 0 END)AS YEARLY, 
	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'MG' THEN DISC_QTY ELSE 0 END)AS RPK,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'DK' THEN DISC_QTY WHEN 'DN' THEN DISC_QTY ELSE 0 END)AS DK,
	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CP' THEN DISC_QTY WHEN 'TD' THEN DISC_QTY ELSE 0 END)AS CP_D,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CS' THEN DISC_QTY WHEN 'TS' THEN DISC_QTY WHEN 'SC' THEN DISC_QTY ELSE 0 END)AS CP_D_S,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CD' THEN DISC_QTY WHEN 'CT' THEN DISC_QTY ELSE 0 END)AS CP_RMT,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'KP' THEN DISC_QTY ELSE 0 END)AS PKPP,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CR' THEN DISC_QTY ELSE 0 END) AS CP_R,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CA' THEN DISC_QTY ELSE 0 END) AS CP_D_AUTO,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'O'  THEN DISC_QTY ELSE 0 END)AS OTHER
					 FROM ORDR_OA_BRANDPACK_DISC GROUP BY OA_BRANDPACK_ID
	           	)OA_DISC ON OA_DISC.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
	LEFT OUTER JOIN(
	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
	                 WHERE GQSY_SGT_P_FLAG != 'RMOA'
	                 GROUP BY OA_BRANDPACK_ID
	                )T_DISC ON OOB.OA_BRANDPACK_ID = T_DISC.OA_BRANDPACK_ID
	LEFT OUTER JOIN( 
	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
	                 WHERE GQSY_SGT_P_FLAG = 'RMOA'
	                 GROUP BY OA_BRANDPACK_ID
	                )OA_LEFT ON OA_LEFT.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID 
	INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
	INNER JOIN DIST_REGIONAL DG ON DG.REGIONAL_ID = TER.REGIONAL_ID 
	INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
	WHERE OPO.PO_REF_DATE >= @StartDate AND OPO.PO_REF_DATE <= @EndDate
END
ELSE IF (@StartDate IS NOT NULL)
BEGIN
	 SELECT DG.REGIONAL_AREA,TER.TERRITORY_AREA,OPO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,OPO.PO_REF_NO,OPO.PO_REF_DATE,
	OOA.OA_ID AS OA_REF_NO,OOA.OA_DATE,BR.BRAND_ID,BR.BRAND_NAME,BB.BRANDPACK_ID,BB.BRANDPACK_NAME,OPB.PO_ORIGINAL_QTY AS PO_QTY,OOB.QTY_EVEN,
	OPB.PO_PRICE_PERQTY AS PRICE,OOB.UNIT,OOB.REMARK,ISNULL(OA_DISC.REMAIND_QTY,0)AS REMAIND_QTY,OA_DISC.GIVEN_AGREEMENT,OA_DISC.[QUARTER],
	OA_DISC.[SEMESTER],OA_DISC.YEARLY,OA_DISC.RPK,OA_DISC.DK,OA_DISC.CP_D,OA_DISC.CP_D_S,OA_DISC.CP_RMT,OA_DISC.PKPP,OPB.GIVEN_PKPP_VALUE,OA_DISC.CP_R,
	OA_DISC.CP_D_AUTO,OA_DISC.OTHER,
	ISNULL(T_DISC.TOTAL_DISC,0)AS TOTAL_DISC,
	--ISNULL(T_DISC.TOTAL_DISC,0) * OOB.OA_PRICE_PERQTY AS TOTAL_DISC_AMOUNT,
	OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_DELIVERY,
	--(OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_DELIVERY,
	OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_SALES
	--(OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_SALES              
	FROM ORDR_PURCHASE_ORDER OPO INNER JOIN DIST_DISTRIBUTOR DR ON OPO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
	 INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = OPO.PO_REF_NO LEFT OUTER JOIN ORDR_ORDER_ACCEPTANCE OOA
	ON OOA.PO_REF_NO = OPB.PO_REF_NO --INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
	LEFT OUTER JOIN ORDR_OA_BRANDPACK OOB ON OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID AND OOB.OA_ID = OOA.OA_ID
	INNER JOIN BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID --INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD ON OOBD.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
	LEFT OUTER JOIN
	               (
	                 SELECT OA_BRANDPACK_ID,
	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'RMOA' THEN DISC_QTY ELSE 0 END)AS REMAIND_QTY,
	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'G' THEN DISC_QTY ELSE 0 END)AS GIVEN_AGREEMENT, 
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Q1' THEN DISC_QTY WHEN 'Q2' THEN DISC_QTY WHEN 'Q3' THEN DISC_QTY
	                                     	  WHEN 'Q4' THEN DISC_QTY ELSE 0 END)AS [QUARTER],
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'S1' THEN DISC_QTY WHEN 'S2' THEN DISC_QTY ELSE 0 END)AS [SEMESTER], 
	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Y' THEN DISC_QTY ELSE 0 END)AS YEARLY, 
	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'MG' THEN DISC_QTY ELSE 0 END)AS RPK,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'DK' THEN DISC_QTY WHEN 'DN' THEN DISC_QTY ELSE 0 END)AS DK,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CP' THEN DISC_QTY WHEN 'TD' THEN DISC_QTY ELSE 0 END)AS CP_D,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CS' THEN DISC_QTY WHEN 'TS' THEN DISC_QTY WHEN 'SC' THEN DISC_QTY ELSE 0 END)AS CP_D_S,
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CD' THEN DISC_QTY WHEN 'CT' THEN DISC_QTY ELSE 0 END)AS CP_RMT,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'KP' THEN DISC_QTY ELSE 0 END)AS PKPP,
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CR' THEN DISC_QTY ELSE 0 END) AS CP_R,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CA' THEN DISC_QTY ELSE 0 END) AS CP_D_AUTO,
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'O'  THEN DISC_QTY ELSE 0 END)AS OTHER
	            	 FROM ORDR_OA_BRANDPACK_DISC GROUP BY OA_BRANDPACK_ID
	           	)OA_DISC ON OA_DISC.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
	LEFT OUTER JOIN(
	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
	                 WHERE GQSY_SGT_P_FLAG != 'RMOA'
	                 GROUP BY OA_BRANDPACK_ID
	                )T_DISC ON OOB.OA_BRANDPACK_ID = T_DISC.OA_BRANDPACK_ID
	LEFT OUTER JOIN( 
	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
	                 WHERE GQSY_SGT_P_FLAG = 'RMOA'
	                 GROUP BY OA_BRANDPACK_ID
	                )OA_LEFT ON OA_LEFT.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID 
	INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
	INNER JOIN DIST_REGIONAL DG ON DG.REGIONAL_ID = TER.REGIONAL_ID 
	INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
	WHERE OPO.PO_REF_DATE >= @StartDate
END
ELSE IF (@EndDate IS NOT NULL)
BEGIN
   SELECT DG.REGIONAL_AREA,TER.TERRITORY_AREA,OPO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,OPO.PO_REF_NO,OPO.PO_REF_DATE,
	OOA.OA_ID AS OA_REF_NO,OOA.OA_DATE,BR.BRAND_ID,BR.BRAND_NAME,BB.BRANDPACK_ID,BB.BRANDPACK_NAME,OPB.PO_ORIGINAL_QTY AS PO_QTY,OOB.QTY_EVEN,
	OPB.PO_PRICE_PERQTY AS PRICE,OOB.UNIT,OOB.REMARK,ISNULL(OA_DISC.REMAIND_QTY,0)AS REMAIND_QTY,OA_DISC.GIVEN_AGREEMENT,OA_DISC.[QUARTER],
	OA_DISC.[SEMESTER],OA_DISC.YEARLY,OA_DISC.RPK,OA_DISC.DK,OA_DISC.CP_D,OA_DISC.CP_D_S,OA_DISC.CP_RMT,OA_DISC.PKPP,OPB.GIVEN_PKPP_VALUE,OA_DISC.CP_R,
	OA_DISC.CP_D_AUTO,OA_DISC.OTHER,
	ISNULL(T_DISC.TOTAL_DISC,0)AS TOTAL_DISC,
	--ISNULL(T_DISC.TOTAL_DISC,0) * OOB.OA_PRICE_PERQTY AS TOTAL_DISC_AMOUNT,
	OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_DELIVERY,
	--(OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_DELIVERY,
	OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_SALES
	--(OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_SALES       
	FROM ORDR_PURCHASE_ORDER OPO INNER JOIN DIST_DISTRIBUTOR DR ON OPO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
	 INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = OPO.PO_REF_NO LEFT OUTER JOIN ORDR_ORDER_ACCEPTANCE OOA
	ON OOA.PO_REF_NO = OPB.PO_REF_NO --INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
	LEFT OUTER JOIN ORDR_OA_BRANDPACK OOB ON OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID AND OOB.OA_ID = OOA.OA_ID
	INNER JOIN BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID --INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD ON OOBD.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
	LEFT OUTER JOIN
	               (
	                 SELECT OA_BRANDPACK_ID,
	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'RMOA' THEN DISC_QTY ELSE 0 END)AS REMAIND_QTY,
	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'G' THEN DISC_QTY ELSE 0 END)AS GIVEN_AGREEMENT, 
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Q1' THEN DISC_QTY WHEN 'Q2' THEN DISC_QTY WHEN 'Q3' THEN DISC_QTY
	                                     	  WHEN 'Q4' THEN DISC_QTY ELSE 0 END)AS [QUARTER],
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'S1' THEN DISC_QTY WHEN 'S2' THEN DISC_QTY ELSE 0 END)AS [SEMESTER], 
	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Y' THEN DISC_QTY ELSE 0 END)AS YEARLY, 
	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'MG' THEN DISC_QTY ELSE 0 END)AS RPK,
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'DK' THEN DISC_QTY WHEN 'DN' THEN DISC_QTY ELSE 0 END)AS DK,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CP' THEN DISC_QTY WHEN 'TD' THEN DISC_QTY ELSE 0 END)AS CP_D,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CS' THEN DISC_QTY WHEN 'TS' THEN DISC_QTY WHEN 'SC' THEN DISC_QTY ELSE 0 END)AS CP_D_S,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CD' THEN DISC_QTY WHEN 'CT' THEN DISC_QTY ELSE 0 END)AS CP_RMT,
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'KP' THEN DISC_QTY ELSE 0 END)AS PKPP,
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CR' THEN DISC_QTY ELSE 0 END) AS CP_R,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CA' THEN DISC_QTY ELSE 0 END) AS CP_D_AUTO,
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'O'  THEN DISC_QTY ELSE 0 END)AS OTHER
	            	 FROM ORDR_OA_BRANDPACK_DISC GROUP BY OA_BRANDPACK_ID
	           	)OA_DISC ON OA_DISC.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
	LEFT OUTER JOIN(
	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
	                 WHERE GQSY_SGT_P_FLAG != 'RMOA'
	                 GROUP BY OA_BRANDPACK_ID
	                )T_DISC ON OOB.OA_BRANDPACK_ID = T_DISC.OA_BRANDPACK_ID
	LEFT OUTER JOIN( 
	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
	                 WHERE GQSY_SGT_P_FLAG = 'RMOA'
	                 GROUP BY OA_BRANDPACK_ID
	                )OA_LEFT ON OA_LEFT.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID 
	INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
	INNER JOIN DIST_REGIONAL DG ON DG.REGIONAL_ID = TER.REGIONAL_ID 
	INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
	WHERE OPO.PO_REF_DATE <= @EndDate
END
GO
--------------------------------------------------------------------------------------------------
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SALES_CPDAUTO_HEADER]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[SALES_CPDAUTO_HEADER](
	[IDApp] [smallint] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	[START_PERIODE] [smalldatetime] NOT NULL,
	[END_PERIODE] [smalldatetime] NOT NULL,
	[PROGRAM_DESC] [varchar](150) NOT NULL,
	[DISC_PROG_DESC] [varchar](250) NOT NULL,
	[DATE_TERMS_DESC] [varchar](250) NOT NULL,
	[CreatedBy] [varchar](50) NOT NULL,
	[CreatedDate] [smalldatetime] NOT NULL,
	[ModifiedBy] [varchar](50) NULL,
	[ModifiedDate] [smalldatetime] NULL,
 CONSTRAINT [PK_SALES_CPDAUTO_HEADER] PRIMARY KEY CLUSTERED 
(
	[IDApp] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SALES_CPDAUTO_TERMS]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[SALES_CPDAUTO_TERMS](
	[IDApp] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	[MAX_TO_DATE] [tinyint] NOT NULL,
	[DISCOUNT] [decimal](10, 3) NOT NULL,
	[FKCode] [smallint] NOT NULL,
	[CreatedDate] [smalldatetime] NOT NULL,
	[CreatedBy] [varchar](50) NOT NULL,
	[ModifiedDate] [smalldatetime] NULL,
	[ModifiedBy] [varchar](50) NULL,
 CONSTRAINT [PK_SALES_CPDAUTO_TERMS] PRIMARY KEY CLUSTERED 
(
	[IDApp] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SALES_CPDAUTO_PRODUCT]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[SALES_CPDAUTO_PRODUCT](
	[IDApp] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	[BRANDPACK_ID] [varchar](14) NOT NULL,
	[FKCode] [smallint] NOT NULL,
	[CreatedDate] [smalldatetime] NOT NULL,
	[CreatedBy] [varchar](50) NOT NULL,
 CONSTRAINT [PK_SALES_CPDAUTO_PRODUCT] PRIMARY KEY CLUSTERED 
(
	[IDApp] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[SALES_CPDAUTO_PROG_DISC]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[SALES_CPDAUTO_PROG_DISC](
	[IDApp] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	[UP_TO_PCT] [decimal](10, 3) NOT NULL,
	[DISCOUNT] [decimal](10, 3) NOT NULL,
	[FKCode] [smallint] NOT NULL,
	[CreatedDate] [smalldatetime] NOT NULL,
	[CreatedBy] [varchar](50) NOT NULL,
	[ModifiedBy] [varchar](50) NULL,
	[ModifiedDate] [smalldatetime] NULL,
 CONSTRAINT [PK_SALES_CPDAUTO_PROG_DISC] PRIMARY KEY CLUSTERED 
(
	[IDApp] ASC
)WITH (IGNORE_DUP_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
--------=======================END 20151119----------------------------------------------------------


IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'MRKT_DISC_HISTORY')C WHERE ColumnName = 'FKCodeCPDAuto')
ALTER TABLE MRKT_DISC_HISTORY ADD FKCodeCPDAuto INT NULL ;
GO

--TAMBAHKAN IDAppAdjust
--IF NOT EXISTS(SELECT ColumnName FROM (
--			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
--               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
--			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
--			   WHERE t.[TABLE_NAME] = 'ORDR_OA_BRANDPACK_DISC')C WHERE ColumnName = 'FKCodeAdjust')
--ALTER TABLE ORDR_OA_BRANDPACK_DISC ADD FKCodeAdjust INT NULL ;
--GO

IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'ORDR_OA_REMAINDING')C WHERE ColumnName = 'FKCodeAdjust')
ALTER TABLE ORDR_OA_REMAINDING ADD FKCodeAdjust INT NULL ;
GO

--LEPASKAN PRIMARY KEY COLUM ORDR_OA_BRANDPACK_DISC_ID
--COPYKAN COLUMN ORDR_OA_BRANDPACK_DISC_ID
--DELETE COLUMN ORDR_OA_BRANDPACK_DISC_ID
--INSERT COLUMN ORDR_OA_BRANDPACK_DISC_ID DENGAN DATA type Int dan set AutoIncrement dan not for replication

IF EXISTS(SELECT NAME FROM SYS.OBJECTS WHERE NAME = 'Sp_Delete_ORDR_OA_BRANDPACK_DISC' AND TYPE = 'P')
DROP PROCEDURE Sp_Delete_ORDR_OA_BRANDPACK_DISC
GO

--IF EXISTS(SELECT NAME FROM SYS.OBJECTS WHERE NAME = 'Usp_Insert_ORDR_OA_BRANDPACK_DISCOUNT' AND TYPE = 'P')
--DROP PROCEDURE Usp_Insert_ORDR_OA_BRANDPACK_DISCOUNT
--GO

IF EXISTS(SELECT NAME FROM SYS.OBJECTS WHERE NAME = 'Usp_Create_View_Report_Per_OA_Ref_No' AND TYPE = 'P')
DROP PROCEDURE Usp_Create_View_Report_Per_OA_Ref_No
GO
CREATE PROCEDURE Usp_Create_View_Report_Per_OA_Ref_No
@OA_REF_NO VARCHAR(32)
AS
SET NOCOUNT ON;
EXECUTE sp_executesql  N'SELECT OPO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,OPO.PO_REF_NO,OPO.PO_REF_DATE,
OOA.OA_ID AS OA_REF_NO,OOA.OA_DATE,BB.BRANDPACK_NAME,OOB.OA_ORIGINAL_QTY ,OOB.QTY_EVEN,
OOB.OA_PRICE_PERQTY AS PRICE,OOB.UNIT,OOB.REMARK,OA_DISC.REMAIND_QTY,OA_DISC.GIVEN_AGREEMENT,OA_DISC.[QUARTER],
OA_DISC.[SEMESTER],OA_DISC.YEARLY,OA_DISC.RPK,OA_DISC.CP_MRT,OA_DISC.DK,OA_DISC.CP_D,OA_DISC.CP_DK,OA_DISC.PKPP,OA_DISC.CP_R,
OA_DISC.OTHER,(OA_DISC.GIVEN_AGREEMENT * OOB.OA_PRICE_PERQTY) AS GIVEN_AMOUNT,
(OA_DISC.[QUARTER]* OOB.OA_PRICE_PERQTY) AS QUARTER_AMOUNT,
(OA_DISC.[SEMESTER] * OOB.OA_PRICE_PERQTY) AS SEMESTER_AMOUNT,
(OA_DISC.[YEARLY] * OOB.OA_PRICE_PERQTY) AS YEARLY_AMOUNT,
(OA_DISC.RPK * OOB.OA_PRICE_PERQTY) AS RPK_AMOUNT,
(OA_DISC.DK * OOB.OA_PRICE_PERQTY) AS DK_AMOUNT,
(OA_DISC.CP_D * OOB.OA_PRICE_PERQTY) AS CP_D_AMOUNT,
(OA_DISC.CP_DK * OOB.OA_PRICE_PERQTY) AS CP_DK_AMOUNT,
(OA_DISC.PKPP * OOB.OA_PRICE_PERQTY) AS PKPP_AMOUNT,
(OA_DISC.CP_R * OOB.OA_PRICE_PERQTY) AS CP_R_AMOUNT,
(OA_DISC.OTHER * OOB.OA_PRICE_PERQTY) AS OTHER_AMOUNT,
(OA_DISC.CP_MRT * OOB.OA_PRICE_PERQTY) AS CP_MRT_AMOUNT, 
(OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS OA_AMOUNT,
((T_DISC.TOTAL_DISC - ISNULL(ADJUST.ADJUST_QTY,0)) * OOB.OA_PRICE_PERQTY) AS TOTAL_DISC_AMOUNT,
ISNULL(ADJUST.ADJUST_QTY,0) AS ADJUST_QTY, ISNULL(ADJUST.ADJUST_QTY,0) * OOB.OA_PRICE_PERQTY AS ADJUST_AMOUNT
FROM ORDR_PURCHASE_ORDER OPO INNER JOIN DIST_DISTRIBUTOR DR ON OPO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
 INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = OPO.PO_REF_NO INNER JOIN ORDR_ORDER_ACCEPTANCE OOA
ON OOA.PO_REF_NO = OPB.PO_REF_NO
INNER JOIN ORDR_OA_BRANDPACK OOB ON OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID AND OOB.OA_ID = OOA.OA_ID
INNER JOIN BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID --INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD ON OOBD.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
LEFT OUTER JOIN
               (
                 SELECT OA_BRANDPACK_ID,
                 SUM(CASE GQSY_SGT_P_FLAG WHEN ''RMOA'' THEN DISC_QTY ELSE 0 END)AS REMAIND_QTY,
                 SUM(CASE GQSY_SGT_P_FLAG WHEN ''G''  THEN DISC_QTY ELSE 0 END)AS GIVEN_AGREEMENT, 
            	 SUM(CASE GQSY_SGT_P_FLAG WHEN ''Q1'' THEN DISC_QTY WHEN ''Q2'' THEN DISC_QTY WHEN ''Q3'' THEN DISC_QTY
                                     	  WHEN ''Q4'' THEN DISC_QTY ELSE 0 END)AS [QUARTER],
				 SUM(CASE GQSY_SGT_P_FLAG WHEN ''S1'' THEN DISC_QTY WHEN ''S2'' THEN DISC_QTY ELSE 0 END)AS [SEMESTER], 
           		 SUM(CASE GQSY_SGT_P_FLAG WHEN ''Y''  THEN DISC_QTY ELSE 0 END)AS YEARLY, 
           		 SUM(CASE GQSY_SGT_P_FLAG WHEN ''MG'' THEN DISC_QTY ELSE 0 END)AS RPK,
				 SUM(CASE GQSY_SGT_P_FLAG WHEN ''DK'' THEN DISC_QTY WHEN ''DN'' THEN DISC_QTY ELSE 0 END)AS DK,
           		 SUM(CASE GQSY_SGT_P_FLAG WHEN ''CP'' THEN DISC_QTY  WHEN ''TD'' THEN DISC_QTY WHEN ''CA'' THEN DISC_QTY ELSE 0 END)AS CP_D,
				 SUM(CASE GQSY_SGT_P_FLAG WHEN ''CS'' THEN DISC_QTY  WHEN ''TS'' THEN DISC_QTY ELSE 0 END)AS CP_DK,
				 SUM(CASE GQSY_SGT_P_FLAG WHEN ''CT'' THEN DISC_QTY WHEN ''CD'' THEN DISC_QTY ELSE 0 END)AS CP_MRT,
				 SUM(CASE GQSY_SGT_P_FLAG WHEN ''KP'' THEN DISC_QTY ELSE 0 END)AS PKPP,
				 SUM(CASE GQSY_SGT_P_FLAG WHEN ''CR'' THEN DISC_QTY ELSE 0 END) AS CP_R,
				 SUM(CASE GQSY_SGT_P_FLAG WHEN ''O''  THEN DISC_QTY ELSE 0 END)AS OTHER
				 FROM ORDR_OA_BRANDPACK_DISC GROUP BY OA_BRANDPACK_ID
           	)OA_DISC ON OA_DISC.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
LEFT OUTER JOIN(
                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
                 WHERE GQSY_SGT_P_FLAG != ''RMOA''
                 GROUP BY OA_BRANDPACK_ID
                )T_DISC ON OOB.OA_BRANDPACK_ID = T_DISC.OA_BRANDPACK_ID
LEFT OUTER JOIN( 
                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
                 WHERE GQSY_SGT_P_FLAG = ''RMOA''
                 GROUP BY OA_BRANDPACK_ID
                )OA_LEFT ON OA_LEFT.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID 
LEFT OUTER JOIN (
				SELECT OOBD.OA_BRANDPACK_ID,ISNULL(SUM(AT.ADJ_DISC_QTY),0) AS ADJUST_QTY FROM ORDR_OA_BRANDPACK_DISC OOBD INNER JOIN ADJUSTMENT_TRANS AT 
				ON AT.OA_BRANDPACK_DISC_ID = OOBD.OA_BRANDPACK_DISC_ID WHERE OOBD.OA_BRANDPACK_ID = ANY(SELECT OA_BRANDPACK_ID FROM ORDR_OA_BRANDPACK WHERE OA_ID = @V_OA_REF_NO)
				GROUP BY OOBD.OA_BRANDPACK_ID
				)ADJUST
ON ADJUST.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID				
WHERE OOA.OA_ID = @V_OA_REF_NO OPTION(KEEP PLAN)',N'@V_OA_REF_NO VARCHAR(32)',@V_OA_REF_NO = @OA_REF_NO
GO

/****** Object:  Table [dbo].[ADJUSTMENT_DPD]    Script Date: 11/27/2015 11:01:46 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ADJUSTMENT_DPD]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[ADJUSTMENT_DPD](
	[IDApp] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	[CodeApp] [varchar](110) NULL,
	[TypeApp] [varchar](32) NULL,
	[NameApp] [varchar](100) NULL,
	[DISTRIBUTOR_ID] [varchar](16) NULL,
	[BRANDPACK_ID] [varchar](16) NULL,
	[QTY] [decimal](18, 3) NULL,
	[RELEASE_QTY] [decimal](18, 3) NULL,
	[LEFT_QTY] [decimal](18, 3) NULL,
	[START_DATE] [smalldatetime] NULL,
	[END_DATE] [smalldatetime] NULL,
	[CreatedBy] [varchar](50) NULL,
	[CreatedDate] [smalldatetime] NULL,
	[ModifiedBy] [varchar](50) NULL,
	[ModifiedDate] [smalldatetime] NULL,
 CONSTRAINT [PK_ADJUSTMENT_DPD] PRIMARY KEY CLUSTERED 
(
	[IDApp] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[ADJUSTMENT_TRANS]    Script Date: 11/27/2015 11:01:46 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[ADJUSTMENT_TRANS]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[ADJUSTMENT_TRANS](
	[IDApp] [int] IDENTITY(1,1) NOT FOR REPLICATION NOT NULL,
	[FKApp] [int] NULL,
	[PO_REF_NO] [varchar](25) NULL,
	[OA_BRANDPACK_DISC_ID] [int] NULL,
	[ADJ_DISC_QTY] [decimal](18, 3) NULL,
	[CreatedBy] [varchar](50) NULL,
	[CreatedDate] [smalldatetime] NULL,
	[ModifiedBy] [varchar](50) NULL,
	[ModifiedDate] [smalldatetime] NULL,
 CONSTRAINT [PK_ADJUSTMENT_TRANS] PRIMARY KEY CLUSTERED 
(
	[IDApp] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_PADDING OFF
GO
SET ANSI_PADDING ON

GO
/****** Object:  Index [IX_ADJUSTMENT_DPD]    Script Date: 11/27/2015 11:01:46 AM ******/
IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ADJUSTMENT_DPD]') AND name = N'IX_ADJUSTMENT_DPD')
CREATE NONCLUSTERED INDEX [IX_ADJUSTMENT_DPD] ON [dbo].[ADJUSTMENT_DPD]
(
	[START_DATE] ASC,
	[END_DATE] ASC,
	[DISTRIBUTOR_ID] ASC,
	[BRANDPACK_ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO
SET ANSI_PADDING ON

GO
/****** Object:  Index [IX_ADJUSTMENT_TRANS]    Script Date: 11/27/2015 11:01:46 AM ******/
IF NOT EXISTS (SELECT * FROM sys.indexes WHERE object_id = OBJECT_ID(N'[dbo].[ADJUSTMENT_TRANS]') AND name = N'IX_ADJUSTMENT_TRANS')
CREATE NONCLUSTERED INDEX [IX_ADJUSTMENT_TRANS] ON [dbo].[ADJUSTMENT_TRANS]
(
	[FKApp] ASC,
	[OA_BRANDPACK_DISC_ID] ASC,
	[PO_REF_NO] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
GO

IF EXISTS(SELECT NAME FROM sys.objects WHERE NAME = 'Usp_Select_Left_Qty_Agreement_Saving' AND TYPE = 'P')
DROP PROCEDURE Usp_Select_Left_Qty_Agreement_Saving
GO
CREATE PROCEDURE Usp_Select_Left_Qty_Agreement_Saving
@BRANDPACK_ID VARCHAR(14),
@DISTRIBUTOR_ID VARCHAR(10),
@FLAG VARCHAR(5),
@PO_DATE DATETIME,
@DISC_AGREE_FROM VARCHAR(20)
AS
SET NOCOUNT ON;
DECLARE @V_DISTRIBUTOR_NAME VARCHAR(50),@IA_BRANDPACK_ID VARCHAR(14), @V_BRANDPACK_NAME VARCHAR(100),@V_BRANDPACK_ID VARCHAR(14);
SET @V_DISTRIBUTOR_NAME = (SELECT DISTRIBUTOR_NAME FROM DIST_DISTRIBUTOR WHERE DISTRIBUTOR_ID = @DISTRIBUTOR_ID);
IF (SELECT AllowRules FROM RefBussinesRules WHERE CodeApp = 'MSC0003') = 1
   BEGIN
        SET @V_BRANDPACK_NAME = (SELECT TOP 1 BRANDPACK_NAME FROM BRND_BRANDPACK WHERE BRANDPACK_ID = @BRANDPACK_ID);
       SELECT ACRD.ACHIEVEMENT_BRANDPACK_ID,ACRH.AGREEMENT_NO,'DISTRIBUTOR_NAME' = @V_DISTRIBUTOR_NAME,
	'BRANDPACK_NAME' = @V_BRANDPACK_NAME,ACRH.DISPRO AS [DISPRO %],ACRD.DISC_QTY,ACRD.LEFT_QTY,ACRD.RELEASE_QTY,
	'QSY_FLAG' = @FLAG,ACRH.IDAPP
	FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACRD ON ACRH.ACHIEVEMENT_ID = ACRD.ACHIEVEMENT_ID
        WHERE ACRH.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND ACRD.BRANDPACK_ID = @BRANDPACK_ID
	AND ACRD.CAN_RELEASE = 1 AND ACRD.LEFT_QTY > 0 AND ACRH.FLAG = @FLAG AND ACRH.AGREEMENT_NO = ANY(SELECT AGREEMENT_NO
	FROM AGREE_AGREEMENT WHERE YEAR(END_DATE) >= YEAR(@PO_DATE) -1);  		
   END
ELSE
   BEGIN
   SET @V_BRANDPACK_NAME = (SELECT TOP 1 BRANDPACK_NAME FROM BRND_BRANDPACK WHERE BRANDPACK_ID = @BRANDPACK_ID );
   SELECT @IA_BRANDPACK_ID = CASE @V_BRANDPACK_NAME
   WHEN 'GIBGRO 10 SP SACHET 1 KG  @ 1 GR- D' THEN '00898001KD'
   WHEN 'GIBGRO 20% TABLET @ 5 GR - D' THEN '00896005GD'
   ELSE (SELECT TOP 1 BRANDPACK_ID FROM BRND_BRANDPACK WHERE BRANDPACK_NAME = @V_BRANDPACK_NAME 
    AND ((IsActive = 1 AND IsObsolete = 1) OR BRANDPACK_ID <> @BRANDPACK_ID))
   END
   IF(@IA_BRANDPACK_ID IS NOT NULL)
   BEGIN SET @V_BRANDPACK_ID = @IA_BRANDPACK_ID;
	SELECT BBS.BRND_B_S_ID,ABI.AGREEMENT_NO,'DISTRIBUTOR_NAME' = @V_DISTRIBUTOR_NAME,'BRANDPACK_NAME' = @V_BRANDPACK_NAME,
	BBS.AGREE_DISC_PCT AS [DISPRO %],BBS.DISC_QTY,BBS.LEFT_QTY,BBS.RELEASE_QTY,'QSY_FLAG' = @FLAG
	FROM BRND_BRANDPACK_SAVING BBS INNER JOIN AGREE_BRANDPACK_INCLUDE ABI ON BBS.AGREE_BRANDPACK_ID
	= ABI.AGREE_BRANDPACK_ID WHERE BBS.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND ABI.BRANDPACK_ID = @V_BRANDPACK_ID--@BRANDPACK_ID
	AND BBS.LEFT_QTY > 0 AND BBS.QSY_FLAG = @FLAG AND ABI.AGREEMENT_NO = ANY(SELECT AGREEMENT_NO FROM AGREE_AGREEMENT 
	WHERE YEAR(END_DATE) >= YEAR(@PO_DATE) -1); 
    END
   ELSE BEGIN 
	SET @V_BRANDPACK_ID = @BRANDPACK_ID;
       	SELECT BBS.BRND_B_S_ID,ABI.AGREEMENT_NO,'DISTRIBUTOR_NAME' = @V_DISTRIBUTOR_NAME,'BRANDPACK_NAME' =@V_BRANDPACK_NAME ,
	BBS.AGREE_DISC_PCT AS [DISPRO %],BBS.DISC_QTY,BBS.LEFT_QTY,BBS.RELEASE_QTY,'QSY_FLAG' = @FLAG
	FROM BRND_BRANDPACK_SAVING BBS INNER JOIN AGREE_BRANDPACK_INCLUDE ABI ON BBS.AGREE_BRANDPACK_ID = ABI.AGREE_BRANDPACK_ID
      	WHERE BBS.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND ABI.BRANDPACK_ID = @V_BRANDPACK_ID--@BRANDPACK_ID
      	AND BBS.LEFT_QTY > 0 AND BBS.QSY_FLAG = @FLAG AND ABI.AGREEMENT_NO = ANY(SELECT AGREEMENT_NO FROM AGREE_AGREEMENT 
	WHERE YEAR(END_DATE) >= YEAR(@PO_DATE) -1); 
    END
	
END
GO

IF EXISTS(SELECT NAME FROM SYS.SYSOBJECTS WHERE NAME = 'Usp_Select_OA_Remainding_Detail' AND TYPE = 'P')
DROP PROCEDURE Usp_Select_OA_Remainding_Detail
GO
CREATE PROCEDURE Usp_Select_OA_Remainding_Detail
@DISTRIBUTOR_ID VARCHAR(10),
@BRANDPACK_ID VARCHAR(14),
@OA_ID VARCHAR(32)
AS
execute sp_executesql
N'SET NOCOUNT ON;SET IMPLICIT_TRANSACTIONS OFF
DECLARE @V_BRANDPACK_NAME VARCHAR(14),@V_OA_DATE DATETIME;
SET @V_BRANDPACK_NAME = (SELECT BRANDPACK_NAME FROM BRND_BRANDPACK WHERE BRANDPACK_ID = @V_BRANDPACK_ID); 
SET @V_OA_DATE = (SELECT OA_DATE FROM ORDR_ORDER_ACCEPTANCE WHERE OA_ID = @V_OA_ID);
BEGIN
	SELECT OORM.OA_RM_ID,OOB.OA_ID AS OA_REF_NO,BRANDPACK_NAME = @V_BRANDPACK_NAME,
        OOB.OA_BRANDPACK_ID,OORM.QTY,OORM.LEFT_QTY,OORM.RELEASE_QTY,OORM.AGREE_DISC_HIST_ID,
	OORM.BRND_B_S_ID,OORM.ACHIEVEMENT_BRANDPACK_ID,OORM.MRKT_DISC_HIST_ID,OORM.MRKT_M_S_ID,OORM.PROJ_DISC_HIST_ID,
        OORM.FLAG,CONVERT(BIT,(CASE WHEN (OORM.FKCodeAdjust IS NOT NULL) THEN 1 ELSE 0 END))AS IsAdjustment, OORM.CREATE_DATE
	FROM ORDR_OA_REMAINDING OORM  INNER JOIN ORDR_OA_BRANDPACK OOB ON OORM.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
        WHERE OOB.OA_BRANDPACK_ID = ANY(SELECT OA_BRANDPACK_ID FROM ORDR_OA_BRANDPACK WHERE PO_BRANDPACK_ID 
	= ANY(SELECT PO_BRANDPACK_ID FROM ORDR_PO_BRANDPACK WHERE BRANDPACK_ID = @V_BRANDPACK_ID AND PO_REF_NO = ANY(SELECT
	PO_REF_NO FROM ORDR_PURCHASE_ORDER WHERE DISTRIBUTOR_ID = @V_DISTRIBUTOR_ID)))
	AND OOB.OA_ID = ANY(SELECT OA_ID FROM ORDR_ORDER_ACCEPTANCE WHERE OA_DATE <= @V_OA_DATE
        AND YEAR(OA_DATE) >= YEAR(GETDATE()) -1) AND OORM.LEFT_QTY > 0 
		
END',N'@V_DISTRIBUTOR_ID VARCHAR(10),@V_BRANDPACK_ID VARCHAR(14),@V_OA_ID VARCHAR(32)',
@V_DISTRIBUTOR_ID = @DISTRIBUTOR_ID,@V_BRANDPACK_ID = @BRANDPACK_ID,@V_OA_ID = @OA_ID;
GO
----------------PROCEDURE UNTUK MENGECEK PERUBAHAN TERAKHIR INVOICE YANG DI INPUT FATHUL---

--------------------PROCEDURE UNTUK MENJUMLAHKAN PO BY BRANDPACK DI BERDASARKAN INVOICE DATA---

IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Get_Total_Qty_BrandPack_By_Invoice' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Total_Qty_BrandPack_By_Invoice
GO
CREATE PROCEDURE Usp_Get_Total_Qty_BrandPack_By_Invoice
@AGREEMENT_NO VARCHAR(32),
@DISTRIBUTOR_ID VARCHAR(10),
@FLAG VARCHAR(2)
--,
--@START_DATE SMALLDATETIME,
--@END_DATE SMALLDATETIME
AS
--PRT003 Setting referer invoice ke referencePO di InvoiceHeader ReferencePO = 1,NomorPO = 0
IF (SELECT AllowRules FROM RefBussinesRules WHERE CodeApp = 'RPT003') = 1
 BEGIN 
 SET DEADLOCK_PRIORITY NORMAL;SET NOCOUNT ON;
            SELECT ABI.DISTRIBUTOR_ID,ABI.BRANDPACK_ID,ISNULL(SUM(INV.QTY),0)AS TOTAL_INVOICE FROM Nufarm.DBO.VIEW_AGREE_BRANDPACK_INCLUDE ABI
	    LEFT OUTER JOIN ##T_Total_Qty_BrandPack INV
 	    ON ABI.BRANDPACK_ID = INV.BRANDPACK_ID
 	    AND ABI.DISTRIBUTOR_ID = INV.DISTRIBUTOR_ID
 	    WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO AND INV.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
 	    AND ABI.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
            GROUP BY ABI.DISTRIBUTOR_ID,ABI.BRANDPACK_ID OPTION(KEEP PLAN);
 END
 
GO

--------------------PROCEDURE BUAT MENJUMLAHKAN TOTAL BRAND DI NI87--
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Get_Total_Qty_Brand_By_Invoice' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Total_Qty_Brand_By_Invoice
GO
CREATE PROCEDURE Usp_Get_Total_Qty_Brand_By_Invoice---TANGGAL DI CONVERSI JADI DECIMAL TAHUN BULAN TANGGAL
@AGREEMENT_NO VARCHAR(32)
AS
--PRT003 Setting referer invoice ke referencePO di InvoiceHeader ReferencePO = 1,NomorPO = 0
IF (SELECT AllowRules FROM RefBussinesRules WHERE CodeApp = 'RPT003') = 1
BEGIN
SET DEADLOCK_PRIORITY NORMAL;SET NOCOUNT ON;
                
           SELECT DISTRIBUTOR_ID,BRAND_ID,SUM(QTY)AS TOTAL_INVOICE
           FROM(
		   SELECT OPO.DISTRIBUTOR_ID,ABI.BRAND_ID,ABP.BRANDPACK_ID,(ISNULL(INVOICE.QTY,0)/SB.SPPB_QTY) * OPB.PO_ORIGINAL_QTY AS QTY
		   FROM Nufarm.dbo.AGREE_BRAND_INCLUDE ABI 
		   INNER JOIN Nufarm.DBO.AGREE_BRANDPACK_INCLUDE ABP ON ABI.AGREE_BRAND_ID = ABP.AGREE_BRAND_ID
		   INNER JOIN Nufarm.dbo.ORDR_PO_BRANDPACK OPB ON OPB.BRANDPACK_ID = ABP.BRANDPACK_ID
		   INNER JOIN Nufarm.dbo.ORDR_PURCHASE_ORDER OPO
		   ON OPO.PO_REF_NO = OPB.PO_REF_NO INNER JOIN Nufarm.dbo.ORDR_ORDER_ACCEPTANCE OOA
	           ON OOA.PO_REF_NO = OPO.PO_REF_NO
	           INNER JOIN ORDR_OA_BRANDPACK OOAB ON OOAB.OA_ID = OOA.OA_ID
	           INNER JOIN SPPB_BRANDPACK SB ON OOAB.OA_BRANDPACK_ID = SB.OA_BRANDPACK_ID
		   LEFT OUTER JOIN (
		                     SELECT INV.PONUMBER,INV.REFERENCE,Tmbp.BRANDPACK_ID_DTS AS BRANDPACK_ID,INV.QTY 
		                     FROM ##T_SELECT_INVOICE INV INNER JOIN COMPARE_ITEM Tmbp 
		                     ON INV.BRANDPACK_ID =  Tmbp.BRANDPACK_ID_ACCPAC 
		    	            )INVOICE
		   ON ABP.BRANDPACK_ID = INVOICE.BRANDPACK_ID
		   AND (OOA.PO_REF_NO = INVOICE.PONUMBER OR OOA.RUN_NUMBER = INVOICE.REFERENCE)
		   WHERE OPO.DISTRIBUTOR_ID 
		   = SOME( 
		          SELECT DISTRIBUTOR_ID FROM Nufarm.DBO.DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO
		          )
		   AND ABI.AGREEMENT_NO = @AGREEMENT_NO AND ABP.AGREEMENT_NO = @AGREEMENT_NO
		   AND OPB.PO_ORIGINAL_QTY > 0
                )INV
           GROUP BY DISTRIBUTOR_ID,BRAND_ID
	   OPTION(KEEP PLAN);	
END 

GO

--exec Usp_Get_Total_Qty_Brand_By_Invoice
--@DEC_START_DATE = '20090901',
--@DEC_END_DATE = '20093011',
--@AGREEMENT_NO = '01033/NI/IX/09-1L.09',
--@START_DATE = '09/01/2009',
--@END_DATE = '11/30/2009'
--EXEC Usp_Create_Temp_Date_Invoice @
-------------------------------------------------------------------------------------------------
----------------------------PROCEDURE UNTUK MENGECEK PERUBAHAN DATA INVOICE BERDASAR BRAND------

IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Get_Changed_Invoice_By_Brand_ID' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Changed_Invoice_By_Brand_ID
GO
CREATE PROCEDURE Usp_Get_Changed_Invoice_By_Brand_ID         
@AGREEMENT_NO VARCHAR(32),
@FLAG VARCHAR(2)
AS
--PRT003 Setting referer invoice ke referencePO di InvoiceHeader ReferencePO = 1,NomorPO = 0
IF (SELECT AllowRules FROM RefBussinesRules WHERE CodeApp = 'RPT003') = 1
BEGIN
SET DEADLOCK_PRIORITY NORMAL;SET NOCOUNT ON;
SELECT ACH.DISTRIBUTOR_ID,ACH.BRAND_ID,ACH.TARGET,ISNULL(INV.TOTAL_INVOICE,0)AS TOTAL_INVOICE
FROM Nufarm.DBO.ACCRUED_HEADER ACH
INNER JOIN Tempdb..##T_Agreement_Brand INV
ON ACH.BRAND_ID = INV.BRAND_ID AND ACH.DISTRIBUTOR_ID = INV.DISTRIBUTOR_ID  
WHERE ACH.AGREEMENT_NO = @AGREEMENT_NO AND ACH.ACTUAL_DISTRIBUTOR <> CAST((ISNULL(INV.TOTAL_INVOICE,0))AS DECIMAL(18,3)) AND ACH.FLAG = @FLAG
 OPTION(KEEP PLAN) ;
END
GO 

--exec Usp_Get_Total_Qty_Brand_By_Invoice @DEC_START_DATE = '20090901', @DEC_END_DATE = '20091130', @AGREEMENT_NO = '00412/NI/III/2009-1L.09', 
--@START_DATE = 'Sep  1 2009 12:00AM', @END_DATE = 'Nov 30 2009 12:00AM'

----------------------PROCEDURE UNTUK MENGECEK PERUBAHAN INVOICE BERDASARKAN BRANDPACK-----
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Get_Changed_Invoice_By_BrandPack_ID' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Changed_Invoice_By_BrandPack_ID
GO
CREATE PROCEDURE Usp_Get_Changed_Invoice_By_BrandPack_ID
@AGREEMENT_NO VARCHAR(32),
@DISTRIBUTOR_ID VARCHAR(10),
@FLAG VARCHAR(2)
AS
--PRT003 Setting referer invoice ke referencePO di InvoiceHeader ReferencePO = 1,NomorPO = 0
IF (SELECT AllowRules FROM RefBussinesRules WHERE CodeApp = 'RPT003') = 1
BEGIN
SET DEADLOCK_PRIORITY NORMAL;SET NOCOUNT ON;
SELECT ACD.ACHIEVEMENT_ID,ABI.BRANDPACK_ID,ACD.TOTAL_ACTUAL,ACD.DISC_QTY,ACD.RELEASE_QTY,ACD.LEFT_QTY,ACD.CAN_RELEASE,
ISNULL(INV.TOTAL_INVOICE,0)AS TOTAL_INVOICE
FROM Nufarm.dbo.VIEW_AGREE_BRANDPACK_INCLUDE ABI 
INNER JOIN Nufarm.DBO.ACCRUED_DETAIL ACD ON ABI.BRANDPACK_ID = ACD.BRANDPACK_ID
INNER JOIN Nufarm.DBO.ACCRUED_HEADER ACH ON ACD.ACHIEVEMENT_ID = ACH.ACHIEVEMENT_ID 
INNER JOIN Tempdb..##T_Agreement_BrandPack INV
ON ABI.DISTRIBUTOR_ID = INV.DISTRIBUTOR_ID AND ABI.BRANDPACK_ID = INV.BRANDPACK_ID 
AND ACD.BRANDPACK_ID = INV.BRANDPACK_ID
AND ACH.DISTRIBUTOR_ID = INV.DISTRIBUTOR_ID
WHERE ACH.AGREEMENT_NO = @AGREEMENT_NO AND ABI.AGREEMENT_NO = @AGREEMENT_NO
AND ABI.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
AND ACH.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND ACH.FLAG = @FLAG AND ACD.TOTAL_ACTUAL <> CAST((ISNULL(INV.TOTAL_INVOICE,0))AS DECIMAL(18,3)) 
OPTION(KEEP PLAN);
END
GO

-----------------------------------------------------------------------------------------------------------------
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Create_Temp_Date_Invoice' AND TYPE = 'P')
   DROP PROCEDURE Usp_Create_Temp_Date_Invoice
GO
CREATE PROCEDURE Usp_Create_Temp_Date_Invoice
@I_START_DATE  SMALLDATETIME,
@I_END_DATE SMALLDATETIME
AS
SET NOCOUNT ON;
SELECT START_DATE = @I_START_DATE,END_DATE = @I_END_DATE INTO  ##T_START_DATE;
GO
------------------------------------PROCEDURE UNTUK MEMVIEW INVOICE----------------
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Get_Invoice' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Invoice
GO
CREATE PROCEDURE Usp_Get_Invoice
@START_DATE  SMALLDATETIME,
@END_DATE SMALLDATETIME,
@DISTRIBUTOR_ID VARCHAR(10),
@DEC_START_DATE NUMERIC(9,0),
@DEC_END_DATE NUMERIC(9,0)
--@MESSAGE VARCHAR(100) OUTPUT
AS
SET NOCOUNT ON;
-----------------------------------------------------------------------------
--PRT003 Setting referer invoice ke referencePO di InvoiceHeader ReferencePO = 1,NomorPO = 0
IF (SELECT AllowRules FROM RefBussinesRules WHERE CodeApp = 'RPT003') = 1
BEGIN
	IF (@DISTRIBUTOR_ID IS NOT NULL)
	   BEGIN
		SELECT PO.REGIONAL_AREA,PO.TERRITORY_AREA,PO.DISTRIBUTOR_ID,PO.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_DATE,
	        PO.BRANDPACK_ID,PO.BRANDPACK_NAME,PO.PO_ORIGINAL_QTY,PO.CREATED_PO_BY,
		INV.INVNUMBER AS INVOICE_NUMBER,INV.INVDATE,
	        INV.QTY AS TOTAL_SHIPMENT,INV.AUDTUSER AS CREATED_INVOICE_BY,DATENAME(MONTH,INV.INVDATE)AS [MONTH]
		FROM  
	   	    (
	      		SELECT REG.REGIONAL_AREA,TER.TERRITORY_AREA,PO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_REF_DATE AS PO_DATE,
	                OOA.RUN_NUMBER,OOA.OA_ID,OPB.PO_BRANDPACK_ID,OPB.BRANDPACK_ID,BB.BRANDPACK_NAME,
	      		OPB.PO_ORIGINAL_QTY,OPB.CREATE_BY AS CREATED_PO_BY
	     		FROM Nufarm.dbo.ORDR_PURCHASE_ORDER PO INNER JOIN Nufarm.dbo.ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = PO.PO_REF_NO
 			INNER JOIN Nufarm.dbo.ORDR_ORDER_ACCEPTANCE OOA ON OOA.PO_REF_NO = PO.PO_REF_NO
	      		INNER JOIN Nufarm.dbo.BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID
	      		INNER JOIN Nufarm.dbo.DIST_DISTRIBUTOR DR ON PO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
                        INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
                        INNER JOIN DIST_REGIONAL REG ON REG.REGIONAL_ID = TER.REGIONAL_ID
	     	    )PO
		LEFT OUTER JOIN(
	                         SELECT INV.PONUMBER,INV.INVNUMBER,INV.REFERENCE,Tmbp.BRANDPACK_ID_DTS AS BRANDPACK_ID,INV.QTY,INV.AUDTUSER
                                 ,CAST( '' + SUBSTRING(CAST(INV.INVDATE AS VARCHAR(20)),5,2) + 
			  	 '/' + RIGHT(CAST(INV.INVDATE AS VARCHAR(20)),2) +  '/' + LEFT(CAST(INV.INVDATE AS VARCHAR(20)),4)
				 AS SMALLDATETIME)AS INVDATE
			         FROM COMPARE_ITEM Tmbp INNER JOIN ##T_SELECT_INVOICE INV
	                         ON Tmbp.BRANDPACK_ID_ACCPAC = INV.BRANDPACK_ID
                                 WHERE INV.QTY IS NOT NULL AND INV.QTY > 0
				 --AND INV.INVDATE <= @DEC_END_DATE AND INVDATE >= @DEC_START_DATE
			        )INV
	     	ON INV.BRANDPACK_ID = PO.BRANDPACK_ID AND (INV.PONUMBER = PO.PO_REF_NO OR INV.REFERENCE = PO.RUN_NUMBER)
	      	WHERE PO.PO_DATE >= @START_DATE AND PO.PO_DATE <= @END_DATE
                AND EXISTS(SELECT OA_ID FROM ORDR_OA_BRANDPACK WHERE OA_ID = PO.OA_ID AND PO_BRANDPACK_ID = PO.PO_BRANDPACK_ID)  
		AND PO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID;
              
	   END
	ELSE
	   BEGIN
		SELECT PO.REGIONAL_AREA,PO.TERRITORY_AREA,PO.DISTRIBUTOR_ID,PO.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_DATE,
	        PO.BRANDPACK_ID,PO.BRANDPACK_NAME,PO.PO_ORIGINAL_QTY,PO.CREATED_PO_BY,
		INV.INVNUMBER AS INVOICE_NUMBER,INV.INVDATE,
	        INV.QTY AS TOTAL_SHIPMENT,INV.AUDTUSER AS CREATED_INVOICE_BY,DATENAME(MONTH,INV.INVDATE)AS [MONTH]
		FROM  
	   	    (
	      		SELECT REG.REGIONAL_AREA,TER.TERRITORY_AREA,PO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_REF_DATE AS PO_DATE,
	                OOA.RUN_NUMBER,OOA.OA_ID,OPB.PO_BRANDPACK_ID,OPB.BRANDPACK_ID,BB.BRANDPACK_NAME,
	      		OPB.PO_ORIGINAL_QTY,OPB.CREATE_BY AS CREATED_PO_BY
	     		FROM Nufarm.dbo.ORDR_PURCHASE_ORDER PO INNER JOIN Nufarm.dbo.ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = PO.PO_REF_NO
 			INNER JOIN Nufarm.dbo.ORDR_ORDER_ACCEPTANCE OOA ON OOA.PO_REF_NO = PO.PO_REF_NO
	      		INNER JOIN Nufarm.dbo.BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID
	      		INNER JOIN Nufarm.dbo.DIST_DISTRIBUTOR DR ON PO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
	     	    	INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
                        INNER JOIN DIST_REGIONAL REG ON REG.REGIONAL_ID = TER.REGIONAL_ID
                    )PO
		LEFT OUTER JOIN(
	                         SELECT INV.PONUMBER,INV.INVNUMBER,INV.REFERENCE,Tmbp.BRANDPACK_ID_DTS AS BRANDPACK_ID,INV.QTY,INV.AUDTUSER
			          ,CAST( '' + SUBSTRING(CAST(INV.INVDATE AS VARCHAR(20)),5,2) + 
			  	 '/' + RIGHT(CAST(INV.INVDATE AS VARCHAR(20)),2) +  '/' + LEFT(CAST(INV.INVDATE AS VARCHAR(20)),4)
				 AS SMALLDATETIME)AS INVDATE
                                 FROM COMPARE_ITEM Tmbp INNER JOIN ##T_SELECT_INVOICE INV
	                         ON Tmbp.BRANDPACK_ID_ACCPAC = INV.BRANDPACK_ID
                                 WHERE INV.QTY IS NOT NULL AND INV.QTY > 0
				 --AND INV.INVDATE <= @DEC_END_DATE AND INVDATE >= @DEC_START_DATE
			        )INV
	     	ON INV.BRANDPACK_ID = PO.BRANDPACK_ID AND (INV.PONUMBER = PO.PO_REF_NO OR INV.REFERENCE = PO.RUN_NUMBER)
	      	 --INV.INVDATE <= @DEC_END_DATE AND INVDATE >= @DEC_START_DATE--  --INV.INVDATE <= @DEC_END_DATE
		--AND 
               WHERE PO.PO_DATE >= @START_DATE AND PO.PO_DATE <= @END_DATE
                AND EXISTS(SELECT OA_ID FROM ORDR_OA_BRANDPACK WHERE OA_ID = PO.OA_ID AND PO_BRANDPACK_ID = PO.PO_BRANDPACK_ID);
	   END
END
ELSE
BEGIN
IF (@DISTRIBUTOR_ID IS NOT NULL)
 	BEGIN
		SELECT PO.REGIONAL_AREA,PO.TERRITORY_AREA, PO.DISTRIBUTOR_ID,PO.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_DATE,
	        PO.BRANDPACK_ID,PO.BRANDPACK_NAME,PO.PO_ORIGINAL_QTY,PO.CREATED_PO_BY,
		INV.INVNUMBER AS INVOICE_NUMBER,INV.INVDATE,
	        INV.QTY AS TOTAL_SHIPMENT,INV.AUDTUSER AS CREATED_INVOICE_BY,DATENAME(MONTH,INV.INVDATE)AS [MONTH]
		FROM  
	   	    (
	      		SELECT REG.REGIONAL_AREA,TER.TERRITORY_AREA, PO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_REF_DATE AS PO_DATE,
	                OPB.PO_BRANDPACK_ID,OPB.BRANDPACK_ID,BB.BRANDPACK_NAME,
	      		OPB.PO_ORIGINAL_QTY,OPB.CREATE_BY AS CREATED_PO_BY
	     		FROM Nufarm.dbo.ORDR_PURCHASE_ORDER PO INNER JOIN Nufarm.dbo.ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = PO.PO_REF_NO
 	     		INNER JOIN Nufarm.dbo.BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID
	      		INNER JOIN Nufarm.dbo.DIST_DISTRIBUTOR DR ON PO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
	     	    	INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
                        INNER JOIN DIST_REGIONAL REG ON REG.REGIONAL_ID = TER.REGIONAL_ID
                    )PO
		LEFT OUTER JOIN(
	                         SELECT INV.PONUMBER,INV.INVNUMBER,INV.REFERENCE,Tmbp.BRANDPACK_ID_DTS AS BRANDPACK_ID,INV.QTY,INV.AUDTUSER
			           ,CAST( '' + SUBSTRING(CAST(INV.INVDATE AS VARCHAR(20)),5,2) + 
			  	 '/' + RIGHT(CAST(INV.INVDATE AS VARCHAR(20)),2) +  '/' + LEFT(CAST(INV.INVDATE AS VARCHAR(20)),4)
				 AS SMALLDATETIME)AS INVDATE
                                 FROM COMPARE_ITEM Tmbp INNER JOIN ##T_SELECT_INVOICE INV
	                         ON Tmbp.BRANDPACK_ID_ACCPAC = INV.BRANDPACK_ID
                                 WHERE INV.QTY IS NOT NULL AND INV.QTY > 0
				 --AND INV.INVDATE <= @DEC_END_DATE AND INVDATE >= @DEC_START_DATE
			        )INV
	     	ON INV.BRANDPACK_ID = PO.BRANDPACK_ID AND INV.PONUMBER = PO.PO_REF_NO 
	        WHERE PO.PO_DATE >= @START_DATE AND PO.PO_DATE <= @END_DATE AND PO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID;
                
	   END
	ELSE
	   BEGIN
		SELECT PO.REGIONAL_AREA,PO.TERRITORY_AREA, PO.DISTRIBUTOR_ID,PO.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_DATE,
	        PO.BRANDPACK_ID,PO.BRANDPACK_NAME,PO.PO_ORIGINAL_QTY,PO.CREATED_PO_BY,
		INV.INVNUMBER AS INVOICE_NUMBER,INV.INVDATE,
	        INV.QTY AS TOTAL_SHIPMENT,INV.AUDTUSER AS CREATED_INVOICE_BY,DATENAME(MONTH,INV.INVDATE)AS [MONTH]
		FROM  
	   	    (
	      		SELECT REG.REGIONAL_AREA,TER.TERRITORY_AREA, PO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_REF_DATE AS PO_DATE,
	                OPB.PO_BRANDPACK_ID,OPB.BRANDPACK_ID,BB.BRANDPACK_NAME,
	      		OPB.PO_ORIGINAL_QTY,OPB.CREATE_BY AS CREATED_PO_BY
	     		FROM Nufarm.dbo.ORDR_PURCHASE_ORDER PO INNER JOIN Nufarm.dbo.ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = PO.PO_REF_NO
 			INNER JOIN Nufarm.dbo.BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID
	      		INNER JOIN Nufarm.dbo.DIST_DISTRIBUTOR DR ON PO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
	     	  	INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
                        INNER JOIN DIST_REGIONAL REG ON REG.REGIONAL_ID = TER.REGIONAL_ID
                    )PO
		LEFT OUTER JOIN(
	                         SELECT INV.PONUMBER,INV.INVNUMBER,INV.REFERENCE,Tmbp.BRANDPACK_ID_DTS AS BRANDPACK_ID,INV.QTY,INV.AUDTUSER
			           ,CAST( '' + SUBSTRING(CAST(INV.INVDATE AS VARCHAR(20)),5,2) + 
			  	 '/' + RIGHT(CAST(INV.INVDATE AS VARCHAR(20)),2) +  '/' + LEFT(CAST(INV.INVDATE AS VARCHAR(20)),4)
				 AS SMALLDATETIME)AS INVDATE
                                 FROM COMPARE_ITEM Tmbp INNER JOIN ##T_SELECT_INVOICE INV
	                         ON Tmbp.BRANDPACK_ID_ACCPAC = INV.BRANDPACK_ID
                                 WHERE INV.QTY IS NOT NULL AND INV.QTY > 0
                                 --AND INV.INVDATE <= @DEC_END_DATE AND INVDATE >= @DEC_START_DATE
			        )INV
	     	ON INV.BRANDPACK_ID = PO.BRANDPACK_ID AND INV.PONUMBER = PO.PO_REF_NO
	      	WHERE PO.PO_DATE >= @START_DATE AND PO.PO_DATE <= @END_DATE ;--INV.INVDATE <= @DEC_END_DATE AND INVDATE >= @DEC_START_DATE-- --INV.INVDATE <= @DEC_END_DATE
	 END
END
GO
--EXEC Usp_Create_Temp_Invoice_Table @DEC_START_DATE = 20090310,@DEC_END_DATE = 20101201

IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Get_Invoice_by_Invoice_Date' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Invoice_by_Invoice_Date
GO
CREATE PROCEDURE Usp_Get_Invoice_by_Invoice_Date
@DISTRIBUTOR_ID VARCHAR(10),
@START_DATE SMALLDATETIME,
@END_DATE SMALLDATETIME
AS
SET NOCOUNT ON;
--PRT003 Setting referer invoice ke referencePO di InvoiceHeader ReferencePO = 1,NomorPO = 0
IF (SELECT AllowRules FROM RefBussinesRules WHERE CodeApp = 'RPT003') = 1
BEGIN
	IF (@DISTRIBUTOR_ID IS NOT NULL)
	   BEGIN
		SELECT PO.REGIONAL_AREA,PO.TERRITORY_AREA,PO.DISTRIBUTOR_ID,PO.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_DATE,
	        PO.BRANDPACK_ID,PO.BRANDPACK_NAME,PO.PO_ORIGINAL_QTY,PO.CREATED_PO_BY,
		INV.INVNUMBER AS INVOICE_NUMBER,INV.INVDATE,
	        INV.QTY AS TOTAL_SHIPMENT,INV.AUDTUSER AS CREATED_INVOICE_BY,DATENAME(MONTH,INV.INVDATE)AS [MONTH]
		FROM  
	   	    (
			 SELECT INV.PONUMBER,INV.INVNUMBER,INV.REFERENCE,Tmbp.BRANDPACK_ID_DTS AS BRANDPACK_ID,INV.QTY,INV.AUDTUSER
                                 ,CAST( '' + SUBSTRING(CAST(INV.INVDATE AS VARCHAR(20)),5,2) + 
			  	 '/' + RIGHT(CAST(INV.INVDATE AS VARCHAR(20)),2) +  '/' + LEFT(CAST(INV.INVDATE AS VARCHAR(20)),4)
				 AS SMALLDATETIME)AS INVDATE
			         FROM COMPARE_ITEM Tmbp INNER JOIN ##T_SELECT_INVOICE INV
	                         ON Tmbp.BRANDPACK_ID_ACCPAC = INV.BRANDPACK_ID
                                 WHERE INV.QTY IS NOT NULL AND INV.QTY > 0

	     	    )INV
		 INNER JOIN(
	              		SELECT REG.REGIONAL_AREA,TER.TERRITORY_AREA,PO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_REF_DATE AS PO_DATE,
		                OOA.RUN_NUMBER,OOA.OA_ID,OPB.PO_BRANDPACK_ID,OPB.BRANDPACK_ID,BB.BRANDPACK_NAME,
		      		OPB.PO_ORIGINAL_QTY,OPB.CREATE_BY AS CREATED_PO_BY
		     		FROM Nufarm.dbo.ORDR_PURCHASE_ORDER PO INNER JOIN Nufarm.dbo.ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = PO.PO_REF_NO
	 			INNER JOIN Nufarm.dbo.ORDR_ORDER_ACCEPTANCE OOA ON OOA.PO_REF_NO = PO.PO_REF_NO
		      		INNER JOIN Nufarm.dbo.BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID
		      		INNER JOIN Nufarm.dbo.DIST_DISTRIBUTOR DR ON PO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
	                        INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
	                        INNER JOIN DIST_REGIONAL REG ON REG.REGIONAL_ID = TER.REGIONAL_ID          
				 --AND INV.INVDATE <= @DEC_END_DATE AND INVDATE >= @DEC_START_DATE
			     )PO
	     	ON INV.BRANDPACK_ID = PO.BRANDPACK_ID AND (INV.PONUMBER = PO.PO_REF_NO OR INV.REFERENCE = PO.RUN_NUMBER)
                
	      	WHERE EXISTS(SELECT OA_ID FROM ORDR_OA_BRANDPACK WHERE OA_ID = PO.OA_ID AND PO_BRANDPACK_ID = PO.PO_BRANDPACK_ID)  
		AND PO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND INV.INVDATE >= @START_DATE AND INV.INVDATE <= @END_DATE ;
              
	   END
	ELSE
	   BEGIN
		SELECT PO.REGIONAL_AREA,PO.TERRITORY_AREA,PO.DISTRIBUTOR_ID,PO.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_DATE,
	        PO.BRANDPACK_ID,PO.BRANDPACK_NAME,PO.PO_ORIGINAL_QTY,PO.CREATED_PO_BY,
		INV.INVNUMBER AS INVOICE_NUMBER,INV.INVDATE,
	        INV.QTY AS TOTAL_SHIPMENT,INV.AUDTUSER AS CREATED_INVOICE_BY,DATENAME(MONTH,INV.INVDATE)AS [MONTH]
		FROM  
	   	    (
			 SELECT INV.PONUMBER,INV.INVNUMBER,INV.REFERENCE,Tmbp.BRANDPACK_ID_DTS AS BRANDPACK_ID,INV.QTY,INV.AUDTUSER
                                 ,CAST( '' + SUBSTRING(CAST(INV.INVDATE AS VARCHAR(20)),5,2) + 
			  	 '/' + RIGHT(CAST(INV.INVDATE AS VARCHAR(20)),2) +  '/' + LEFT(CAST(INV.INVDATE AS VARCHAR(20)),4)
				 AS SMALLDATETIME)AS INVDATE
			         FROM COMPARE_ITEM Tmbp INNER JOIN ##T_SELECT_INVOICE INV
	                         ON Tmbp.BRANDPACK_ID_ACCPAC = INV.BRANDPACK_ID
                                 WHERE INV.QTY IS NOT NULL AND INV.QTY > 0

	     	    )INV
		 INNER JOIN(
	              		SELECT REG.REGIONAL_AREA,TER.TERRITORY_AREA,PO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_REF_DATE AS PO_DATE,
		                OOA.RUN_NUMBER,OOA.OA_ID,OPB.PO_BRANDPACK_ID,OPB.BRANDPACK_ID,BB.BRANDPACK_NAME,
		      		OPB.PO_ORIGINAL_QTY,OPB.CREATE_BY AS CREATED_PO_BY
		     		FROM Nufarm.dbo.ORDR_PURCHASE_ORDER PO INNER JOIN Nufarm.dbo.ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = PO.PO_REF_NO
	 			INNER JOIN Nufarm.dbo.ORDR_ORDER_ACCEPTANCE OOA ON OOA.PO_REF_NO = PO.PO_REF_NO
		      		INNER JOIN Nufarm.dbo.BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID
		      		INNER JOIN Nufarm.dbo.DIST_DISTRIBUTOR DR ON PO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
	                        INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
	                        INNER JOIN DIST_REGIONAL REG ON REG.REGIONAL_ID = TER.REGIONAL_ID          
				 --AND INV.INVDATE <= @DEC_END_DATE AND INVDATE >= @DEC_START_DATE
			     )PO
	     	ON INV.BRANDPACK_ID = PO.BRANDPACK_ID AND (INV.PONUMBER = PO.PO_REF_NO OR INV.REFERENCE = PO.RUN_NUMBER)
	      	WHERE EXISTS(SELECT OA_ID FROM ORDR_OA_BRANDPACK WHERE OA_ID = PO.OA_ID AND PO_BRANDPACK_ID = PO.PO_BRANDPACK_ID)
                 AND INV.INVDATE >= @START_DATE AND INV.INVDATE <= @END_DATE ;
	   END
END
ELSE
BEGIN
IF (@DISTRIBUTOR_ID IS NOT NULL)
 	BEGIN
		SELECT PO.REGIONAL_AREA,PO.TERRITORY_AREA, PO.DISTRIBUTOR_ID,PO.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_DATE,
	        PO.BRANDPACK_ID,PO.BRANDPACK_NAME,PO.PO_ORIGINAL_QTY,PO.CREATED_PO_BY,
		INV.INVNUMBER AS INVOICE_NUMBER,INV.INVDATE,
	        INV.QTY AS TOTAL_SHIPMENT,INV.AUDTUSER AS CREATED_INVOICE_BY,DATENAME(MONTH,INV.INVDATE)AS [MONTH]
		FROM  
	   	    (
			 SELECT INV.PONUMBER,INV.INVNUMBER,INV.REFERENCE,Tmbp.BRANDPACK_ID_DTS AS BRANDPACK_ID,INV.QTY,INV.AUDTUSER
                                 ,CAST( '' + SUBSTRING(CAST(INV.INVDATE AS VARCHAR(20)),5,2) + 
			  	 '/' + RIGHT(CAST(INV.INVDATE AS VARCHAR(20)),2) +  '/' + LEFT(CAST(INV.INVDATE AS VARCHAR(20)),4)
				 AS SMALLDATETIME)AS INVDATE
			         FROM COMPARE_ITEM Tmbp INNER JOIN ##T_SELECT_INVOICE INV
	                         ON Tmbp.BRANDPACK_ID_ACCPAC = INV.BRANDPACK_ID
                                 WHERE INV.QTY IS NOT NULL AND INV.QTY > 0

	     	    )INV
		 INNER JOIN(
	              		SELECT REG.REGIONAL_AREA,TER.TERRITORY_AREA,PO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_REF_DATE AS PO_DATE,
		                OOA.RUN_NUMBER,OOA.OA_ID,OPB.PO_BRANDPACK_ID,OPB.BRANDPACK_ID,BB.BRANDPACK_NAME,
		      		OPB.PO_ORIGINAL_QTY,OPB.CREATE_BY AS CREATED_PO_BY
		     		FROM Nufarm.dbo.ORDR_PURCHASE_ORDER PO INNER JOIN Nufarm.dbo.ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = PO.PO_REF_NO
	 			INNER JOIN Nufarm.dbo.ORDR_ORDER_ACCEPTANCE OOA ON OOA.PO_REF_NO = PO.PO_REF_NO
		      		INNER JOIN Nufarm.dbo.BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID
		      		INNER JOIN Nufarm.dbo.DIST_DISTRIBUTOR DR ON PO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
	                        INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
	                        INNER JOIN DIST_REGIONAL REG ON REG.REGIONAL_ID = TER.REGIONAL_ID          
				 --AND INV.INVDATE <= @DEC_END_DATE AND INVDATE >= @DEC_START_DATE
			     )PO
	     	ON INV.BRANDPACK_ID = PO.BRANDPACK_ID AND INV.PONUMBER = PO.PO_REF_NO 
	        WHERE INV.INVDATE >= @START_DATE AND INV.INVDATE <= @END_DATE ;
                
	   END
	ELSE
	   BEGIN
		SELECT PO.REGIONAL_AREA,PO.TERRITORY_AREA, PO.DISTRIBUTOR_ID,PO.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_DATE,
	        PO.BRANDPACK_ID,PO.BRANDPACK_NAME,PO.PO_ORIGINAL_QTY,PO.CREATED_PO_BY,
		INV.INVNUMBER AS INVOICE_NUMBER,INV.INVDATE,
	        INV.QTY AS TOTAL_SHIPMENT,INV.AUDTUSER AS CREATED_INVOICE_BY,DATENAME(MONTH,INV.INVDATE)AS [MONTH]
		FROM  
	   	    (
			 SELECT INV.PONUMBER,INV.INVNUMBER,INV.REFERENCE,Tmbp.BRANDPACK_ID_DTS AS BRANDPACK_ID,INV.QTY,INV.AUDTUSER
                                 ,CAST( '' + SUBSTRING(CAST(INV.INVDATE AS VARCHAR(20)),5,2) + 
			  	 '/' + RIGHT(CAST(INV.INVDATE AS VARCHAR(20)),2) +  '/' + LEFT(CAST(INV.INVDATE AS VARCHAR(20)),4)
				 AS SMALLDATETIME)AS INVDATE
			         FROM COMPARE_ITEM Tmbp INNER JOIN ##T_SELECT_INVOICE INV
	                         ON Tmbp.BRANDPACK_ID_ACCPAC = INV.BRANDPACK_ID
                                 WHERE INV.QTY IS NOT NULL AND INV.QTY > 0

	     	    )INV
		 INNER JOIN(
	              		SELECT REG.REGIONAL_AREA,TER.TERRITORY_AREA,PO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_REF_DATE AS PO_DATE,
		                OOA.RUN_NUMBER,OOA.OA_ID,OPB.PO_BRANDPACK_ID,OPB.BRANDPACK_ID,BB.BRANDPACK_NAME,
		      		OPB.PO_ORIGINAL_QTY,OPB.CREATE_BY AS CREATED_PO_BY
		     		FROM Nufarm.dbo.ORDR_PURCHASE_ORDER PO INNER JOIN Nufarm.dbo.ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = PO.PO_REF_NO
	 			INNER JOIN Nufarm.dbo.ORDR_ORDER_ACCEPTANCE OOA ON OOA.PO_REF_NO = PO.PO_REF_NO
		      		INNER JOIN Nufarm.dbo.BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID
		      		INNER JOIN Nufarm.dbo.DIST_DISTRIBUTOR DR ON PO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
	                        INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
	                        INNER JOIN DIST_REGIONAL REG ON REG.REGIONAL_ID = TER.REGIONAL_ID          
				 --AND INV.INVDATE <= @DEC_END_DATE AND INVDATE >= @DEC_START_DATE
			     )PO
	     	ON INV.BRANDPACK_ID = PO.BRANDPACK_ID AND INV.PONUMBER = PO.PO_REF_NO
	      	WHERE INV.INVDATE >= @START_DATE AND INV.INVDATE <= @END_DATE ;--INV.INVDATE <= @DEC_END_DATE AND INVDATE >= @DEC_START_DATE-- --INV.INVDATE <= @DEC_END_DATE
	 END
END
GO

--------------------------------------------------------------------------------------
-----------------PROCEDURE BUAT BIKIN TABLE TEMPORARY INVOICE--------
IF EXISTS(SELECT NAME FROM dbo.SYSOBJECTS WHERE NAME = 'Usp_Create_Temp_Invoice_Table' AND TYPE = 'P')
DROP PROCEDURE Usp_Create_Temp_Invoice_Table
GO
CREATE PROCEDURE Usp_Create_Temp_Invoice_Table
@DEC_START_DATE NUMERIC(9,0),@DEC_END_DATE NUMERIC(9,0)
AS
SET NOCOUNT ON;
SELECT SUBSTRING(REPLACE(RIGHT(RTRIM(INV.ITEM),14),'-',''),2,9)AS BRANDPACK_ID,INV.BRANDPACK_NAME,
      INV.QTYSHIPPED - INV.QTYRETURN AS QTY,INV.INVNUMBER, RTRIM(INV.PONUMBER) AS PONUMBER,INV.REFERENCE,INV.INVDATE,INV.AUDTUSER
      INTO ##T_SELECT_INVOICE FROM
      (
       SELECT INVH.INVDATE,INVH.INVNUMBER,INVH.PONUMBER,INVH.REFERENCE,INVD.ITEM,INVD.[DESC] AS BRANDPACK_NAME,INVD.QTYSHIPPED,ISNULL(CRD.QTYRETURN,0)AS QTYRETURN,INVD.AUDTUSER
       FROM NI87.dbo.OEINVH INVH INNER JOIN NI87.dbo.OEINVD INVD ON INVH.INVUNIQ = INVD.INVUNIQ
       LEFT OUTER JOIN
                  (
		   SELECT CRDH1.INVNUMBER,CRDH1.ITEM,ISNULL(SUM(CRDH1.QTYRETURN),0)AS QTYRETURN
		   FROM 
			(								
                   	  SELECT CRDH.CRDUNIQ,CRDH.INVNUMBER,CRDH.CRDDATE,CRD.ITEM,ISNULL(CRD.QTYRETURN,0)AS QTYRETURN
                          FROM NI87.DBO.OECRDH CRDH INNER JOIN 
                          (
                            SELECT CRDUNIQ,ITEM,ISNULL(SUM(QTYRETURN),0)AS QTYRETURN
                            FROM NI87.DBO.OECRDD WHERE LINETYPE = 1 AND ACCTSET = 'FG'
                            GROUP BY CRDUNIQ,ITEM
                           )CRD ON CRDH.CRDUNIQ = CRD.CRDUNIQ      
                         )CRDH1
                   WHERE CRDH1.CRDDATE >= @DEC_START_DATE
                   GROUP BY CRDH1.INVNUMBER,CRDH1.ITEM    
                  )CRD
        ON CRD.INVNUMBER = INVH.INVNUMBER 
        AND CRD.ITEM = INVD.ITEM
        WHERE INVH.INVDATE >= @DEC_START_DATE 
        AND INVH.INVDATE <= @DEC_END_DATE
	AND INVD.ACCTSET = 'FG' AND INVD.LINETYPE = 1
        AND LEN(RIGHT(RTRIM(INVD.ITEM),11)) >= 11
       )INV;
   CREATE CLUSTERED INDEX IDX_T_S_I ON ##T_SELECT_INVOICE(INVDATE,QTY,BRANDPACK_ID);
GO

--------------------------------------------------------------------------------------------
-----------------PROCEDURE BUAT TABLE_BRANDPACK UNTUK DI COCOKAN DENGAN ACCPACK---
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Create_Temp_Table_BrandPack' AND TYPE = 'P')
DROP PROCEDURE Usp_Create_Temp_Table_BrandPack
GO
CREATE PROCEDURE Usp_Create_Temp_Table_BrandPack
AS 
SET NOCOUNT ON;
SELECT BP.BRANDPACK_NAME,BR.BRAND_NAME AS BRAND_ACCPAC,BB1.BRAND_ID AS BRAND_ID_DTS,
BP.BRANDPACK_ID AS BRANDPACK_ID_DTS,BR.BRAND_ID AS BRAND_ID_ACCPAC
,(BR.BRAND_ID + '' + CASE RTRIM(BP.UNIT)
WHEN ('LITRE')THEN
        (SELECT 'DevidedQty' = CASE 
          WHEN (P.QUANTITY >=1 AND P.QUANTITY <= 9) 
             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'L') 
          WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'L')
          WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999)
             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'L')
            END
         )  
WHEN ('MILILITRE') THEN
      (SELECT 'DevidedQty' = CASE 
       WHEN (P.QUANTITY >= 1 AND P.QUANTITY <= 9) 
             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'M') 
       WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'M')
       WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999 )
             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'M')
	END
         )  	      
WHEN ('KILOGRAM') THEN
      (SELECT 'DevidedQty' = CASE 
       WHEN (BP.DEVIDED_QUANTITY >= 0.001 AND BP.DEVIDED_QUANTITY <= 0.009)
             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G') 
       WHEN (BP.DEVIDED_QUANTITY >= 0.10 AND BP.DEVIDED_QUANTITY <= 0.09)
	     THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G')
	WHEN (BP.DEVIDED_QUANTITY >= 0.1 AND BP.DEVIDED_QUANTITY <= 0.9)
	     THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G')    
       WHEN (P.QUANTITY >=1 AND P.QUANTITY <= 9) 
             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K') 
       WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K')
       WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999)
             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K')
	END
         )  	
WHEN ('GRAM') THEN
      (SELECT 'DevidedQty' = CASE 
       WHEN (P.QUANTITY >=1 AND P.QUANTITY <= 9) 
             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G') 
       WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G')
       WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999)
             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G')
       END 
      )
WHEN('SACHET') THEN
       (SELECT 'DevidedQty' = CASE 
       WHEN (P.QUANTITY >=1 AND P.QUANTITY <= 9) 
             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'S') 
       WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'S')
       WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999)
             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'S')
       END 
      )   	
WHEN ('BAGS') THEN
      (SELECT 'DevidedQty' = CASE 
       WHEN (P.QUANTITY >=1 AND P.QUANTITY <= 9) 
             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K') 
       WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K')
       WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999)
             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K')
	END
       )  
END	
)AS BRANDPACK_ID_ACCPAC
INTO ##T_BRANDPACK
FROM(SELECT DISTINCT RIGHT(RTRIM(SEG.SEGMENT1),1) + '' + RTRIM(SEG.SEGMENT2)AS BRAND_ID,
       UPPER(RTRIM(IC1.[DESC])) AS BRAND_NAME
       FROM NI87.dbo.ICITEM SEG INNER JOIN NI87.dbo.ICCATG  IC1 ON IC1.CATEGORY = SEG.CATEGORY
       WHERE RTRIM(SEG.ITEMBRKID) = 'FG' AND UPPER(IC1.[DESC]) NOT LIKE '%BULK%'
       AND UPPER(IC1.[DESC]) NOT LIKE '%OTHERS%' AND UPPER(IC1.[DESC]) NOT LIKE '%GARBAGES%' AND UPPER(IC1.[DESC]) NOT LIKE '%-E' 
       AND UPPER(IC1.[DESC]) NOT LIKE '%EXPORT%' AND UPPER(IC1.[DESC]) NOT LIKE '%EXP%'
      )BR
INNER JOIN(SELECT BRAND_ID,BRAND_NAME,'BRAND_ID_ACCPAC' = CASE REPLACE(BRAND_ID,'-','')
	--ROUNDUP
		WHEN '006020' THEN '00060' WHEN '0060200' THEN '00060'
		WHEN '00604' THEN '00060' WHEN '00601' THEN '00060'
		-----CHIX--
		WHEN '01006' THEN '11006' 
                -------LUGEN---------------------------------------------
		WHEN '01001' THEN '11001'-----------------------------------------
		---GIBGRO
		WHEN '00896' THEN '30896' WHEN '00897' THEN '30897' WHEN '00898' THEN '30898'                
		--MICROTHIOL---
		WHEN '07017' THEN '77017' WHEN '07009' THEN '77009' WHEN '07008' THEN '77008' 
		--KUPROXAT
		WHEN '077001' THEN '77001'
		---BIMARON--
		WHEN '00311' THEN '00310' WHEN '00325' THEN '00310'
                --PRODUCT EXPORT 02-2014
		WHEN '022010' THEN '22010' WHEN '022003' THEN '22003' WHEN '022034' THEN '22034'
		WHEN '022006' THEN '22006' WHEN '022012' THEN '22012' WHEN '022011' THEN '22011'
		ELSE BRAND_ID END
            FROM Nufarm.dbo.BRND_BRAND WHERE BRAND_NAME NOT LIKE 'OTHERS'
           )BB1    
ON BB1.BRAND_ID_ACCPAC = BR.BRAND_ID 
 OR SUBSTRING(BB1.BRAND_ID_ACCPAC,2,5) = BR.BRAND_ID OR RTRIM(BB1.BRAND_NAME) LIKE RTRIM(BR.BRAND_NAME) + '%'
INNER JOIN Nufarm.dbo.BRND_BRANDPACK BP ON BP.BRAND_ID = BB1.BRAND_ID
INNER JOIN Nufarm.dbo.BRND_PACK P ON BP.PACK_ID = P.PACK_ID
WHERE (BP.UNIT <> '' AND BP.UNIT IS NOT NULL)
AND (BP.IsActive = 1 AND BP.IsObsolete = 0)
AND EXISTS(SELECT BRAND_ID FROM Nufarm.dbo.AGREE_BRAND_INCLUDE WHERE BRAND_ID = BB1.BRAND_ID); 

CREATE CLUSTERED INDEX IX_T_BRANDPACK ON ##T_BRANDPACK(BRANDPACK_ID_DTS,BRANDPACK_ID_ACCPAC);
GO
----------------------------------------------------------------------------------------
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Get_Accrued' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Accrued
GO
CREATE PROCEDURE Usp_Get_Accrued
@START_DATE SMALLDATETIME,
@END_DATE SMALLDATETIME,
@QS_TREATMENT_FLAG CHAR(1)
AS
SET NOCOUNT ON;
IF NOT EXISTS(SELECT NAME FROM Tempdb..sysobjects WHERE NAME = '##T_DistAccrue' AND TYPE = 'U')
    BEGIN
	SELECT REG.REGIONAL_AREA AS REGIONAL,TER.TERRITORY_AREA AS TERRITORY,ABI.DISTRIBUTOR_ID,ABI.DISTRIBUTOR_NAME,ABI.BRAND_ID,ABI.BRAND_NAME,
	ABI.TARGET_Q1,ISNULL(ACRH.ACTUAL_Q1,0)AS ACTUAL_Q1,ISNULL(ACRH.ACHIEVEMENT_DISPROQ1/100,0)AS ACHIEVEMENT_DISPROQ1,ISNULL(ACRH.DISPROQ1/100,0)AS DISPROQ1,
	ISNULL(ACRH.BONUS_QTYQ1,0) AS BONUS_QTYQ1,ABI.TARGET_Q2,ISNULL(ACRH.ACTUAL_Q2,0)AS ACTUAL_Q2,ISNULL(ACRH.ACHIEVEMENT_DISPROQ2/100,0)AS ACHIEVEMENT_DISPROQ2,
	ISNULL(ACRH.DISPROQ2/100,0)AS DISPROQ2,ISNULL(ACRH.BONUS_QTYQ2,0)AS BONUS_QTYQ2,ABI.TARGET_Q3,ISNULL(ACRH.ACTUAL_Q3,0)AS ACTUAL_Q3,
	ISNULL(ACRH.ACHIEVEMENT_DISPROQ3/100,0)AS ACHIEVEMENT_DISPROQ3,ISNULL(ACRH.DISPROQ3/100,0)AS DISPROQ3,
	ISNULL(ACRH.BONUS_QTYQ3,0)AS BONUS_QTYQ3,ABI.TARGET_Q4,ISNULL(ACRH.ACTUAL_Q4,0)AS ACTUAL_Q4,ISNULL(ACRH.ACHIEVEMENT_DISPROQ4/100,0)AS ACHIEVEMENT_DISPROQ4,
	ISNULL(ACRH.DISPROQ4/100,0)AS DISPROQ4,ISNULL(ACRH.BONUS_QTYQ4,0)AS BONUS_QTYQ4,ABI.TARGET_S1,ISNULL(ACRH.ACTUAL_S1,0)AS ACTUAL_S1,
	ISNULL(ACRH.ACHIEVEMENT_DISPROS1/100,0)AS ACHIEVEMENT_DISPROS1,ISNULL(ACRH.DISPROS1/100,0)AS DISPROS1,
	ISNULL(ACRH.BONUS_QTYS1,0)AS BONUS_QTYS1,ABI.TARGET_S2,ISNULL(ACRH.ACTUAL_S2,0)AS ACTUAL_S2,
	ISNULL(ACRH.ACHIEVEMENT_DISPROS2/100,0)AS ACHIEVEMENT_DISPROS2,ISNULL(ACRH.DISPROS2/100,0)AS DISPROS2,
	ISNULL(ACRH.BONUS_QTYS2,0)AS BONUS_QTYS2,
	ABI.TARGET_YEAR,ISNULL(ACRH.ACTUAL_Y,0)AS ACTUAL_Y,ISNULL(ACRH.ACHIEVEMENT_DISPRO_Y/100,0)AS ACHIEVEMENT_DISPRO_Y,ISNULL(ACRH.DISPRO_Y/100,0)AS DISPRO_Y,
	ISNULL(ACRH.BONUS_QTY_Y,0)AS BONUS_QTY_Y
	FROM DIST_REGIONAL REG INNER JOIN TERRITORY TER ON REG.REGIONAL_ID = TER.REGIONAL_ID
	INNER JOIN DIST_DISTRIBUTOR DR ON TER.TERRITORY_ID = DR.TERRITORY_ID INNER JOIN VIEW_AGREE_BRAND_INCLUDE ABI ON ABI.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
	LEFT OUTER JOIN (
		    SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
		    SUM(CASE FLAG WHEN 'Q1' THEN TARGET END) AS TARGET_Q1,
		    SUM(CASE FLAG WHEN 'Q1' THEN TOTAL_ACTUAL END) AS ACTUAL_Q1,
		    SUM(CASE FLAG WHEN 'Q1' THEN ACHIEVEMENT_DISPRO END) AS ACHIEVEMENT_DISPROQ1,
		    SUM(CASE FLAG WHEN 'Q1' THEN DISPRO END) AS DISPROQ1, 
		    SUM(CASE FLAG WHEN 'Q1' THEN BONUS_QTY END) AS BONUS_QTYQ1,
	            SUM(CASE FLAG WHEN 'Q2' THEN TARGET END) AS TARGET_Q2,
		    SUM(CASE FLAG WHEN 'Q2' THEN TOTAL_ACTUAL END) AS ACTUAL_Q2,
		    SUM(CASE FLAG WHEN 'Q2' THEN ACHIEVEMENT_DISPRO END) AS ACHIEVEMENT_DISPROQ2,
		    SUM(CASE FLAG WHEN 'Q2' THEN DISPRO END) AS DISPROQ2,
		    SUM(CASE FLAG WHEN 'Q2' THEN BONUS_QTY END) AS BONUS_QTYQ2,
		    SUM(CASE FLAG WHEN 'Q3' THEN TARGET END) AS TARGET_Q3,
		    SUM(CASE FLAG WHEN 'Q3' THEN TOTAL_ACTUAL END) AS ACTUAL_Q3,
		    SUM(CASE FLAG WHEN 'Q3' THEN ACHIEVEMENT_DISPRO END) AS ACHIEVEMENT_DISPROQ3,
		    SUM(CASE FLAG WHEN 'Q3' THEN DISPRO END) AS DISPROQ3,
		    SUM(CASE FLAG WHEN 'Q3' THEN BONUS_QTY END) AS BONUS_QTYQ3,
		    SUM(CASE FLAG WHEN 'Q4' THEN TARGET END) AS TARGET_Q4,
		    SUM(CASE FLAG WHEN 'Q4' THEN TOTAL_ACTUAL END) AS ACTUAL_Q4,
	            SUM(CASE FLAG WHEN 'Q4' THEN ACHIEVEMENT_DISPRO END) AS ACHIEVEMENT_DISPROQ4,
		    SUM(CASE FLAG WHEN 'Q4' THEN DISPRO END) AS DISPROQ4,
		    SUM(CASE FLAG WHEN 'Q4' THEN BONUS_QTY END) AS BONUS_QTYQ4,
	  
		    
		    SUM(CASE FLAG WHEN 'S1' THEN TARGET END) AS TARGET_S1,
		    SUM(CASE FLAG WHEN 'S1' THEN TOTAL_ACTUAL END) AS ACTUAL_S1,
		    SUM(CASE FLAG WHEN 'S1' THEN ACHIEVEMENT_DISPRO END) AS ACHIEVEMENT_DISPROS1,
		    SUM(CASE FLAG WHEN 'S1' THEN DISPRO END) AS DISPROS1,
		    SUM(CASE FLAG WHEN 'S1' THEN BONUS_QTY END) AS BONUS_QTYS1,
		    SUM(CASE FLAG WHEN 'S2' THEN TARGET END) AS TARGET_S2,
		    SUM(CASE FLAG WHEN 'S2' THEN TOTAL_ACTUAL END) AS ACTUAL_S2,
		    SUM(CASE FLAG WHEN 'S2' THEN ACHIEVEMENT_DISPRO END) AS ACHIEVEMENT_DISPROS2,
		    SUM(CASE FLAG WHEN 'S2' THEN DISPRO END) AS DISPROS2,
		    SUM(CASE FLAG WHEN 'S2' THEN BONUS_QTY END) AS BONUS_QTYS2,
		    SUM(CASE FLAG WHEN 'Y' THEN TARGET END) AS TARGET_YEAR,
		    SUM(CASE FLAG WHEN 'Y' THEN TOTAL_ACTUAL END) AS ACTUAL_Y,
		    SUM(CASE FLAG WHEN 'Y' THEN ACHIEVEMENT_DISPRO END) AS ACHIEVEMENT_DISPRO_Y,
		    SUM(CASE FLAG WHEN 'Y' THEN DISPRO END) AS DISPRO_Y,
		    SUM(CASE FLAG WHEN 'Y' THEN BONUS_QTY END) AS BONUS_QTY_Y
	            
                   
		    FROM ACCRUED_HEADER WHERE AGREEMENT_NO = ANY(SELECT AGREEMENT_NO FROM AGREE_AGREEMENT
		         WHERE START_DATE >= @START_DATE AND END_DATE <= @END_DATE AND QS_TREATMENT_FLAG = @QS_TREATMENT_FLAG)
	           GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID 
		  )ACRH
	ON ABI.DISTRIBUTOR_ID = ACRH.DISTRIBUTOR_ID AND ABI.[ID] = ACRH.AGREE_BRAND_ID
	WHERE ABI.START_DATE >= @START_DATE AND ABI.END_DATE <= @END_DATE AND ABI.QS_TREATMENT_FLAG = @QS_TREATMENT_FLAG;
      END
ELSE
      BEGIN
	  SELECT REG.REGIONAL_AREA AS REGIONAL,TER.TERRITORY_AREA AS TERRITORY,ABI.DISTRIBUTOR_ID,ABI.DISTRIBUTOR_NAME,ABI.BRAND_ID,ABI.BRAND_NAME,
	ABI.TARGET_Q1,ISNULL(ACRH.ACTUAL_Q1,0)AS ACTUAL_Q1,ISNULL(ACRH.ACHIEVEMENT_DISPROQ1/100,0)AS ACHIEVEMENT_DISPROQ1,ISNULL(ACRH.DISPROQ1/100,0)AS DISPROQ1,
	ISNULL(ACRH.BONUS_QTYQ1,0) AS BONUS_QTYQ1,ABI.TARGET_Q2,ISNULL(ACRH.ACTUAL_Q2,0)AS ACTUAL_Q2,ISNULL(ACRH.ACHIEVEMENT_DISPROQ2/100,0)AS ACHIEVEMENT_DISPROQ2,
	ISNULL(ACRH.DISPROQ2/100,0)AS DISPROQ2,ISNULL(ACRH.BONUS_QTYQ2,0)AS BONUS_QTYQ2,ABI.TARGET_Q3,ISNULL(ACRH.ACTUAL_Q3,0)AS ACTUAL_Q3,
	ISNULL(ACRH.ACHIEVEMENT_DISPROQ3/100,0)AS ACHIEVEMENT_DISPROQ3,ISNULL(ACRH.DISPROQ3/100,0)AS DISPROQ3,
	ISNULL(ACRH.BONUS_QTYQ3,0)AS BONUS_QTYQ3,ABI.TARGET_Q4,ISNULL(ACRH.ACTUAL_Q4,0)AS ACTUAL_Q4,ISNULL(ACRH.ACHIEVEMENT_DISPROQ4/100,0)AS ACHIEVEMENT_DISPROQ4,
	ISNULL(ACRH.DISPROQ4/100,0)AS DISPROQ4,ISNULL(ACRH.BONUS_QTYQ4,0)AS BONUS_QTYQ4,ABI.TARGET_S1,ISNULL(ACRH.ACTUAL_S1,0)AS ACTUAL_S1,
	ISNULL(ACRH.ACHIEVEMENT_DISPROS1/100,0)AS ACHIEVEMENT_DISPROS1,ISNULL(ACRH.DISPROS1/100,0)AS DISPROS1,
	ISNULL(ACRH.BONUS_QTYS1,0)AS BONUS_QTYS1,ABI.TARGET_S2,ISNULL(ACRH.ACTUAL_S2,0)AS ACTUAL_S2,
	ISNULL(ACRH.ACHIEVEMENT_DISPROS2/100,0)AS ACHIEVEMENT_DISPROS2,ISNULL(ACRH.DISPROS2/100,0)AS DISPROS2,
	ISNULL(ACRH.BONUS_QTYS2,0)AS BONUS_QTYS2,
	ABI.TARGET_YEAR,ISNULL(ACRH.ACTUAL_Y,0)AS ACTUAL_Y,ISNULL(ACRH.ACHIEVEMENT_DISPRO_Y/100,0)AS ACHIEVEMENT_DISPRO_Y,ISNULL(ACRH.DISPRO_Y/100,0)AS DISPRO_Y,
	ISNULL(ACRH.BONUS_QTY_Y,0)AS BONUS_QTY_Y
	FROM DIST_REGIONAL REG INNER JOIN TERRITORY TER ON REG.REGIONAL_ID = TER.REGIONAL_ID
	INNER JOIN DIST_DISTRIBUTOR DR ON TER.TERRITORY_ID = DR.TERRITORY_ID INNER JOIN VIEW_AGREE_BRAND_INCLUDE ABI ON ABI.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
	LEFT OUTER JOIN (
		    SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
		    SUM(CASE FLAG WHEN 'Q1' THEN TARGET END) AS TARGET_Q1,
		    SUM(CASE FLAG WHEN 'Q1' THEN TOTAL_ACTUAL END) AS ACTUAL_Q1,
		    SUM(CASE FLAG WHEN 'Q1' THEN ACHIEVEMENT_DISPRO END) AS ACHIEVEMENT_DISPROQ1,
		    SUM(CASE FLAG WHEN 'Q1' THEN DISPRO END) AS DISPROQ1, 
		    SUM(CASE FLAG WHEN 'Q1' THEN BONUS_QTY END) AS BONUS_QTYQ1,
	            SUM(CASE FLAG WHEN 'Q2' THEN TARGET END) AS TARGET_Q2,
		    SUM(CASE FLAG WHEN 'Q2' THEN TOTAL_ACTUAL END) AS ACTUAL_Q2,
		    SUM(CASE FLAG WHEN 'Q2' THEN ACHIEVEMENT_DISPRO END) AS ACHIEVEMENT_DISPROQ2,
		    SUM(CASE FLAG WHEN 'Q2' THEN DISPRO END) AS DISPROQ2,
		    SUM(CASE FLAG WHEN 'Q2' THEN BONUS_QTY END) AS BONUS_QTYQ2,
		    SUM(CASE FLAG WHEN 'Q3' THEN TARGET END) AS TARGET_Q3,
		    SUM(CASE FLAG WHEN 'Q3' THEN TOTAL_ACTUAL END) AS ACTUAL_Q3,
		    SUM(CASE FLAG WHEN 'Q3' THEN ACHIEVEMENT_DISPRO END) AS ACHIEVEMENT_DISPROQ3,
		    SUM(CASE FLAG WHEN 'Q3' THEN DISPRO END) AS DISPROQ3,
		    SUM(CASE FLAG WHEN 'Q3' THEN BONUS_QTY END) AS BONUS_QTYQ3,
		    SUM(CASE FLAG WHEN 'Q4' THEN TARGET END) AS TARGET_Q4,
		    SUM(CASE FLAG WHEN 'Q4' THEN TOTAL_ACTUAL END) AS ACTUAL_Q4,
	            SUM(CASE FLAG WHEN 'Q4' THEN ACHIEVEMENT_DISPRO END) AS ACHIEVEMENT_DISPROQ4,
		    SUM(CASE FLAG WHEN 'Q4' THEN DISPRO END) AS DISPROQ4,
		    SUM(CASE FLAG WHEN 'Q4' THEN BONUS_QTY END) AS BONUS_QTYQ4,
		   
		    SUM(CASE FLAG WHEN 'S1' THEN TARGET END) AS TARGET_S1,
		    SUM(CASE FLAG WHEN 'S1' THEN TOTAL_ACTUAL END) AS ACTUAL_S1,
		    SUM(CASE FLAG WHEN 'S1' THEN ACHIEVEMENT_DISPRO END) AS ACHIEVEMENT_DISPROS1,
		    SUM(CASE FLAG WHEN 'S1' THEN DISPRO END) AS DISPROS1,
		    SUM(CASE FLAG WHEN 'S1' THEN BONUS_QTY END) AS BONUS_QTYS1,
		    SUM(CASE FLAG WHEN 'S2' THEN TARGET END) AS TARGET_S2,
		    SUM(CASE FLAG WHEN 'S2' THEN TOTAL_ACTUAL END) AS ACTUAL_S2,
		    SUM(CASE FLAG WHEN 'S2' THEN ACHIEVEMENT_DISPRO END) AS ACHIEVEMENT_DISPROS2,
		    SUM(CASE FLAG WHEN 'S2' THEN DISPRO END) AS DISPROS2,
		    SUM(CASE FLAG WHEN 'S2' THEN BONUS_QTY END) AS BONUS_QTYS2,
		    SUM(CASE FLAG WHEN 'Y' THEN TARGET END) AS TARGET_YEAR,
		    SUM(CASE FLAG WHEN 'Y' THEN TOTAL_ACTUAL END) AS ACTUAL_Y,
		    SUM(CASE FLAG WHEN 'Y' THEN ACHIEVEMENT_DISPRO END) AS ACHIEVEMENT_DISPRO_Y,
		    SUM(CASE FLAG WHEN 'Y' THEN DISPRO END) AS DISPRO_Y,
		    SUM(CASE FLAG WHEN 'Y' THEN BONUS_QTY END) AS BONUS_QTY_Y
	            
		    FROM ACCRUED_HEADER WHERE AGREEMENT_NO = ANY(SELECT AGREEMENT_NO FROM AGREE_AGREEMENT
		    WHERE START_DATE >= @START_DATE AND END_DATE <= @END_DATE AND QS_TREATMENT_FLAG = @QS_TREATMENT_FLAG)
	            GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID 
		   )ACRH
	ON ABI.DISTRIBUTOR_ID = ACRH.DISTRIBUTOR_ID AND ABI.[ID] = ACRH.AGREE_BRAND_ID
	WHERE ABI.START_DATE >= @START_DATE AND ABI.END_DATE <= @END_DATE AND ABI.QS_TREATMENT_FLAG = @QS_TREATMENT_FLAG
        AND ABI.DISTRIBUTOR_ID = ANY(SELECT DISTRIBUTOR_ID FROM Tempdb..##T_DistAccrue);
     END 	
GO

--exec Usp_Get_Accrued @QS_TREATMENT_FLAG = 'Q', @START_DATE = CAST(('Sep  9 2009 12:00AM') AS DATETIME), @END_DATE = CAST(('Aug 31 2010 12:00AM') AS DATETIME)

--exec Usp_Get_Accrued @QS_TREATMENT_FLAG = 'Q', @START_DATE = '09/01/2009', @END_DATE = '08/31/2010'
------------------------------------------------------------------------------------------
---------------------PROCEDURE UNTUK MENTRACT CHANGES-------------------------------------
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Get_Total_Acrue_By_Year' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Total_Acrue_By_Year
GO
CREATE PROCEDURE Usp_Get_Total_Acrue_By_Year
@AGREEMENT_NO VARCHAR(32),
@CURRENT_FLAG VARCHAR(2)
AS
SET DEADLOCK_PRIORITY NORMAL; SET NOCOUNT ON;
DECLARE @V_QS_TREATMENT_FLAG CHAR(1),@V_IsTargetGroup BIT;
SET @V_QS_TREATMENT_FLAG = (SELECT TOP 1 QS_TREATMENT_FLAG FROM AGREE_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO);
IF (SELECT COUNT(AGREEMENT_NO) FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO) > 1
    BEGIN SET @V_IsTargetGroup = 1; END
ELSE 
    BEGIN SET @V_IsTargetGroup = 0; END
IF @V_QS_TREATMENT_FLAG = 'Q'
   BEGIN 
	SELECT ABI.DISTRIBUTOR_ID,ABI.AGREEMENT_NO,ABI.[ID] AS AGREE_BRAND_ID,ABI.BRAND_ID,ABI.TARGET_YEAR,
	'TOTAL_ACTUAL' = CASE @CURRENT_FLAG 
			 WHEN 'Q1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4
			 WHEN 'Q2' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q3 + ABI.TARGET_Q4
			 WHEN 'Q3' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q4
			 ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
        END,
	'ACTUAL_YEAR_DISTRIBUTOR' = CASE @V_IsTargetGroup
				    WHEN 0 THEN CASE @CURRENT_FLAG 
					        WHEN 'Q1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4
					        WHEN 'Q2' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q3 + ABI.TARGET_Q4
					        WHEN 'Q3' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q4
					        ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) END
                                    ELSE  ISNULL(ACRH.ACTUAL_YEAR_DISTRIBUTOR,0)
                                    END,           		
        ABI.COMBINED_BRAND FROM VIEW_AGREE_BRAND_INCLUDE ABI
	LEFT OUTER JOIN( 
                        SELECT ACRHA.AGREE_BRAND_ID,ISNULL(ACRHA.ACTUAL_Q1,0) + ISNULL(ACRHA.ACTUAL_Q2,0) + ISNULL(ACRHA.ACTUAL_Q3,0) + ISNULL(ACRHA.ACTUAL_Q4,0) AS TOTAL_ACTUAL,
		   	ACRHD.DISTRIBUTOR_ID,
		   	ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q1,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q2,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q3,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q4,0) AS ACTUAL_YEAR_DISTRIBUTOR
                        FROM
                            (
                 	     SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
	    	  	     ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_DISTRIBUTOR END),0)  AS ACTUAL_Q1,
	    	  	     ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_DISTRIBUTOR END),0)  AS ACTUAL_Q2,
	    	  	     ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_DISTRIBUTOR END),0)  AS ACTUAL_Q3,
	    	  	     ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_DISTRIBUTOR END),0)  AS ACTUAL_Q4
	    		     FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO 
			     GROUP BY AGREEMENT_NO + BRAND_ID
            		     )ACRHA
		        INNER JOIN 
                              (SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
			       ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q1,
	    	 	       ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q2,
	    	 	       ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q3,
	    	 	       ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q4
	    	 	       FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO
			       GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID 
            	 	      )ACRHD
		        ON ACRHD.AGREE_BRAND_ID = ACRHA.AGREE_BRAND_ID
                        )ACRH
         ON ACRH.AGREE_BRAND_ID = ABI.[ID] AND ACRH.DISTRIBUTOR_ID = ABI.DISTRIBUTOR_ID
	WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO OPTION(KEEP PLAN);
    END
 ELSE IF @V_QS_TREATMENT_FLAG = 'S'

     BEGIN
 	SELECT ABI.DISTRIBUTOR_ID,ABI.AGREEMENT_NO,ABI.[ID] AS AGREE_BRAND_ID,ABI.BRAND_ID,ABI.TARGET_YEAR,
        'TOTAL_ACTUAL' = CASE @CURRENT_FLAG 
			 WHEN 'S1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_S2
			 ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
        		 END,
	'ACTUAL_YEAR_DISTRIBUTOR' = CASE @V_IsTargetGroup
				    WHEN 0 THEN CASE @CURRENT_FLAG 
					       WHEN 'S1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_S2
			 		       ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
        		 		       END
                                    ELSE  ISNULL(ACRH.ACTUAL_YEAR_DISTRIBUTOR,0)
                                    END,           		
        ABI.COMBINED_BRAND FROM VIEW_AGREE_BRAND_INCLUDE ABI
	LEFT OUTER JOIN ( 
                         SELECT ACRHA.AGREE_BRAND_ID,ISNULL(ACRHA.ACTUAL_S1,0) + ISNULL(ACRHA.ACTUAL_S2,0)AS TOTAL_ACTUAL,
			 ACRHD.DISTRIBUTOR_ID,ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_S1,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_S2,0) AS ACTUAL_YEAR_DISTRIBUTOR
                         FROM
                             (
                               SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
		    	       ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_S1,
		    	       ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_S2
		    	       FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO
			       GROUP BY AGREEMENT_NO + BRAND_ID 
                    	      )ACRHA
 			  INNER JOIN 
                               (SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
 			 	ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_S1,
		    	 	ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_S2
		    	 	FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO 
				GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID
                    	 	)ACRHD
   			 ON ACRHD.AGREE_BRAND_ID = ACRHA.AGREE_BRAND_ID
                       )ACRH
         ON ACRH.AGREE_BRAND_ID = ABI.[ID] AND ACRH.DISTRIBUTOR_ID = ABI.DISTRIBUTOR_ID
	WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO OPTION(KEEP PLAN);
     END
GO
-------------------------------------------------------------------------------------------
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Changed_Actual_Accrue_By_Year' AND TYPE = 'P')
	DROP PROCEDURE Usp_Changed_Actual_Accrue_By_Year
GO
CREATE PROCEDURE Usp_Changed_Actual_Accrue_By_Year
@AGREEMENT_NO VARCHAR(32),
@CURRENT_FLAG VARCHAR(2)
AS
SET DEADLOCK_PRIORITY NORMAL; SET NOCOUNT ON;
DECLARE @V_QS_TREATMENT_FLAG CHAR(1),@V_IsTargetGroup BIT;
SET @V_QS_TREATMENT_FLAG = (SELECT TOP 1 QS_TREATMENT_FLAG FROM AGREE_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO);
IF (SELECT COUNT(AGREEMENT_NO) FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO) > 1
    BEGIN SET @V_IsTargetGroup = 1; END
ELSE 
    BEGIN SET @V_IsTargetGroup = 0; END

IF @V_QS_TREATMENT_FLAG = 'Q'
   BEGIN 
	SELECT ABI.DISTRIBUTOR_ID,ABI.AGREEMENT_NO,ABI.[ID] AS AGREE_BRAND_ID,ABI.BRAND_ID,ABI.TARGET_YEAR,
       'TOTAL_ACTUAL' = CASE @CURRENT_FLAG 
			 WHEN 'Q1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4
			 WHEN 'Q2' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q3 + ABI.TARGET_Q4
			 WHEN 'Q3' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q4
			 ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
       			 END,
	'ACTUAL_YEAR_DISTRIBUTOR' = CASE @V_IsTargetGroup
				    WHEN 0 THEN CASE @CURRENT_FLAG 
					        WHEN 'Q1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4
					        WHEN 'Q2' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q3 + ABI.TARGET_Q4
					        WHEN 'Q3' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q4
					        ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) END
                                    ELSE  ISNULL(ACRH.ACTUAL_YEAR_DISTRIBUTOR,0)
                                    END,           		
        ABI.COMBINED_BRAND FROM VIEW_AGREE_BRAND_INCLUDE ABI
	INNER JOIN( 
                   SELECT ACRHA.AGREE_BRAND_ID,ISNULL(ACRHA.ACTUAL_Q1,0) + ISNULL(ACRHA.ACTUAL_Q2,0) + ISNULL(ACRHA.ACTUAL_Q3,0) + ISNULL(ACRHA.ACTUAL_Q4,0) AS TOTAL_ACTUAL,
		   ISNULL(ACRHA1.ACTUAL_Y,0)AS ACTUAL_Y,ACRHD.DISTRIBUTOR_ID,
		   (ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q1,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q2,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q3,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q4,0)) AS ACTUAL_YEAR_DISTRIBUTOR
                   FROM
                     (
                       SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
	    	       ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_Q1,
	    	       ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_Q2,
	    	       ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_DISTRIBUTOR  END),0) AS ACTUAL_Q3,
	    	       ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_DISTRIBUTOR  END),0) AS ACTUAL_Q4
	    	       FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO
		       GROUP BY AGREEMENT_NO + BRAND_ID 
            	      )ACRHA
		    INNER JOIN
                            (SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,TOTAL_ACTUAL AS ACTUAL_Y
	  	             FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO AND FLAG = 'Y'	
            		     )ACRHA1
		    ON ACRHA.AGREE_BRAND_ID = ACRHA1.AGREE_BRAND_ID
                    INNER JOIN 
                            (SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
			     ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q1,
	    	 	     ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q2,
	    	 	     ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q3,
	    	 	     ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q4
	    	 	     FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO 
			     GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID
            	 	     )ACRHD
		    ON ACRHD.AGREE_BRAND_ID = ACRHA.AGREE_BRAND_ID
                   )ACRH
         ON ACRH.AGREE_BRAND_ID = ABI.[ID] AND ACRH.DISTRIBUTOR_ID = ABI.DISTRIBUTOR_ID
	WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO
 	AND ACRH.ACTUAL_Y <> ACRH.TOTAL_ACTUAL OPTION(KEEP PLAN);
    END
 ELSE
     BEGIN
 	 SELECT ABI.DISTRIBUTOR_ID,ABI.AGREEMENT_NO,ABI.[ID] AS AGREE_BRAND_ID,ABI.BRAND_ID,ABI.TARGET_YEAR,
        'TOTAL_ACTUAL' = CASE @CURRENT_FLAG 
			 WHEN 'S1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_S2
			 ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
        		 END,
	'ACTUAL_YEAR_DISTRIBUTOR' = CASE @V_IsTargetGroup
				    WHEN 0 THEN CASE @CURRENT_FLAG 
					       WHEN 'S1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_S2
			 		       ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
        		 		       END
                                    ELSE  ISNULL(ACRH.ACTUAL_YEAR_DISTRIBUTOR,0)
                                    END,           		
        ABI.COMBINED_BRAND FROM VIEW_AGREE_BRAND_INCLUDE ABI
	INNER JOIN ( 
                        SELECT ACRHA.AGREE_BRAND_ID,ISNULL(ACRHA.ACTUAL_S1,0) + ISNULL(ACRHA.ACTUAL_S2,0)AS TOTAL_ACTUAL,
			ISNULL(ACRHA1.ACTUAL_Y,0)AS ACTUAL_Y,ACRHD.DISTRIBUTOR_ID,
			ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_S1,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_S1,0) AS ACTUAL_YEAR_DISTRIBUTOR
                         FROM
                             (
                         	SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
		    	  	ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_DISTRIBUTOR  END),0) AS ACTUAL_S1,
		    	  	ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_DISTRIBUTOR  END),0) AS ACTUAL_S2
		    	  	FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO
				GROUP BY AGREEMENT_NO + BRAND_ID 
                    	      )ACRHA
 			INNER JOIN
                                 (SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,TOTAL_ACTUAL AS ACTUAL_Y
	  	                  FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO AND FLAG = 'Y'	
		   	          )ACRHA1
			ON ACRHA.AGREE_BRAND_ID = ACRHA1.AGREE_BRAND_ID
                        INNER JOIN 
                                 (SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
 			 	  ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_S1,
		    	 	  ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_S2
		    	 	  FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO 
				  GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID
                    	 	  )ACRHD
   			ON ACRHD.AGREE_BRAND_ID = ACRHA.AGREE_BRAND_ID
                     )ACRH
        ON ACRH.AGREE_BRAND_ID = ABI.[ID] AND ACRH.DISTRIBUTOR_ID = ABI.DISTRIBUTOR_ID
	WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO
 	AND ACRH.ACTUAL_Y <> ACRH.TOTAL_ACTUAL OPTION(KEEP PLAN);
   END
GO

------------------------------------------------------------------------------------
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Get_Total_Accrue_By_Year_Detail' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Total_Accrue_By_Year_Detail
GO
CREATE PROCEDURE Usp_Get_Total_Accrue_By_Year_Detail
@AGREEMENT_NO VARCHAR(32)
AS
SET DEADLOCK_PRIORITY NORMAL; SET NOCOUNT ON; 
DECLARE @V_QS_TREATMENT_FLAG CHAR(1);
SET @V_QS_TREATMENT_FLAG = (SELECT TOP 1 QS_TREATMENT_FLAG FROM AGREE_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO);
IF (@V_QS_TREATMENT_FLAG = 'S')
   BEGIN
	SELECT ACRH.AGREEMENT_NO + ACRH.BRAND_ID AS AGREE_BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,ISNULL(SUM(ACD.TOTAL_ACTUAL),0) AS TOTAL_ACTUAL
	FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACD ON ACRH.ACHIEVEMENT_ID = ACD.ACHIEVEMENT_ID
        WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.FLAG IN('S1','S2')
	GROUP BY ACRH.AGREEMENT_NO + BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID
	OPTION(KEEP PLAN);
   END
ELSE IF (@V_QS_TREATMENT_FLAG = 'Q')
   BEGIN
	SELECT ACRH.AGREEMENT_NO + ACRH.BRAND_ID AS AGREE_BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,ISNULL(SUM(ACD.TOTAL_ACTUAL),0) AS TOTAL_ACTUAL
	FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACD ON ACRH.ACHIEVEMENT_ID = ACD.ACHIEVEMENT_ID
        WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.FLAG IN('Q1','Q2','Q3','Q4')
	GROUP BY ACRH.AGREEMENT_NO + BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID
	OPTION(KEEP PLAN);
   END
GO
	
----------------------------------------------------------------------------------------------
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Changed_Acrue_BY_Year_Detail' AND TYPE = 'P')
DROP PROCEDURE Usp_Changed_Acrue_BY_Year_Detail
GO
CREATE PROCEDURE Usp_Changed_Acrue_BY_Year_Detail
@AGREEMENT_NO VARCHAR(32)
AS
SET DEADLOCK_PRIORITY NORMAL; SET NOCOUNT ON; 
DECLARE @V_QS_TREATMENT_FLAG CHAR(1);
SET @V_QS_TREATMENT_FLAG = (SELECT TOP 1 QS_TREATMENT_FLAG FROM AGREE_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO);
IF (@V_QS_TREATMENT_FLAG = 'S')
   BEGIN
        SELECT ACRH.AGREEMENT_NO + ACRH.BRAND_ID AS AGREE_BRAND_ID,ACRH.DISTRIBUTOR_ID,ACRH.BRANDPACK_ID,ACRH.TOTAL_ACTUAL
        FROM(  
	      SELECT ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,ISNULL(SUM(ACD.TOTAL_ACTUAL),0) AS TOTAL_ACTUAL
	      FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACD ON ACRH.ACHIEVEMENT_ID = ACD.ACHIEVEMENT_ID
              WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.FLAG IN('S1','S2')
	      GROUP BY ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID
             )ACRH
        INNER JOIN(SELECT ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,ACD.TOTAL_ACTUAL
	     	   FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACD ON ACRH.ACHIEVEMENT_ID = ACD.ACHIEVEMENT_ID
              	   WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.FLAG = 'Y'
                   )ACRH1 
        ON (ACRH.AGREEMENT_NO + ACRH.BRAND_ID + ACRH.DISTRIBUTOR_ID + ACRH.BRANDPACK_ID)
         = (ACRH1.AGREEMENT_NO + ACRH1.BRAND_ID + ACRH1.DISTRIBUTOR_ID + ACRH1.BRANDPACK_ID)
	WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.TOTAL_ACTUAL <> ACRH1.TOTAL_ACTUAL OPTION(KEEP PLAN);
   END
ELSE IF (@V_QS_TREATMENT_FLAG = 'Q')
   BEGIN
	SELECT ACRH.AGREEMENT_NO + ACRH.BRAND_ID AS AGREE_BRAND_ID,ACRH.DISTRIBUTOR_ID,ACRH.BRANDPACK_ID,ACRH.TOTAL_ACTUAL
        FROM(  
	      SELECT ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,ISNULL(SUM(ACD.TOTAL_ACTUAL),0) AS TOTAL_ACTUAL
	      FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACD ON ACRH.ACHIEVEMENT_ID = ACD.ACHIEVEMENT_ID
              WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.FLAG IN('Q1','Q2','Q3','Q4')
	      GROUP BY ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID
             )ACRH
         INNER JOIN(SELECT ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,ACD.TOTAL_ACTUAL
	     	    FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACD ON ACRH.ACHIEVEMENT_ID = ACD.ACHIEVEMENT_ID
              	    WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.FLAG = 'Y'
                   )ACRH1 
         ON (ACRH.AGREEMENT_NO + ACRH.BRAND_ID + ACRH.DISTRIBUTOR_ID + ACRH.BRANDPACK_ID)
         = (ACRH1.AGREEMENT_NO + ACRH1.BRAND_ID + ACRH1.DISTRIBUTOR_ID + ACRH1.BRANDPACK_ID)
	WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.TOTAL_ACTUAL <> ACRH1.TOTAL_ACTUAL OPTION(KEEP PLAN);
   END
GO
---------------------------------------------------------------------------------------------
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Create_View_Distributor_SPPB' AND TYPE = 'P')
DROP PROCEDURE Usp_Create_View_Distributor_SPPB
GO
CREATE PROCEDURE Usp_Create_View_Distributor_SPPB
AS
SET NOCOUNT ON;
SELECT DR.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME FROM DIST_DISTRIBUTOR DR 
INNER JOIN ORDR_PURCHASE_ORDER PO ON PO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
INNER JOIN SPPB_HEADER SB ON SB.PO_REF_NO = PO.PO_REF_NO;

--WHERE EXISTS(SELECT PO.DISTRIBUTOR_ID FROM ORDR_PURCHASE_ORDER PO
--WHERE EXISTS(SELECT PO_REF_NO FROM SPPB_HEADER WHERE PO_REF_NO = PO.PO_REF_NO)
--AND PO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID)
GO 










DECLARE @V_OA_BRANDPACK_ID VARCHAR(110);
DECLARE CURSOR_BRANDPACK_ID CURSOR FOR
SELECT OA_BRANDPACK_ID FROM(
SELECT PO.PO_REF_DATE,OPB.PO_REF_NO,OOAB.OA_BRANDPACK_ID,ISNULL(OOAB.AGREE_DISC_QTY,0) + ISNULL(OOAB.PROG_DISC_QTY,0) + ISNULL(OOAB.OTHER_DISC_QTY,0)
AS SUM_OA_DISCOUNT,OOBD.DISC_QTY AS TOTAL_DISC_QTY
FROM ORDR_OA_BRANDPACK OOAB INNER JOIN(SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS DISC_QTY FROM ORDR_OA_BRANDPACK_DISC
WHERE GQSY_SGT_P_FLAG != 'RMOA' GROUP BY OA_BRANDPACK_ID HAVING SUM(DISC_QTY) > 0 )OOBD
ON OOBD.OA_BRANDPACK_ID = OOAB.OA_BRANDPACK_ID
INNER JOIN ORDR_PO_BRANDPACK OPB ON OOAB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID
INNER JOIN ORDR_PURCHASE_ORDER PO ON PO.PO_REF_NO = OPB.PO_REF_NO
WHERE (ISNULL(OOAB.AGREE_DISC_QTY,0) + ISNULL(OOAB.PROG_DISC_QTY,0) + ISNULL(OOAB.OTHER_DISC_QTY,0)) > 0
AND (ISNULL(OOAB.AGREE_DISC_QTY,0) + ISNULL(OOAB.PROG_DISC_QTY,0) + ISNULL(OOAB.OTHER_DISC_QTY,0)) <> OOBD.DISC_QTY 
AND YEAR(PO.PO_REF_DATE) >= 2009
)C;
OPEN CURSOR_BRANDPACK_ID;
FETCH NEXT FROM CURSOR_BRANDPACK_ID INTO @V_OA_BRANDPACK_ID;
WHILE (@@FETCH_STATUS = 0)
BEGIN
exec Usp_Check_Sum_Mathching_Disc_Qty @OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID,
@DISCOUNT_TYPE = 'Sales_Discount';
FETCH NEXT FROM CURSOR_BRANDPACK_ID INTO @V_OA_BRANDPACK_ID;
END
CLOSE CURSOR_BRANDPACK_ID;
DEALLOCATE CURSOR_BRANDPACK_ID;
------------------------------------------------------------------------------

DECLARE @V_OA_BRANDPACK_ID VARCHAR(110);
DECLARE CURSOR_BRANDPACK_ID CURSOR FOR
SELECT OA_BRANDPACK_ID FROM(
SELECT PO.PO_REF_DATE,OPB.PO_REF_NO,OOAB.OA_BRANDPACK_ID,ISNULL(OOAB.AGREE_DISC_QTY,0) + ISNULL(OOAB.PROG_DISC_QTY,0) + ISNULL(OOAB.OTHER_DISC_QTY,0)
AS SUM_OA_DISCOUNT,OOBD.DISC_QTY AS TOTAL_DISC_QTY
FROM ORDR_OA_BRANDPACK OOAB INNER JOIN(SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS DISC_QTY FROM ORDR_OA_BRANDPACK_DISC
WHERE GQSY_SGT_P_FLAG != 'RMOA' GROUP BY OA_BRANDPACK_ID HAVING SUM(DISC_QTY) > 0 )OOBD
ON OOBD.OA_BRANDPACK_ID = OOAB.OA_BRANDPACK_ID
INNER JOIN ORDR_PO_BRANDPACK OPB ON OOAB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID
INNER JOIN ORDR_PURCHASE_ORDER PO ON PO.PO_REF_NO = OPB.PO_REF_NO
WHERE (ISNULL(OOAB.AGREE_DISC_QTY,0) + ISNULL(OOAB.PROG_DISC_QTY,0) + ISNULL(OOAB.OTHER_DISC_QTY,0)) > 0
AND (ISNULL(OOAB.AGREE_DISC_QTY,0) + ISNULL(OOAB.PROG_DISC_QTY,0) + ISNULL(OOAB.OTHER_DISC_QTY,0)) <> OOBD.DISC_QTY 
AND YEAR(PO.PO_REF_DATE) >= 2009
)C;
OPEN CURSOR_BRANDPACK_ID;
FETCH NEXT FROM CURSOR_BRANDPACK_ID INTO @V_OA_BRANDPACK_ID;
WHILE (@@FETCH_STATUS = 0)
BEGIN
exec Usp_Check_Sum_Mathching_Disc_Qty @OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID,
@DISCOUNT_TYPE = 'Agreement_Discount';
FETCH NEXT FROM CURSOR_BRANDPACK_ID INTO @V_OA_BRANDPACK_ID;
END
CLOSE CURSOR_BRANDPACK_ID;
DEALLOCATE CURSOR_BRANDPACK_ID;

-------------------------------------------------------------------------
DECLARE @V_OA_BRANDPACK_ID VARCHAR(110);
DECLARE CURSOR_BRANDPACK_ID CURSOR FOR
SELECT OA_BRANDPACK_ID FROM(
SELECT PO.PO_REF_DATE,OPB.PO_REF_NO,OOAB.OA_BRANDPACK_ID,ISNULL(OOAB.AGREE_DISC_QTY,0) + ISNULL(OOAB.PROG_DISC_QTY,0) + ISNULL(OOAB.OTHER_DISC_QTY,0)
AS SUM_OA_DISCOUNT,OOBD.DISC_QTY AS TOTAL_DISC_QTY
FROM ORDR_OA_BRANDPACK OOAB INNER JOIN(SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS DISC_QTY FROM ORDR_OA_BRANDPACK_DISC
WHERE GQSY_SGT_P_FLAG != 'RMOA' GROUP BY OA_BRANDPACK_ID HAVING SUM(DISC_QTY) > 0 )OOBD
ON OOBD.OA_BRANDPACK_ID = OOAB.OA_BRANDPACK_ID
INNER JOIN ORDR_PO_BRANDPACK OPB ON OOAB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID
INNER JOIN ORDR_PURCHASE_ORDER PO ON PO.PO_REF_NO = OPB.PO_REF_NO
WHERE (ISNULL(OOAB.AGREE_DISC_QTY,0) + ISNULL(OOAB.PROG_DISC_QTY,0) + ISNULL(OOAB.OTHER_DISC_QTY,0)) > 0
AND (ISNULL(OOAB.AGREE_DISC_QTY,0) + ISNULL(OOAB.PROG_DISC_QTY,0) + ISNULL(OOAB.OTHER_DISC_QTY,0)) <> OOBD.DISC_QTY 
AND YEAR(PO.PO_REF_DATE) >= 2009
)C;
OPEN CURSOR_BRANDPACK_ID;
FETCH NEXT FROM CURSOR_BRANDPACK_ID INTO @V_OA_BRANDPACK_ID;
WHILE (@@FETCH_STATUS = 0)
BEGIN
exec Usp_Check_Sum_Mathching_Disc_Qty @OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID,
@DISCOUNT_TYPE = 'Other_Discount';
FETCH NEXT FROM CURSOR_BRANDPACK_ID INTO @V_OA_BRANDPACK_ID;
END
CLOSE CURSOR_BRANDPACK_ID;
DEALLOCATE CURSOR_BRANDPACK_ID;

2010-10-31 00:00:00

2010-08-01 00:00:00



EXEC Usp_Create_Temp_Invoice_Table
@DEC_START_DATE =20100801 ,
@DEC_END_DATE = 20101031

SELECT DISTRIBUTOR_ID,BRAND_ID,BRANDPACK_ID,QTY
FROM(
 SELECT PO.DISTRIBUTOR_ID,ABI.BRAND_ID,ABP.BRANDPACK_ID,(ISNULL(INV.QTY,0)/SB.SPPB_QTY)* OPB.PO_ORIGINAL_QTY AS QTY
	      FROM Nufarm.dbo.AGREE_BRAND_INCLUDE ABI 
	      INNER JOIN Nufarm.DBO.AGREE_BRANDPACK_INCLUDE ABP ON ABI.AGREE_BRAND_ID = ABP.AGREE_BRAND_ID
	      INNER JOIN Nufarm.dbo.ORDR_PO_BRANDPACK OPB ON OPB.BRANDPACK_ID = ABP.BRANDPACK_ID
	      INNER JOIN Nufarm.dbo.ORDR_PURCHASE_ORDER PO
	      ON PO.PO_REF_NO = OPB.PO_REF_NO INNER JOIN Nufarm.dbo.ORDR_ORDER_ACCEPTANCE OOA
	      ON OOA.PO_REF_NO = PO.PO_REF_NO
	      
 	      INNER JOIN ORDR_OA_BRANDPACK OOAB ON OOA.OA_ID = OOAB.OA_ID
	      INNER JOIN SPPB_BRANDPACK SB ON SB.OA_BRANDPACK_ID = OOAB.OA_BRANDPACK_ID
	      INNER JOIN COMPARE_ITEM Tmbp ON OPB.BRANDPACK_ID = Tmbp.BRANDPACK_ID_DTS
	      INNER JOIN ##T_SELECT_INVOICE INV ON Tmbp.BRANDPACK_ID_ACCPAC = INV.BRANDPACK_ID
	      	    AND (PO.PO_REF_NO = INV.PONUMBER OR OOA.RUN_NUMBER = INV.REFERENCE) 
	      WHERE PO.DISTRIBUTOR_ID = SOME( 
	          			      SELECT DISTRIBUTOR_ID FROM Nufarm.DBO.DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = '01033/NI/IX/09-1L.10'
	         			     )
	      AND ABI.AGREEMENT_NO = '01033/NI/IX/09-1L.10' AND ABP.AGREEMENT_NO = '01033/NI/IX/09-1L.10'
	      AND OPB.PO_ORIGINAL_QTY > 0	
)C 
 COMPUTE SUM(QTY) 

 SELECT OPO.DISTRIBUTOR_ID,ABI.BRAND_ID,ABP.BRANDPACK_ID,(ISNULL(INVOICE.QTY,0)/SB.SPPB_QTY) * OPB.PO_ORIGINAL_QTY AS QTY
		   FROM Nufarm.dbo.AGREE_BRAND_INCLUDE ABI 
		   INNER JOIN Nufarm.DBO.AGREE_BRANDPACK_INCLUDE ABP ON ABI.AGREE_BRAND_ID = ABP.AGREE_BRAND_ID
		   INNER JOIN Nufarm.dbo.ORDR_PO_BRANDPACK OPB ON OPB.BRANDPACK_ID = ABP.BRANDPACK_ID
		   INNER JOIN Nufarm.dbo.ORDR_PURCHASE_ORDER OPO
		   ON OPO.PO_REF_NO = OPB.PO_REF_NO INNER JOIN Nufarm.dbo.ORDR_ORDER_ACCEPTANCE OOA
	           ON OOA.PO_REF_NO = OPO.PO_REF_NO
	           INNER JOIN ORDR_OA_BRANDPACK OOAB ON OOAB.OA_ID = OOA.OA_ID
	           INNER JOIN SPPB_BRANDPACK SB ON OOAB.OA_BRANDPACK_ID = SB.OA_BRANDPACK_ID
		   LEFT OUTER JOIN (
		                     SELECT INV.PONUMBER,INV.REFERENCE,Tmbp.BRANDPACK_ID_DTS AS BRANDPACK_ID,INV.QTY 
		                     FROM ##T_SELECT_INVOICE INV INNER JOIN COMPARE_ITEM Tmbp 
		                     ON INV.BRANDPACK_ID =  Tmbp.BRANDPACK_ID_ACCPAC 
		    	            )INVOICE
		   ON ABP.BRANDPACK_ID = INVOICE.BRANDPACK_ID
		   AND (OOA.PO_REF_NO = INVOICE.PONUMBER OR OOA.RUN_NUMBER = INVOICE.REFERENCE)
		   WHERE OPO.DISTRIBUTOR_ID 
		   = SOME( 
		          SELECT DISTRIBUTOR_ID FROM Nufarm.DBO.DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = '01033/NI/IX/09-1L.10'
		          )
		   AND ABI.AGREEMENT_NO = '01033/NI/IX/09-1L.10' AND ABP.AGREEMENT_NO = '01033/NI/IX/09-1L.10'
		   AND OPB.PO_ORIGINAL_QTY > 0

SELECT * FROM ##T_SELECT_INVOICE ORDER BY INVDATE DESC


111307.672999

exec Usp_Get_Changed_Invoice_By_Brand_ID @AGREEMENT_NO = '01033/NI/IX/09-1L.10', @FLAG = 'Q1'
SELECT * FROM ACCRUED_HEADER WHERE AGREEMENT_NO = '01033/NI/IX/09-1L.10' AND FLAG = 'Q1' AND BRAND_ID = '00601'


--delete from syst_menu

---PROCEDURE UNTUK MEMVIEW DATA_USER
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Sp_GetViewUser' AND TYPE = 'P')
DROP PROCEDURE Sp_GetViewUser
GO
CREATE PROCEDURE Sp_GetViewUser
AS
SELECT SYST_USERNAME.[USER_ID],SYST_USERNAME.[PASSWORD],SYST_USERNAME.LAST_LOGIN,
SYST_USERNAME.LAST_LOGOUT,SYST_USERNAME.LAST_FORM,SYST_USERNAME.STATUS,SYST_USERNAME.ISADMIN
FROM SYST_USERNAME
 ORDER BY SYST_USERNAME.[USER_ID]
GO
-------------------------------------------------------------------------
---------------------------------------------------------------------------
--PROCEDURE UNTUK MEMVIEW DATA_SMS LOG
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_GetView_LOG_MESSAGE' AND TYPE = 'P')
DROP PROCEDURE Usp_GetView_LOG_MESSAGE
GO
CREATE PROCEDURE Usp_GetView_LOG_MESSAGE
@FROM_DATE DATETIME,
@UNTIL_DATE DATETIME,
@STATUS_SENT BIT
AS
SELECT TransactionID,CONTACT_PERSON,CONTACT_MOBILE,ORIGIN_COMPANY,MESSAGE,STATUS_SENT,SENT_DATE,SENT_BY FROM SMS_TABLE WHERE SENT_DATE >= @FROM_DATE AND SENT_DATE <= @UNTIL_DATE
AND STATUS_SENT = @STATUS_SENT
GO
-----------------------------------------------------------------------------------
---PROCEDURE UNTUK MEMVIEW SMS_OA_DIS FORM SMS_REMAINDING
IF EXISTS(SELECT NAME FROM.DBO.SYSOBJECTS WHERE NAME = 'Usp_GetView_OA_SMS' AND TYPE = 'P')
DROP PROCEDURE Usp_GetView_OA_SMS
GO
CREATE PROCEDURE Usp_GetView_OA_SMS
AS
SELECT ORDR_ORDER_ACCEPTANCE.OA_ID,ORDR_ORDER_ACCEPTANCE.OA_DATE,ORDR_PURCHASE_ORDER.DISTRIBUTOR_ID,DIST_DISTRIBUTOR.DISTRIBUTOR_NAME
FROM ORDR_ORDER_ACCEPTANCE,ORDR_PURCHASE_ORDER,DIST_DISTRIBUTOR
WHERE ORDR_ORDER_ACCEPTANCE.PO_REF_NO = ORDR_PURCHASE_ORDER.PO_REF_NO AND ORDR_PURCHASE_ORDER.DISTRIBUTOR_ID = DIST_DISTRIBUTOR.DISTRIBUTOR_ID
AND ORDR_ORDER_ACCEPTANCE.OA_ID NOT IN(SELECT OA_BRANDPACK_ID FROM SMS_TABLE WHERE OA_BRANDPACK_ID LIKE + '' + ORDR_ORDER_ACCEPTANCE.OA_ID + '%')
GO
--EXEC Usp_GetView_OA_SMS
-------------------------------------------------------------------------------------
--PROCEDURE UNTUK MEMVIEW_PO_YANG BELUM DI SEND_SMS
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_GetView_PO_SMS' AND TYPE = 'P')
DROP PROCEDURE Usp_GetView_PO_SMS
GO
CREATE PROCEDURE Usp_GetView_PO_SMS
AS
SELECT ORDR_PURCHASE_ORDER.PO_REF_NO,ORDR_PURCHASE_ORDER.PO_REF_DATE,ORDR_PURCHASE_ORDER.DISTRIBUTOR_ID,DIST_DISTRIBUTOR.DISTRIBUTOR_NAME
FROM ORDR_PURCHASE_ORDER,DIST_DISTRIBUTOR
WHERE ORDR_PURCHASE_ORDER.DISTRIBUTOR_ID = DIST_DISTRIBUTOR.DISTRIBUTOR_ID
 AND ORDR_PURCHASE_ORDER.PO_REF_NO NOT IN(SELECT PO_BRANDPACK_ID FROM SMS_TABLE WHERE PO_BRANDPACK_ID LIKE + '' + ORDR_PURCHASE_ORDER.PO_REF_NO + '%')
GO
EXEC Usp_GetView_PO_SMS
--------------------------------------------------------------------------------------------
--PROCEDURE UNTUK MENGINSERT DATA USER_USERNAME
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Sp_Insert_SYST_USERNAME' AND TYPE = 'P')
DROP PROCEDURE Sp_Insert_SYST_USERNAME
GO
CREATE PROCEDURE Sp_Insert_SYST_USERNAME
@USER_ID VARCHAR(15),
@PASSWORD VARCHAR(30),
@CREATE_BY VARCHAR(30),
@O_MESSAGE VARCHAR(100)OUTPUT

AS
BEGIN
SET @O_MESSAGE = ''
IF (SELECT COUNT ([USER_ID]) FROM SYST_USERNAME WHERE [USER_ID] = @USER_ID) > 0
   BEGIN
	SET @O_MESSAGE = 'User Name has existed' 
	RETURN(0)
   END		
INSERT INTO SYST_USERNAME([USER_ID],[PASSWORD],CREATE_DATE,CREATE_BY,STATUS,ISADMIN)
VALUES(@USER_ID,@PASSWORD,GETDATE(),@CREATE_BY,0,0)
END
GO

-----------------------------------------------------------------------------
--PROCEDURE UNTUK MENGUPDATE USER_USERNAME
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Sp_Update_SYST_USERNAME' AND TYPE = 'P')
DROP PROCEDURE Sp_Update_SYST_USERNAME
GO
CREATE PROCEDURE Sp_Update_SYST_USERNAME
@USER_ID VARCHAR(15),
@PASSWORD VARCHAR(30),
@MODIFY_BY VARCHAR(30)
AS
UPDATE SYST_USERNAME
SET [USER_ID] = @USER_ID,[PASSWORD] = @PASSWORD,MODIFY_BY = @MODIFY_BY,
MODIFY_DATE = GETDATE() WHERE [USER_ID] = @USER_ID
GO
------------------------------------------------------------------------
--PROCEDURE UNTUK LOGOUT USER
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Sp_Logout_USER' AND TYPE = 'P')
DROP PROCEDURE Sp_Logout_USER
GO
CREATE PROCEDURE Sp_Logout_USER
@USER_ID VARCHAR(30),
@LAST_FORM VARCHAR(30)
AS
UPDATE SYST_USERNAME SET LAST_LOGOUT =  CURRENT_TIMESTAMP,LAST_FORM = @LAST_FORM,STATUS = 0
WHERE [USER_ID] = @USER_ID 
GO
-------------------------------------------------------------------------------
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Sp_Login_USER' AND TYPE = 'P')
DROP PROCEDURE Sp_Login_USER
GO
CREATE PROCEDURE Sp_Login_USER
@USER_ID VARCHAR(30),
@PASSWORD VARCHAR(30),
@O_PASSWORD VARCHAR(30)OUTPUT,
@O_MESSAGE VARCHAR(100) OUTPUT,
@O_GETDATE DATETIME OUTPUT,
@O_ISADMIN BIT OUTPUT
AS
BEGIN
SET @O_MESSAGE = ''
IF (SELECT COUNT([USER_ID]) FROM SYST_USERNAME WHERE [USER_ID] = @USER_ID) = 0
    BEGIN
	SET @O_MESSAGE = 'User Name does not exist'
	RETURN(0)
    END 
SET @O_PASSWORD = (SELECT [PASSWORD] FROM SYST_USERNAME WHERE [USER_ID] = @USER_ID)
IF (@PASSWORD != @O_PASSWORD)
    BEGIN
	SET @O_MESSAGE = 'Incorect USER_ID or Password'
	RETURN(0)
    END 
SET @O_ISADMIN = (SELECT ISADMIN FROM SYST_USERNAME WHERE [USER_ID] = @USER_ID)
UPDATE SYST_USERNAME SET LAST_LOGIN =  CURRENT_TIMESTAMP,STATUS = 1  WHERE [USER_ID] = @USER_ID
SET @O_GETDATE = (SELECT GETDATE())
END
GO

--------------------------------------------------------------------------
--PRCEDURE UNTUK MENDELETE DATA USER
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Sp_Delete_USER' AND TYPE = 'P')
DROP PROCEDURE Sp_Delete_USER
GO
CREATE PROCEDURE Sp_Delete_USER
@USER_ID VARCHAR(30),
@O_MESSAGE VARCHAR(100) OUTPUT
AS
BEGIN
    SET @O_MESSAGE = ''
    IF (SELECT STATUS FROM SYST_USERNAME WHERE [USER_ID] = @USER_ID) > 0
	BEGIN
	    SET @O_MESSAGE = 'User is still using system'
	    RETURN(0)
	END
     DELETE FROM SYST_PRIVILEGE WHERE [USER_ID] = @USER_ID
     DELETE FROM SYST_USERNAME WHERE [USER_ID] = @USER_ID
END
GO

/*
BEGIN
DECLARE @V_FORM_ID VARCHAR(30),@V_FORM_NAME VARCHAR(30)
DECLARE CURSOR_FORM CURSOR FOR
SELECT * FROM SYST_MENU
OPEN CURSOR_FORM
FETCH NEXT FROM CURSOR_FORM INTO @V_FORM_ID,@V_FORM_NAME
WHILE (@@FETCH_STATUS = 0)
	BEGIN
 		PRINT 'FORM_ID = ' + @V_FORM_ID
		PRINT 'FORM_NAME = ' + @V_FORM_NAME
		FETCH NEXT FROM CURSOR_FORM INTO @V_FORM_ID,@V_FORM_NAME
	END
CLOSE CURSOR_FORM
DEALLOCATE CURSOR_FORM
END
GO

BEGIN
INSERT INTO SYST_MENU(FORM_ID,FORM_NAME)
VALUES('DST01','Distributor')

INSERT INTO SYST_MENU(FORM_ID,FORM_NAME)
VALUES('DST02','Agreement')

INSERT INTO SYST_MENU(FORM_ID,FORM_NAME)
VALUES('DST03','DistributorAgreement')

INSERT INTO SYST_MENU(FORM_ID,FORM_NAME)
VALUES('DST04','AgreementRelation')

INSERT INTO SYST_MENU(FORM_ID,FORM_NAME)
VALUES('DST05','DistributorHistory')

INSERT INTO SYST_MENU(FORM_ID,FORM_NAME)
VALUES('DST06','Region')

INSERT INTO SYST_MENU(FORM_ID,FORM_NAME)
VALUES('DST07','Project')

INSERT INTO SYST_MENU(FORM_ID,FORM_NAME)
VALUES('MRKT01','Program')

INSERT INTO SYST_MENU(FORM_ID,FORM_NAME)
VALUES('MRKT02','Marketing_Program')

INSERT INTO SYST_MENU(FORM_ID,FORM_NAME)
VALUES('MRKT03','Program_BrandPack')

INSERT INTO SYST_MENU(FORM_ID,FORM_NAME)
VALUES('MRKT04','Distributor_Include')

INSERT INTO SYST_MENU(FORM_ID,FORM_NAME)
VALUES('MRKTO5','Stepping_Discount')

INSERT INTO SYST_MENU(FORM_ID,FORM_NAME)
VALUES('ORDR01','Acceptance')

INSERT INTO SYST_MENU(FORM_ID,FORM_NAME)
VALUES('ORDR02','OA_BranPack')

INSERT INTO SYST_MENU(FORM_ID,FORM_NAME)
VALUES('ORDR03','OrderAcceptance')

INSERT INTO SYST_MENU(FORM_ID,FORM_NAME)
VALUES('ORDR04','PO')

INSERT INTO SYST_MENU(FORM_ID,FORM_NAME)
VALUES('ORDR05','Purchase_Order')

INSERT INTO SYST_MENU(FORM_ID,FORM_NAME)
VALUES('ST','SettingGrid')

END
*/

-----------------------------------------------------------------------------
--PROCEDURE UNTUK MENGAKSES PRIVILEGE
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Sp_Get_User_Privilege' AND TYPE = 'P')
DROP PROCEDURE Sp_Get_User_Privilege
GO
CREATE PROCEDURE Sp_Get_User_Privilege
@USER_ID VARCHAR(30)
AS
SELECT SYST_PRIVILEGE.[USER_ID],SYST_MENU.FORM_ID,SYST_MENU.FORM_NAME,SYST_PRIVILEGE.ALLOW_VIEW,SYST_PRIVILEGE.ALLOW_INSERT,SYST_PRIVILEGE.ALLOW_DELETE,
SYST_PRIVILEGE.ALLOW_UPDATE FROM SYST_MENU,SYST_PRIVILEGE
WHERE SYST_PRIVILEGE.FORM_ID = SYST_MENU.FORM_ID AND SYST_PRIVILEGE.[USER_ID] = @USER_ID
GO

--exec Sp_GetViewUser
--EXEC Sp_Get_User_Privilege @USER_ID = 'Nandar'
---------------------------------------------------------------------------------
--PROCEUDRE UNTUK MENDELETE SMS_TABLE
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Delete_Message' AND TYPE = 'P')
DROP PROCEDURE Usp_Delete_Message
GO
CREATE PROCEDURE Usp_Delete_Message
@ID UNIQUEIDENTIFIER
AS
BEGIN
	DELETE FROM SMS_Table WHERE [TransactionID] = CAST((@ID) AS VARCHAR(100))
END
GO

--SELECT [ID],CONTACT_PERSON,CONTACT_MOBILE,ORIGIN_COMPANY,MESSAGE,STATUS_READ,SENT_BY
--FROM SMS_TABLE WHERE STATUS_READ = 0
-------------------------------------------------------------------------------
--PROCEDURE UNTUK MENDELETE USER PRIVILEGE
--exec Sp_Select_Distributor


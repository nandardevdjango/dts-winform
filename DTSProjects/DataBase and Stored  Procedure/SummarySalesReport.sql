SET NOCOUNT ON; SET ARITHABORT OFF; SET ANSI_WARNINGS OFF ; 
IF EXISTS(SELECT [NAME] FROM TEMPDB..SYSOBJECTS WHERE [NAME] = '##T_F_R_SPPB_Administrator' AND TYPE = 'U')
 BEGIN 
 SELECT TFR.DISTRIBUTOR_NAME,GH.GON_HEADER_ID,TFR.PO_CATEGORY,TFR.PO_REF_NO,TFR.PO_REF_DATE,TFR.SHIP_TO,TFR.PRICE,TFR.SPPB_NO,TFR.SPPB_DATE,TFR.STATUS,TFR.SPPB_QTY,TFR.BALANCE,GH.GON_NO,TFR.BRANDPACK_ID,TFR.BRANDPACK_NAME,GH.GON_DATE, E_T_A = CASE WHEN GA.DAYS_RECEIPT IS NULL THEN NULL ELSE DATEADD(DAY,(1 + GA.DAYS_RECEIPT),GH.GON_DATE) END, GA.AREA,GT.TRANSPORTER_NAME,TFR.SPPB_BRANDPACK_ID,GD.GON_DETAIL_ID,GD.GON_QTY, 
 (ISNULL(GD.GON_QTY,0)/ISNULL(TFR.SPPB_QTY,0)) * PO_ORIGINAL_QTY AS SALES_QTY,GD.IsOpen,
 IsCompleted = CONVERT(BIT,(CASE WHEN (GRB.GRB_ID IS NOT NULL) THEN 1 ELSE 0 END)),
 GRB.RETURNED_GON_DATE,GAP = CASE WHEN (GRB.GRB_ID IS NOT NULL) THEN (DATEDIFF(DAY,GH.GON_DATE,GRB.RETURNED_GON_DATE)) ELSE NULL END, GD.CreatedBy,GD.CreatedDate,GD.IsUpdatedBySystem 
 FROM TEMPDB..##T_F_R_SPPB_Administrator TFR INNER JOIN GON_HEADER GH ON GH.SPPB_NO = TFR.SPPB_NO INNER JOIN GON_DETAIL GD ON GH.GON_HEADER_ID = GD.GON_HEADER_ID AND GD.SPPB_BRANDPACK_ID = TFR.SPPB_BRANDPACK_ID 
 LEFT OUTER JOIN GON_AREA GA ON GA.GON_ID_AREA = GH.GON_ID_AREA 
 LEFT OUTER JOIN GON_TRANSPORTER GT ON GT.GT_ID = GH.GT_ID 
 LEFT OUTER JOIN GON_RECEIVED_BACK GRB ON GRB.GRB_ID = GH.GON_HEADER_ID 
 END 

SELECT * FROM TEMPDB..##T_SALES_REPORT_Administrator


SELECT CLASS_NAME,BRAND_NAME,ISNULL(SUM(CASE Type WHEN 'PURCHASE_ORDER' THEN TOTAL ELSE 0 END),0) AS PURCHASE_ORDER,
ISNULL(SUM(CASE Type WHEN 'SPPB' THEN TOTAL ELSE 0 END),0) AS SPPB,ISNULL(SUM(CASE Type WHEN 'INVOICE' THEN TOTAL ELSE 0 END),0) AS INVOICE,
TOTAL_IN = ISNULL(SUM(CASE Type WHEN 'PURCHASE_ORDER' THEN TOTAL WHEN 'SPPB' THEN TOTAL WHEN 'INVOICE' THEN TOTAL ELSE 0 END),0)  FROM(
 SELECT ISNULL(PC.CLASS_NAME,'UNDEFINED_CLASS') AS CLASS_NAME,TSR.BRAND_NAME, Type = 'INVOICE',
 TOTAL = SUM(CASE WHEN (TSR.GON_QTY IS NOT NULL) THEN (TSR.SALES_QTY * TSR.PRICE) ELSE 0 END)
 FROM TEMPDB..##T_SALES_REPORT_Administrator   TSR INNER JOIN BRND_BRANDPACK BP ON BP.BRANDPACK_ID = TSR.BRANDPACK_ID 
 INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BP.BRAND_ID LEFT OUTER JOIN  
 PRODUCT_CLASS PC ON PC.BRAND_ID = BR.BRAND_ID  
WHERE TSR.GON_DATE >= '09/23/2014' AND TSR.GON_DATE <= '10/07/2014'
 GROUP BY PC.CLASS_NAME,TSR.BRAND_NAME 
UNION
SELECT ISNULL(PC.CLASS_NAME,'UNDEFINED_CLASS') AS CLASS_NAME,TSR.BRAND_NAME, Type = 'SPPB',
 TOTAL = SUM(CASE WHEN ((TSR.SPPB_QTY IS NOT NULL)AND (TSR.GON_QTY IS NULL)) THEN (TSR.SALES_QTY * PRICE) ELSE 0 END)
FROM TEMPDB..##T_SALES_REPORT_Administrator   TSR INNER JOIN BRND_BRANDPACK BP ON BP.BRANDPACK_ID = TSR.BRANDPACK_ID 
 INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BP.BRAND_ID LEFT OUTER JOIN  
 PRODUCT_CLASS PC ON PC.BRAND_ID = BR.BRAND_ID  
WHERE TSR.SPPB_DATE >= '09/23/2014' AND TSR.SPPB_DATE <= '10/07/2014'
 GROUP BY PC.CLASS_NAME,TSR.BRAND_NAME 
UNION
 SELECT ISNULL(PC.CLASS_NAME,'UNDEFINED_CLASS') AS CLASS_NAME,TSR.BRAND_NAME, Type = 'PURCHASE_ORDER',
TOTAL = SUM(CASE WHEN ((TSR.SPPB_QTY IS NULL)AND (TSR.GON_QTY IS NULL)) THEN (TSR.PO_ORIGINAL_QTY * PRICE) ELSE 0 END)
 FROM TEMPDB..##T_SALES_REPORT_Administrator   TSR INNER JOIN BRND_BRANDPACK BP ON BP.BRANDPACK_ID = TSR.BRANDPACK_ID 
 INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BP.BRAND_ID LEFT OUTER JOIN  
 PRODUCT_CLASS PC ON PC.BRAND_ID = BR.BRAND_ID  
WHERE TSR.PO_REF_DATE >= '09/23/2014' AND TSR.PO_REF_DATE <= '10/07/2014'
 GROUP BY PC.CLASS_NAME,TSR.BRAND_NAME 
)G GROUP BY CLASS_NAME,BRAND_NAME


 TOTAL_IN = SUM(CASE WHEN (TSR.GON_QTY IS NOT NULL) THEN (TSR.SALES_QTY * PRICE) ELSE 0 END) + SUM(CASE WHEN ((TSR.SPPB_QTY IS NOT NULL)AND (TSR.GON_QTY IS NULL)) THEN (TSR.SALES_QTY * PRICE) ELSE 0 END) +  
 SUM(CASE WHEN ((TSR.SPPB_QTY IS NULL)AND (TSR.GON_QTY IS NULL)) THEN (TSR.PO_ORIGINAL_QTY * PRICE) ELSE 0 END)  

 FROM TEMPDB..##T_SALES_REPORT_   TSR INNER JOIN BRND_BRANDPACK BP ON BP.BRANDPACK_ID = TSR.BRANDPACK_ID 
 INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BP.BRAND_ID LEFT OUTER JOIN  
 PRODUCT_CLASS PC ON PC.BRAND_ID = BR.BRAND_ID  
 GROUP BY PC.CLASS_NAME,TSR.BRAND_NAME 

exec sp_executesql N' SET NOCOUNT ON ; 
 SELECT CLASS_NAME,BRAND_NAME,ISNULL(SUM(CASE Type WHEN ''PURCHASE_ORDER'' THEN TOTAL ELSE 0 END),0) AS PURCHASE_ORDER,
 ISNULL(SUM(CASE Type WHEN ''SPPB'' THEN TOTAL ELSE 0 END),0) AS SPPB,ISNULL(SUM(CASE Type WHEN ''INVOICE'' THEN TOTAL ELSE 0 END),0) AS TOTAL_GON,
 TOTAL_IN = ISNULL(SUM(CASE Type WHEN ''PURCHASE_ORDER'' THEN TOTAL WHEN ''SPPB'' THEN TOTAL WHEN ''INVOICE'' THEN TOTAL ELSE 0 END),0)  FROM( 
 SELECT ISNULL(PC.CLASS_NAME,''UNDEFINED_CLASS'') AS CLASS_NAME,TSR.BRAND_NAME, Type = ''INVOICE'',
 TOTAL = SUM(CASE WHEN (TSR.GON_QTY IS NOT NULL) THEN (TSR.SALES_QTY * TSR.PRICE) ELSE 0 END) 
 FROM TEMPDB..##T_SALES_REPORT_Administrator   TSR INNER JOIN BRND_BRANDPACK BP ON BP.BRANDPACK_ID = TSR.BRANDPACK_ID 
 INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BP.BRAND_ID LEFT OUTER JOIN PRODUCT_CLASS PC ON PC.BRAND_ID = BR.BRAND_ID 
 WHERE TSR.GON_DATE >= @StartDate AND TSR.GON_DATE <= @EndDate 
 GROUP BY PC.CLASS_NAME,TSR.BRAND_NAME 
 UNION 
 SELECT ISNULL(PC.CLASS_NAME,''UNDEFINED_CLASS'') AS CLASS_NAME,TSR.BRAND_NAME, Type = ''SPPB'',
 TOTAL = SUM(CASE WHEN ((TSR.SPPB_QTY IS NOT NULL)AND (TSR.GON_QTY IS NULL)) THEN (TSR.SALES_QTY * PRICE) ELSE 0 END) 
 FROM TEMPDB..##T_SALES_REPORT_Administrator   TSR INNER JOIN BRND_BRANDPACK BP ON BP.BRANDPACK_ID = TSR.BRANDPACK_ID 
 INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BP.BRAND_ID LEFT OUTER JOIN  
 PRODUCT_CLASS PC ON PC.BRAND_ID = BR.BRAND_ID  
 WHERE TSR.SPPB_DATE >= @StartDate AND TSR.SPPB_DATE <= @StartDate 
 GROUP BY PC.CLASS_NAME,TSR.BRAND_NAME 
 UNION 
 SELECT ISNULL(PC.CLASS_NAME,''UNDEFINED_CLASS'') AS CLASS_NAME,TSR.BRAND_NAME, Type = ''PURCHASE_ORDER'',
 TOTAL = SUM(CASE WHEN ((TSR.SPPB_QTY IS NULL)AND (TSR.GON_QTY IS NULL)) THEN (TSR.PO_ORIGINAL_QTY * PRICE) ELSE 0 END) 
 FROM TEMPDB..##T_SALES_REPORT_Administrator   TSR INNER JOIN BRND_BRANDPACK BP ON BP.BRANDPACK_ID = TSR.BRANDPACK_ID 
 INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BP.BRAND_ID LEFT OUTER JOIN  
 PRODUCT_CLASS PC ON PC.BRAND_ID = BR.BRAND_ID  WHERE TSR.PO_REF_DATE >= @StartDate AND TSR.PO_REF_DATE <= @StartDate 
 GROUP BY PC.CLASS_NAME,TSR.BRAND_NAME 
 )G GROUP BY CLASS_NAME,BRAND_NAME ; ', N'@StartDate smalldatetime,@EndDate smalldatetime', @StartDate = 'Sep 29 2014 12:00AM', @EndDate = 'Oct  7 2014 12:00AM'
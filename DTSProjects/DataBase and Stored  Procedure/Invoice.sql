----------------PROCEDURE UNTUK MENGECEK PERUBAHAN TERAKHIR INVOICE YANG DI INPUT FATHUL---

--------------------PROCEDURE UNTUK MENJUMLAHKAN PO BY BRANDPACK DI BERDASARKAN INVOICE DATA---
IF EXISTS(SELECT NAME FROM [sys].[objects] WHERE NAME = 'Usp_Get_Total_Qty_BrandPack_By_Invoice' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Total_Qty_BrandPack_By_Invoice
GO
CREATE PROCEDURE Usp_Get_Total_Qty_BrandPack_By_Invoice
@AGREEMENT_NO VARCHAR(32),
@DISTRIBUTOR_ID VARCHAR(10),
@FLAG VARCHAR(2),
@START_DATE SMALLDATETIME,
@END_DATE SMALLDATETIME,
@COMPUTERNAME VARCHAR(100)
AS
 SET DEADLOCK_PRIORITY NORMAL;SET NOCOUNT ON;
DECLARE @Statement NVARCHAR(3000);
IF (SELECT AllowRules FROM RefBussinesRules WHERE CodeApp = 'RPT003') = 1
 BEGIN 
	SET @Statement = 'SELECT ABI.DISTRIBUTOR_ID,ABI.BRANDPACK_ID,ISNULL(SUM(INV.QTY),0)AS TOTAL_INVOICE,ISNULL(SUM(INV.INV_AMOUNT),0) AS TOTAL_ACTUAL_AMOUNT,
		 	  ISNULL(SUM(INV.PO_ORIGINAL_QTY),0)AS TOTAL_PO_ORIGINAL FROM Nufarm.DBO.VIEW_AGREE_BRANDPACK_INCLUDE ABI
		    	  INNER JOIN ##T_PO_Original_By_Distributor_' + @COMPUTERNAME + ' INV ' + 
	 	    	 ' ON ABI.BRANDPACK_ID = INV.BRANDPACK_ID
	 	    	  AND ABI.DISTRIBUTOR_ID = INV.DISTRIBUTOR_ID
	 	    	  WHERE ABI.AGREEMENT_NO = @V_AGREEMENT_NO AND INV.DISTRIBUTOR_ID = @V_DISTRIBUTOR_ID
	 	    	  AND ABI.DISTRIBUTOR_ID = @V_DISTRIBUTOR_ID
	            	  GROUP BY ABI.DISTRIBUTOR_ID,ABI.BRANDPACK_ID OPTION(KEEP PLAN);'
	EXECUTE Sp_executesql @statement,N'@V_DISTRIBUTOR_ID VARCHAR(10),@V_AGREEMENT_NO VARCHAR(100)',
			       @DISTRIBUTOR_ID,@AGREEMENT_NO 
 END
GO
--------------------PROCEDURE BUAT MENJUMLAHKAN TOTAL BRAND DI NI87--
IF EXISTS(SELECT NAME FROM [sys].[objects] WHERE NAME = 'Usp_Get_Total_Qty_Brand_By_Invoice' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Total_Qty_Brand_By_Invoice
GO
CREATE PROCEDURE Usp_Get_Total_Qty_Brand_By_Invoice---TANGGAL DI CONVERSI JADI DECIMAL TAHUN BULAN TANGGAL
@AGREEMENT_NO VARCHAR(32),
@START_DATE SMALLDATETIME,
@END_DATE SMALLDATETIME,
@COMPUTERNAME VARCHAR(100)
AS
--PRT003 Setting referer invoice ke referencePO di InvoiceHeader ReferencePO = 1,NomorPO = 0
SET DEADLOCK_PRIORITY NORMAL;SET NOCOUNT ON; SET ARITHABORT OFF ; SET ANSI_WARNINGS OFF ;
DECLARE @Statement NVARCHAR(3000);
IF (SELECT AllowRules FROM RefBussinesRules WHERE CodeApp = 'RPT003') = 1
BEGIN
   SET @Statement = 'SELECT DISTRIBUTOR_ID,BRAND_ID,ISNULL(SUM(QTY),0) AS TOTAL_INVOICE, ISNULL(SUM(PO_AMOUNT),0) AS PO_AMOUNT_DISTRIBUTOR,
					ISNULL(SUM(INV_AMOUNT),0) AS ACTUAL_AMOUNT_DISTRIBUTOR,ISNULL(SUM(PO_ORIGINAL_QTY),0)AS TOTAL_PO
  					FROM( SELECT PO.DISTRIBUTOR_ID,PO.BRAND_ID,PO.BRANDPACK_ID,(ISNULL(INVOICE.QTY,0)/ISNULL(PO.SPPB_QTY,0)) * PO.PO_ORIGINAL_QTY AS QTY,
					PO.PO_AMOUNT,INVOICE.INV_AMOUNT,PO.PO_ORIGINAL_QTY
					 FROM tempdb..##T_MASTER_PO_' + @COMPUTERNAME + ' PO
					 INNER JOIN (SELECT INV.PONUMBER,INV.REFERENCE,Tmbp.BRANDPACK_ID_DTS AS BRANDPACK_ID,INV.QTY,INV.INV_AMOUNT 
							  FROM ##T_SELECT_INVOICE_' + @COMPUTERNAME + ' INV INNER JOIN COMPARE_ITEM Tmbp 
							  ON INV.BRANDPACK_ID =  Tmbp.BRANDPACK_ID_ACCPAC AND INV.QTY > 0
    			       				 )INVOICE
					 ON PO.BRANDPACK_ID = INVOICE.BRANDPACK_ID
					 AND ((PO.PO_REF_NO = INVOICE.PONUMBER)OR(PO.RUN_NUMBER = INVOICE.REFERENCE))
					 WHERE PO.DISTRIBUTOR_ID = SOME( SELECT DISTRIBUTOR_ID FROM Nufarm.DBO.DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @V_AGREEMENT_NO )
					 AND PO.PO_REF_DATE >= @V_START_DATE AND PO.PO_REF_DATE <= @V_END_DATE AND PO.IncludeDPD = ''YESS''
		       )INV
		   GROUP BY DISTRIBUTOR_ID,BRAND_ID
		   OPTION(KEEP PLAN);'
EXECUTE Sp_Executesql @Statement,N'@V_START_DATE SMALLDATETIME,@V_END_DATE SMALLDATETIME,@V_AGREEMENT_NO VARCHAR(100)',
		      @START_DATE,@END_DATE,@AGREEMENT_NO 
END 
GO

exec Usp_Get_Total_Qty_Brand_By_Invoice
@AGREEMENT_NO = '1153/NI/XI/2008.16',
@START_DATE = '08/01/2016',
@END_DATE = '07/31/2017',
@COMPUTERNAME = 'NKusnandar'
--hasil
--TAZ1001000	00601	10596.000000
--TAZ1001000	006020	26200.000000
--TAZ1001000	0060200	2700.000000
--TAZ1001000	00604	2512.000000
--TAZ1001000	00681	NULL


-------------------------------------------------------------------------------------------------
----------------------------PROCEDURE UNTUK MENGECEK PERUBAHAN DATA INVOICE BERDASAR BRAND------

IF EXISTS(SELECT NAME FROM [sys].[objects] WHERE NAME = 'Usp_Get_Changed_Invoice_By_Brand_ID' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Changed_Invoice_By_Brand_ID
GO
CREATE PROCEDURE Usp_Get_Changed_Invoice_By_Brand_ID         
@AGREEMENT_NO VARCHAR(32),
@FLAG VARCHAR(2),
@START_DATE SMALLDATETIME,
@END_DATE SMALLDATETIME,
@COMPUTERNAME VARCHAR(100)
AS
--PRT003 Setting referer invoice ke referencePO di InvoiceHeader ReferencePO = 1,NomorPO = 0
DECLARE @Stmt nVARCHAR(1000);
SET DEADLOCK_PRIORITY NORMAL;SET NOCOUNT ON; SET ARITHABORT OFF ; SET ANSI_WARNINGS OFF ;
IF (SELECT AllowRules FROM RefBussinesRules WHERE CodeApp = 'RPT003') = 1
BEGIN
SET @Stmt = 'IF EXISTS(SELECT * FROM ( 	     
					SELECT ACH.DISTRIBUTOR_ID,ACH.BRAND_ID,ACH.TARGET,ISNULL(INV.TOTAL_INVOICE,0)AS TOTAL_INVOICE,INV.PO_AMOUNT_DISTRIBUTOR,
					INV.INV_AMOUNT_DISTRIBUTOR
		  			FROM Nufarm.DBO.ACCRUED_HEADER ACH
		  			INNER JOIN Tempdb..##T_Agreement_Brand_' + @COMPUTERNAME + ' INV
		  			ON ACH.BRAND_ID = INV.BRAND_ID AND ACH.DISTRIBUTOR_ID = INV.DISTRIBUTOR_ID  
		  			WHERE ACH.AGREEMENT_NO = @V_AGREEMENT_NO AND ACH.ACTUAL_DISTRIBUTOR <> CAST((ISNULL(INV.TOTAL_INVOICE,0))AS DECIMAL(18,3)) AND ACH.FLAG = @V_FLAG
				      )C)
	     BEGIN 
	     SELECT ACH.DISTRIBUTOR_ID,ACH.BRAND_ID,ACH.TARGET,ISNULL(INV.TOTAL_INVOICE,0)AS TOTAL_INVOICE,INV.PO_AMOUNT_DISTRIBUTOR,INV.ACTUAL_AMOUNT_DISTRIBUTOR,ACH.TARGET_FM,ACH.TARGET_PL,INV.TOTAL_PO
		FROM Nufarm.DBO.ACCRUED_HEADER ACH
		LEFT OUTER JOIN Tempdb..##T_Agreement_Brand_' + @COMPUTERNAME + ' INV
		ON ACH.BRAND_ID = INV.BRAND_ID AND ACH.DISTRIBUTOR_ID = INV.DISTRIBUTOR_ID  
		WHERE ACH.AGREEMENT_NO = @V_AGREEMENT_NO AND ACH.FLAG = @V_FLAG ;
	     END' ;
    EXECUTE Sp_executesql @Stmt,N'@V_AGREEMENT_NO VARCHAR(100),@V_FLAG VARCHAR(2)',
				       @AGREEMENT_NO,@FLAG

END
GO 

--exec Usp_Get_Changed_Invoice_By_Brand_ID @AGREEMENT_NO = '1100/NI/X/2008-200ML.12',@FLAG = 'Q1',
--@START_DATE = '08/01/2012',@END_DATE  = '10/31/2012',@COMPUTERNAME = 'IDNH2Q742S'

--exec Usp_Get_Total_Qty_Brand_By_Invoice @DEC_START_DATE = '20090901', @DEC_END_DATE = '20091130', @AGREEMENT_NO = '00412/NI/III/2009-1L.09', 
--@START_DATE = 'Sep  1 2009 12:00AM', @END_DATE = 'Nov 30 2009 12:00AM'

----------------------PROCEDURE UNTUK MENGECEK PERUBAHAN INVOICE BERDASARKAN BRANDPACK-----

IF EXISTS(SELECT NAME FROM [sys].[objects] WHERE NAME = 'Usp_Get_Changed_Invoice_By_BrandPack_ID' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Changed_Invoice_By_BrandPack_ID
GO
CREATE PROCEDURE Usp_Get_Changed_Invoice_By_BrandPack_ID
@AGREEMENT_NO VARCHAR(32),
@DISTRIBUTOR_ID VARCHAR(10),
@FLAG VARCHAR(2),
@START_DATE SMALLDATETIME,
@END_DATE SMALLDATETIME,
@COMPUTERNAME VARCHAR(100)
AS
--PRT003 Setting referer invoice ke referencePO di InvoiceHeader ReferencePO = 1,NomorPO = 0
SET DEADLOCK_PRIORITY NORMAL;SET NOCOUNT ON;
DECLARE @Statement NVARCHAR(3000) ;

IF (SELECT AllowRules FROM RefBussinesRules WHERE CodeApp = 'RPT003') = 1
BEGIN
SET @Statement = 'IF EXISTS(SELECT ACD.ACHIEVEMENT_ID,ACD.BRANDPACK_ID,ACD.TOTAL_ACTUAL,ACD.DISC_QTY,ACD.RELEASE_QTY,ACD.LEFT_QTY,ACD.CAN_RELEASE,
				  ISNULL(INV.TOTAL_INVOICE,0)AS TOTAL_INVOICE,ISNULL(INV.TOTAL_PO_ORIGINAL,0) AS TOTAL_PO_ORIGINAL
				  FROM Nufarm.DBO.ACCRUED_DETAIL ACD INNER JOIN Nufarm.DBO.ACCRUED_HEADER ACH ON ACD.ACHIEVEMENT_ID = ACH.ACHIEVEMENT_ID 
				  INNER JOIN Tempdb..##T_Agreement_BrandPack_' + @COMPUTERNAME + ' INV
				  ON ACD.BRANDPACK_ID = INV.BRANDPACK_ID
				  AND ACH.DISTRIBUTOR_ID = INV.DISTRIBUTOR_ID
				  WHERE ACH.AGREEMENT_NO = @V_AGREEMENT_NO
				  AND ACH.DISTRIBUTOR_ID = @V_DISTRIBUTOR_ID AND ACH.FLAG = @V_FLAG AND ACD.TOTAL_ACTUAL <> CAST((ISNULL(INV.TOTAL_INVOICE,0))AS DECIMAL(18,3))) 
			BEGIN
			SELECT ACD.ACHIEVEMENT_ID,ACD.BRANDPACK_ID,ACD.TOTAL_ACTUAL,ACD.DISC_QTY,ACD.RELEASE_QTY,ACD.LEFT_QTY,ACD.CAN_RELEASE,
				  ISNULL(INV.TOTAL_INVOICE,0)AS TOTAL_INVOICE,ISNULL(INV.TOTAL_PO_ORIGINAL,0) AS TOTAL_PO_ORIGINAL,ISNULL(INV.TOTAL_ACTUAL_AMOUNT,0)AS TOTAL_ACTUAL_AMOUNT
				  FROM Nufarm.DBO.ACCRUED_DETAIL ACD INNER JOIN Nufarm.DBO.ACCRUED_HEADER ACH ON ACD.ACHIEVEMENT_ID = ACH.ACHIEVEMENT_ID 
				  LEFT OUTER JOIN Tempdb..##T_Agreement_BrandPack_' + @COMPUTERNAME + ' INV
				  ON ACD.BRANDPACK_ID = INV.BRANDPACK_ID
				  AND ACH.DISTRIBUTOR_ID = INV.DISTRIBUTOR_ID
				  WHERE ACH.AGREEMENT_NO = @V_AGREEMENT_NO
				  AND ACH.DISTRIBUTOR_ID = @V_DISTRIBUTOR_ID AND ACH.FLAG = @V_FLAG ;
			 END';
EXECUTE sp_executesql @Statement,N'@V_DISTRIBUTOR_ID VARCHAR(10),@V_AGREEMENT_NO VARCHAR(40),@V_FLAG VARCHAR(2)',
				   @DISTRIBUTOR_ID,@AGREEMENT_NO,@FLAG
END
GO
-----------------------------------------------------------------------------------------------------------------
IF EXISTS(SELECT NAME FROM [sys].[objects] WHERE NAME = 'Usp_Create_Temp_Date_Invoice' AND TYPE = 'P')
   DROP PROCEDURE Usp_Create_Temp_Date_Invoice
GO
CREATE PROCEDURE Usp_Create_Temp_Date_Invoice
@I_START_DATE VARCHAR(20),
@I_END_DATE VARCHAR(20),
@I_UserName VARCHAR(100)
AS
SET NOCOUNT ON;
SELECT START_DATE = @I_START_DATE,END_DATE = @I_END_DATE,UserName = @I_UserName INTO  ##T_START_DATE;
GO
------------------------------------PROCEDURE UNTUK MEMVIEW INVOICE----------------
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Get_Invoice' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Invoice
GO
--CREATE PROCEDURE Usp_Get_Invoice
--@START_DATE  SMALLDATETIME,
--@END_DATE SMALLDATETIME,
--@DISTRIBUTOR_ID VARCHAR(10),
--@DEC_START_DATE NUMERIC(9,0),
--@DEC_END_DATE NUMERIC(9,0)
----@MESSAGE VARCHAR(100) OUTPUT
--AS
--SET NOCOUNT ON; SET ARITHABORT OFF ; SET ANSI_WARNINGS OFF ;
-------------------------------------------------------------------------------
----PRT003 Setting referer invoice ke referencePO di InvoiceHeader ReferencePO = 1,NomorPO = 0
--IF (SELECT AllowRules FROM RefBussinesRules WHERE CodeApp = 'RPT003') = 1
--BEGIN
--	IF (@DISTRIBUTOR_ID IS NOT NULL)
--	   BEGIN
--		SELECT PO.REGIONAL_AREA,PO.TERRITORY_AREA,PO.DISTRIBUTOR_ID,PO.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_DATE,
--	        PO.OA_ID AS OA_REF_NO,PO.BRANDPACK_ID,PO.BRANDPACK_NAME,PO.PO_ORIGINAL_QTY,(INV.QTY/ISNULL(OOBD.SPPB_QTY,0)) * PO.PO_ORIGINAL_QTY AS INVQTY,PO.CREATED_PO_BY,
--		INV.INVNUMBER AS INVOICE_NUMBER,INV.INVDATE,
--	        INV.QTY AS TOTAL_SHIPMENT,INV.AUDTUSER AS CREATED_INVOICE_BY,DATENAME(MONTH,INV.INVDATE)AS [MONTH]
--		FROM  TEMPDB..##T_Invoce_PO PO
----	   	    (
----	      		SELECT REG.REGIONAL_AREA,TER.TERRITORY_AREA,PO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_REF_DATE AS PO_DATE,
----	                OOA.RUN_NUMBER,OOA.OA_ID,OPB.PO_BRANDPACK_ID,OOAB.OA_BRANDPACK_ID,OPB.BRANDPACK_ID,BB.BRANDPACK_NAME,
----	      		OPB.PO_ORIGINAL_QTY,OPB.CREATE_BY AS CREATED_PO_BY
----	     		FROM Nufarm.dbo.ORDR_PURCHASE_ORDER PO INNER JOIN Nufarm.dbo.ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = PO.PO_REF_NO
---- 			INNER JOIN Nufarm.dbo.ORDR_ORDER_ACCEPTANCE OOA ON OOA.PO_REF_NO = PO.PO_REF_NO
----            INNER JOIN ORDR_OA_BRANDPACK OOAB ON OOAB.OA_ID = OOA.OA_ID AND OOAB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID
----	      		INNER JOIN Nufarm.dbo.BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID
----	      		INNER JOIN Nufarm.dbo.DIST_DISTRIBUTOR DR ON PO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
----                        INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
----                        INNER JOIN DIST_REGIONAL REG ON REG.REGIONAL_ID = TER.REGIONAL_ID
----	     	    )PO
--		LEFT OUTER JOIN(
--	                         SELECT INV.PONUMBER,INV.INVNUMBER,INV.REFERENCE,Tmbp.BRANDPACK_ID_DTS AS BRANDPACK_ID,INV.QTY,INV.AUDTUSER
--                                 ,CAST( '' + SUBSTRING(CAST(INV.INVDATE AS VARCHAR(20)),5,2) + 
--			  	 '/' + RIGHT(CAST(INV.INVDATE AS VARCHAR(20)),2) +  '/' + LEFT(CAST(INV.INVDATE AS VARCHAR(20)),4)
--				 AS SMALLDATETIME)AS INVDATE
--			         FROM COMPARE_ITEM Tmbp INNER JOIN ##T_SELECT_INVOICE INV
--	                         ON Tmbp.BRANDPACK_ID_ACCPAC = INV.BRANDPACK_ID
--                                 WHERE INV.QTY IS NOT NULL AND INV.QTY > 0
--				 --AND INV.INVDATE <= @DEC_END_DATE AND INVDATE >= @DEC_START_DATE
--			        )INV
--	     	ON INV.BRANDPACK_ID = PO.BRANDPACK_ID AND ((INV.PONUMBER = PO.PO_REF_NO) OR (INV.REFERENCE = PO.RUN_NUMBER))
--                LEFT OUTER JOIN SPPB_BRANDPACK OOBD ON OOBD.OA_BRANDPACK_ID = PO.OA_BRANDPACK_ID 
--	      	WHERE PO.PO_DATE >= @START_DATE AND PO.PO_DATE <= @END_DATE
--               	AND PO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
--                AND PO.PO_ORIGINAL_QTY > 0;
--	   END
--	ELSE
--	   BEGIN
--		SELECT PO.REGIONAL_AREA,PO.TERRITORY_AREA,PO.DISTRIBUTOR_ID,PO.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_DATE,
--	        PO.OA_ID AS OA_REF_NO,PO.BRANDPACK_ID,PO.BRANDPACK_NAME,PO.PO_ORIGINAL_QTY,(INV.QTY/ISNULL(OOBD.SPPB_QTY,0)) * PO.PO_ORIGINAL_QTY AS INVQTY,PO.CREATED_PO_BY,
--		INV.INVNUMBER AS INVOICE_NUMBER,INV.INVDATE,
--	        INV.QTY AS TOTAL_SHIPMENT,INV.AUDTUSER AS CREATED_INVOICE_BY,DATENAME(MONTH,INV.INVDATE)AS [MONTH]
--		FROM  
--	   	    (
--	       		SELECT REG.REGIONAL_AREA,TER.TERRITORY_AREA,PO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_REF_DATE AS PO_DATE,
--	                OOA.RUN_NUMBER,OOA.OA_ID,OPB.PO_BRANDPACK_ID,OOAB.OA_BRANDPACK_ID,OPB.BRANDPACK_ID,BB.BRANDPACK_NAME,
--	      		OPB.PO_ORIGINAL_QTY,OPB.CREATE_BY AS CREATED_PO_BY
--	     		FROM Nufarm.dbo.ORDR_PURCHASE_ORDER PO INNER JOIN Nufarm.dbo.ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = PO.PO_REF_NO
-- 			INNER JOIN Nufarm.dbo.ORDR_ORDER_ACCEPTANCE OOA ON OOA.PO_REF_NO = PO.PO_REF_NO
--            INNER JOIN ORDR_OA_BRANDPACK OOAB ON OOAB.OA_ID = OOA.OA_ID AND OOAB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID
--	      		INNER JOIN Nufarm.dbo.BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID
--	      		INNER JOIN Nufarm.dbo.DIST_DISTRIBUTOR DR ON PO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
--                        INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
--                        INNER JOIN DIST_REGIONAL REG ON REG.REGIONAL_ID = TER.REGIONAL_ID
--                    )PO
--		LEFT OUTER JOIN(
--	                         SELECT INV.PONUMBER,INV.INVNUMBER,INV.REFERENCE,Tmbp.BRANDPACK_ID_DTS AS BRANDPACK_ID,INV.QTY,INV.AUDTUSER
--			          ,CAST( '' + SUBSTRING(CAST(INV.INVDATE AS VARCHAR(20)),5,2) + 
--			  	 '/' + RIGHT(CAST(INV.INVDATE AS VARCHAR(20)),2) +  '/' + LEFT(CAST(INV.INVDATE AS VARCHAR(20)),4)
--				 AS SMALLDATETIME)AS INVDATE
--                                 FROM COMPARE_ITEM Tmbp INNER JOIN ##T_SELECT_INVOICE INV
--	                         ON Tmbp.BRANDPACK_ID_ACCPAC = INV.BRANDPACK_ID
--                                 --WHERE INV.QTY IS NOT NULL AND INV.QTY > 0
--				
--			        )INV
--	     	ON INV.BRANDPACK_ID = PO.BRANDPACK_ID AND ((INV.PONUMBER = PO.PO_REF_NO) OR (INV.REFERENCE = PO.RUN_NUMBER))
--           LEFT OUTER JOIN SPPB_BRANDPACK OOBD ON OOBD.OA_BRANDPACK_ID = PO.OA_BRANDPACK_ID 
--	      	 --INV.INVDATE <= @DEC_END_DATE AND INVDATE >= @DEC_START_DATE--  --INV.INVDATE <= @DEC_END_DATE
--		--AND 
--               WHERE PO.PO_DATE >= @START_DATE AND PO.PO_DATE <= @END_DATE
--                AND EXISTS(SELECT OA_ID FROM ORDR_OA_BRANDPACK WHERE OA_ID = PO.OA_ID AND PO_BRANDPACK_ID = PO.PO_BRANDPACK_ID)
--                AND PO.PO_ORIGINAL_QTY > 0;
--	   END
--END
--ELSE
--BEGIN
--IF (@DISTRIBUTOR_ID IS NOT NULL)
-- 	BEGIN
--		SELECT PO.REGIONAL_AREA,PO.TERRITORY_AREA, PO.DISTRIBUTOR_ID,PO.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_DATE,
--	       PO.BRANDPACK_ID,PO.BRANDPACK_NAME,PO.PO_ORIGINAL_QTY,(INV.QTY/ISNULL(OOBD.SPPB_QTY,0)) * PO.PO_ORIGINAL_QTY AS INVQTY,PO.CREATED_PO_BY,
--		INV.INVNUMBER AS INVOICE_NUMBER,INV.INVDATE,
--	        INV.QTY AS TOTAL_SHIPMENT,INV.AUDTUSER AS CREATED_INVOICE_BY,DATENAME(MONTH,INV.INVDATE)AS [MONTH]
--		FROM  
--	   	    (
--	      		SELECT REG.REGIONAL_AREA,TER.TERRITORY_AREA,PO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_REF_DATE AS PO_DATE,
--	                OOA.RUN_NUMBER,OOA.OA_ID,OPB.PO_BRANDPACK_ID,OOAB.OA_BRANDPACK_ID,OPB.BRANDPACK_ID,BB.BRANDPACK_NAME,
--	      		OPB.PO_ORIGINAL_QTY,OPB.CREATE_BY AS CREATED_PO_BY
--	     		FROM Nufarm.dbo.ORDR_PURCHASE_ORDER PO INNER JOIN Nufarm.dbo.ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = PO.PO_REF_NO
-- 			INNER JOIN Nufarm.dbo.ORDR_ORDER_ACCEPTANCE OOA ON OOA.PO_REF_NO = PO.PO_REF_NO
--            INNER JOIN ORDR_OA_BRANDPACK OOAB ON OOAB.OA_ID = OOA.OA_ID AND OOAB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID
--	      		INNER JOIN Nufarm.dbo.BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID
--	      		INNER JOIN Nufarm.dbo.DIST_DISTRIBUTOR DR ON PO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
--                        INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
--                        INNER JOIN DIST_REGIONAL REG ON REG.REGIONAL_ID = TER.REGIONAL_ID
--                    )PO
--		LEFT OUTER JOIN(
--	                         SELECT INV.PONUMBER,INV.INVNUMBER,INV.REFERENCE,Tmbp.BRANDPACK_ID_DTS AS BRANDPACK_ID,INV.QTY,INV.AUDTUSER
--			           ,CAST( '' + SUBSTRING(CAST(INV.INVDATE AS VARCHAR(20)),5,2) + 
--			  	 '/' + RIGHT(CAST(INV.INVDATE AS VARCHAR(20)),2) +  '/' + LEFT(CAST(INV.INVDATE AS VARCHAR(20)),4)
--				 AS SMALLDATETIME)AS INVDATE
--                                 FROM COMPARE_ITEM Tmbp INNER JOIN ##T_SELECT_INVOICE INV
--	                         ON Tmbp.BRANDPACK_ID_ACCPAC = INV.BRANDPACK_ID
--                                 WHERE INV.QTY IS NOT NULL AND INV.QTY > 0
--				 --AND INV.INVDATE <= @DEC_END_DATE AND INVDATE >= @DEC_START_DATE
--			        )INV
--	     	ON INV.BRANDPACK_ID = PO.BRANDPACK_ID AND INV.PONUMBER = PO.PO_REF_NO 
--	            LEFT OUTER JOIN SPPB_BRANDPACK OOBD ON OOBD.OA_BRANDPACK_ID = PO.OA_BRANDPACK_ID 
--		WHERE PO.PO_DATE >= @START_DATE AND PO.PO_DATE <= @END_DATE AND PO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND PO.PO_ORIGINAL_QTY > 0;
--                
--	   END
--	ELSE
--	   BEGIN
--		SELECT PO.REGIONAL_AREA,PO.TERRITORY_AREA, PO.DISTRIBUTOR_ID,PO.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_DATE,
--	        PO.BRANDPACK_ID,PO.BRANDPACK_NAME,PO.PO_ORIGINAL_QTY,(INV.QTY/ISNULL(OOBD.SPPB_QTY,0)) * PO.PO_ORIGINAL_QTY AS INVQTY,PO.CREATED_PO_BY,
--		INV.INVNUMBER AS INVOICE_NUMBER,INV.INVDATE,
--	        INV.QTY AS TOTAL_SHIPMENT,INV.AUDTUSER AS CREATED_INVOICE_BY,DATENAME(MONTH,INV.INVDATE)AS [MONTH]
--		FROM  
--	   	    (
--	      		SELECT REG.REGIONAL_AREA,TER.TERRITORY_AREA,PO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_REF_DATE AS PO_DATE,
--	                OOA.RUN_NUMBER,OOA.OA_ID,OPB.PO_BRANDPACK_ID,OOAB.OA_BRANDPACK_ID,OPB.BRANDPACK_ID,BB.BRANDPACK_NAME,
--	      		OPB.PO_ORIGINAL_QTY,OPB.CREATE_BY AS CREATED_PO_BY
--	     		FROM Nufarm.dbo.ORDR_PURCHASE_ORDER PO INNER JOIN Nufarm.dbo.ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = PO.PO_REF_NO
-- 			INNER JOIN Nufarm.dbo.ORDR_ORDER_ACCEPTANCE OOA ON OOA.PO_REF_NO = PO.PO_REF_NO
--            INNER JOIN ORDR_OA_BRANDPACK OOAB ON OOAB.OA_ID = OOA.OA_ID AND OOAB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID
--	      		INNER JOIN Nufarm.dbo.BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID
--	      		INNER JOIN Nufarm.dbo.DIST_DISTRIBUTOR DR ON PO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
--                        INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
--                        INNER JOIN DIST_REGIONAL REG ON REG.REGIONAL_ID = TER.REGIONAL_ID
--                    )PO
--		LEFT OUTER JOIN(
--	                         SELECT INV.PONUMBER,INV.INVNUMBER,INV.REFERENCE,Tmbp.BRANDPACK_ID_DTS AS BRANDPACK_ID,INV.QTY,INV.AUDTUSER
--			           ,CAST( '' + SUBSTRING(CAST(INV.INVDATE AS VARCHAR(20)),5,2) + 
--			  	 '/' + RIGHT(CAST(INV.INVDATE AS VARCHAR(20)),2) +  '/' + LEFT(CAST(INV.INVDATE AS VARCHAR(20)),4)
--				 AS SMALLDATETIME)AS INVDATE
--                                 FROM COMPARE_ITEM Tmbp INNER JOIN ##T_SELECT_INVOICE INV
--	                         ON Tmbp.BRANDPACK_ID_ACCPAC = INV.BRANDPACK_ID
--                                 WHERE INV.QTY IS NOT NULL AND INV.QTY > 0
--                                 --AND INV.INVDATE <= @DEC_END_DATE AND INVDATE >= @DEC_START_DATE
--			        )INV
--	     	ON INV.BRANDPACK_ID = PO.BRANDPACK_ID AND INV.PONUMBER = PO.PO_REF_NO
--	      	LEFT OUTER JOIN SPPB_BRANDPACK OOBD ON OOBD.OA_BRANDPACK_ID = PO.OA_BRANDPACK_ID 
--                 
--               WHERE PO.PO_DATE >= @START_DATE AND PO.PO_DATE <= @END_DATE AND PO.PO_ORIGINAL_QTY > 0;--INV.INVDATE <= @DEC_END_DATE AND INVDATE >= @DEC_START_DATE-- --INV.INVDATE <= @DEC_END_DATE
--	 END
--END
--GO
--EXEC Usp_Create_Temp_Invoice_Table @DEC_START_DATE = 20090310,@DEC_END_DATE = 20101201

IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Get_Invoice_by_Invoice_Date' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Invoice_by_Invoice_Date
GO
--CREATE PROCEDURE Usp_Get_Invoice_by_Invoice_Date
--@DISTRIBUTOR_ID VARCHAR(10),
--@START_DATE SMALLDATETIME,
--@END_DATE SMALLDATETIME
--AS
--SET DEADLOCK_PRIORITY NORMAL ; SET NOCOUNT ON ; SET ARITHABORT OFF ;
--SET ANSI_WARNINGS OFF ;
----PRT003 Setting referer invoice ke referencePO di InvoiceHeader ReferencePO = 1,NomorPO = 0
--IF (SELECT AllowRules FROM RefBussinesRules WHERE CodeApp = 'RPT003') = 1
--BEGIN
--	IF (@DISTRIBUTOR_ID IS NOT NULL)
--	   BEGIN
--		SELECT PO.REGIONAL_AREA,PO.TERRITORY_AREA,PO.DISTRIBUTOR_ID,PO.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_DATE,
--	    PO.OA_ID AS OA_REF_NO,PO.BRANDPACK_ID,PO.BRANDPACK_NAME,(INV.QTY/ISNULL(OOBD.SPPB_QTY,0)) * PO.PO_ORIGINAL_QTY AS PO_ORIGINAL_QTY,PO.CREATED_PO_BY,
--		INV.INVNUMBER AS INVOICE_NUMBER,INV.INVDATE,
--	    INV.QTY AS TOTAL_SHIPMENT,INV.AUDTUSER AS CREATED_INVOICE_BY,DATENAME(MONTH,INV.INVDATE)AS [MONTH]
--		FROM  
--	   	    (
--			 SELECT INV.PONUMBER,INV.INVNUMBER,INV.REFERENCE,Tmbp.BRANDPACK_ID_DTS AS BRANDPACK_ID,INV.QTY,INV.AUDTUSER
--                                 ,CAST( '' + SUBSTRING(CAST(INV.INVDATE AS VARCHAR(20)),5,2) + 
--			  	 '/' + RIGHT(CAST(INV.INVDATE AS VARCHAR(20)),2) +  '/' + LEFT(CAST(INV.INVDATE AS VARCHAR(20)),4)
--				 AS SMALLDATETIME)AS INVDATE
--			         FROM COMPARE_ITEM Tmbp INNER JOIN ##T_SELECT_INVOICE INV
--	                         ON Tmbp.BRANDPACK_ID_ACCPAC = INV.BRANDPACK_ID
--                                 WHERE INV.QTY IS NOT NULL AND INV.QTY > 0
--
--	     	  )INV
--		 INNER JOIN(
--					SELECT REG.REGIONAL_AREA,TER.TERRITORY_AREA,PO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_REF_DATE AS PO_DATE,
--	                OOA.RUN_NUMBER,OOA.OA_ID,OPB.PO_BRANDPACK_ID,OOAB.OA_BRANDPACK_ID,OPB.BRANDPACK_ID,BB.BRANDPACK_NAME,
--	      			OPB.PO_ORIGINAL_QTY,OPB.CREATE_BY AS CREATED_PO_BY
--	     			FROM Nufarm.dbo.ORDR_PURCHASE_ORDER PO INNER JOIN Nufarm.dbo.ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = PO.PO_REF_NO
-- 					INNER JOIN Nufarm.dbo.ORDR_ORDER_ACCEPTANCE OOA ON OOA.PO_REF_NO = PO.PO_REF_NO
--					INNER JOIN ORDR_OA_BRANDPACK OOAB ON OOAB.OA_ID = OOA.OA_ID AND OOAB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID
--	      			INNER JOIN Nufarm.dbo.BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID
--	      			INNER JOIN Nufarm.dbo.DIST_DISTRIBUTOR DR ON PO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
--                    INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
--                    INNER JOIN DIST_REGIONAL REG ON REG.REGIONAL_ID = TER.REGIONAL_ID        
--					--AND INV.INVDATE <= @DEC_END_DATE AND INVDATE >= @DEC_START_DATE
--			     )PO
--		
--	     	ON INV.BRANDPACK_ID = PO.BRANDPACK_ID AND ((PO.INV.PONUMBER = PO_REF_NO) OR (INV.REFERENCE = PO.RUN_NUMBER))
--                	INNER JOIN SPPB_BRANDPACK OOBD ON OOBD.OA_BRANDPACK_ID = PO.OA_BRANDPACK_ID 
--	      	WHERE EXISTS(SELECT OA_ID FROM ORDR_OA_BRANDPACK WHERE OA_ID = PO.OA_ID AND PO_BRANDPACK_ID = PO.PO_BRANDPACK_ID)  
--		AND PO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND INV.INVDATE >= @START_DATE AND INV.INVDATE <= @END_DATE AND PO.PO_ORIGINAL_QTY > 0;
--              
--	   END
--	ELSE
--	   BEGIN
--		SELECT PO.REGIONAL_AREA,PO.TERRITORY_AREA,PO.DISTRIBUTOR_ID,PO.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_DATE,
--	        PO.OA_ID AS OA_REF_NO,PO.BRANDPACK_ID,PO.BRANDPACK_NAME,(INV.QTY/ISNULL(OOBD.SPPB_QTY,0)) * PO.PO_ORIGINAL_QTY AS PO_ORIGINAL_QTY,PO.CREATED_PO_BY,
--		INV.INVNUMBER AS INVOICE_NUMBER,INV.INVDATE,
--	        INV.QTY AS TOTAL_SHIPMENT,INV.AUDTUSER AS CREATED_INVOICE_BY,DATENAME(MONTH,INV.INVDATE)AS [MONTH]
--		FROM  
--	   	    (
--			 SELECT INV.PONUMBER,INV.INVNUMBER,INV.REFERENCE,Tmbp.BRANDPACK_ID_DTS AS BRANDPACK_ID,INV.QTY,INV.AUDTUSER
--                                 ,CAST( '' + SUBSTRING(CAST(INV.INVDATE AS VARCHAR(20)),5,2) + 
--			  	 '/' + RIGHT(CAST(INV.INVDATE AS VARCHAR(20)),2) +  '/' + LEFT(CAST(INV.INVDATE AS VARCHAR(20)),4)
--				 AS SMALLDATETIME)AS INVDATE
--			         FROM COMPARE_ITEM Tmbp INNER JOIN ##T_SELECT_INVOICE INV
--	                         ON Tmbp.BRANDPACK_ID_ACCPAC = INV.BRANDPACK_ID
--                                 WHERE INV.QTY IS NOT NULL AND INV.QTY > 0
--
--	     	    )INV
--		 INNER JOIN(
--	              	     SELECT REG.REGIONAL_AREA,TER.TERRITORY_AREA,PO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_REF_DATE AS PO_DATE,
--	                OOA.RUN_NUMBER,OOA.OA_ID,OPB.PO_BRANDPACK_ID,OOAB.OA_BRANDPACK_ID,OPB.BRANDPACK_ID,BB.BRANDPACK_NAME,
--	      		OPB.PO_ORIGINAL_QTY,OPB.CREATE_BY AS CREATED_PO_BY
--	     		FROM Nufarm.dbo.ORDR_PURCHASE_ORDER PO INNER JOIN Nufarm.dbo.ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = PO.PO_REF_NO
-- 			INNER JOIN Nufarm.dbo.ORDR_ORDER_ACCEPTANCE OOA ON OOA.PO_REF_NO = PO.PO_REF_NO
--            INNER JOIN ORDR_OA_BRANDPACK OOAB ON OOAB.OA_ID = OOA.OA_ID AND OOAB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID
--	      		INNER JOIN Nufarm.dbo.BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID
--	      		INNER JOIN Nufarm.dbo.DIST_DISTRIBUTOR DR ON PO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
--                        INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
--                        INNER JOIN DIST_REGIONAL REG ON REG.REGIONAL_ID = TER.REGIONAL_ID          
--				 --AND INV.INVDATE <= @DEC_END_DATE AND INVDATE >= @DEC_START_DATE
--			     )PO
--	     	ON INV.BRANDPACK_ID = PO.BRANDPACK_ID AND ((INV.PONUMBER = PO.PO_REF_NO) OR (INV.REFERENCE = PO.RUN_NUMBER))
-- 		 	INNER JOIN SPPB_BRANDPACK OOBD ON OOBD.OA_BRANDPACK_ID = PO.OA_BRANDPACK_ID 
--	      	WHERE EXISTS(SELECT OA_ID FROM ORDR_OA_BRANDPACK WHERE OA_ID = PO.OA_ID AND PO_BRANDPACK_ID = PO.PO_BRANDPACK_ID)
--                 AND INV.INVDATE >= @START_DATE AND INV.INVDATE <= @END_DATE AND PO.PO_ORIGINAL_QTY > 0;
--	   END
--END
--ELSE
--BEGIN
--IF (@DISTRIBUTOR_ID IS NOT NULL)
-- 	BEGIN
--		SELECT PO.REGIONAL_AREA,PO.TERRITORY_AREA, PO.DISTRIBUTOR_ID,PO.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_DATE,
--	        PO.OA_ID AS OA_REF_NO,PO.BRANDPACK_ID,PO.BRANDPACK_NAME,(INV.QTY/ISNULL(OOBD.SPPB_QTY,0)) * PO.PO_ORIGINAL_QTY AS PO_ORIGINAL_QTY,PO.CREATED_PO_BY,
--		INV.INVNUMBER AS INVOICE_NUMBER,INV.INVDATE,
--	        INV.QTY AS TOTAL_SHIPMENT,INV.AUDTUSER AS CREATED_INVOICE_BY,DATENAME(MONTH,INV.INVDATE)AS [MONTH]
--		FROM  
--	   	    (
--			 SELECT INV.PONUMBER,INV.INVNUMBER,INV.REFERENCE,Tmbp.BRANDPACK_ID_DTS AS BRANDPACK_ID,INV.QTY,INV.AUDTUSER
--                                 ,CAST( '' + SUBSTRING(CAST(INV.INVDATE AS VARCHAR(20)),5,2) + 
--			  	 '/' + RIGHT(CAST(INV.INVDATE AS VARCHAR(20)),2) +  '/' + LEFT(CAST(INV.INVDATE AS VARCHAR(20)),4)
--				 AS SMALLDATETIME)AS INVDATE
--			         FROM COMPARE_ITEM Tmbp INNER JOIN ##T_SELECT_INVOICE INV
--	                         ON Tmbp.BRANDPACK_ID_ACCPAC = INV.BRANDPACK_ID
--                                 WHERE INV.QTY IS NOT NULL AND INV.QTY > 0
--
--	     	    )INV
--		 INNER JOIN(
--	                   	     SELECT REG.REGIONAL_AREA,TER.TERRITORY_AREA,PO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_REF_DATE AS PO_DATE,
--	                OOA.RUN_NUMBER,OOA.OA_ID,OPB.PO_BRANDPACK_ID,OOAB.OA_BRANDPACK_ID,OPB.BRANDPACK_ID,BB.BRANDPACK_NAME,
--	      		OPB.PO_ORIGINAL_QTY,OPB.CREATE_BY AS CREATED_PO_BY
--	     		FROM Nufarm.dbo.ORDR_PURCHASE_ORDER PO INNER JOIN Nufarm.dbo.ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = PO.PO_REF_NO
-- 			INNER JOIN Nufarm.dbo.ORDR_ORDER_ACCEPTANCE OOA ON OOA.PO_REF_NO = PO.PO_REF_NO
--            INNER JOIN ORDR_OA_BRANDPACK OOAB ON OOAB.OA_ID = OOA.OA_ID AND OOAB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID
--	      		INNER JOIN Nufarm.dbo.BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID
--	      		INNER JOIN Nufarm.dbo.DIST_DISTRIBUTOR DR ON PO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
--                        INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
--                        INNER JOIN DIST_REGIONAL REG ON REG.REGIONAL_ID = TER.REGIONAL_ID     
--				 --AND INV.INVDATE <= @DEC_END_DATE AND INVDATE >= @DEC_START_DATE
--			     )PO
--	     	ON INV.BRANDPACK_ID = PO.BRANDPACK_ID AND INV.PONUMBER = PO.PO_REF_NO 
--		 	INNER JOIN SPPB_BRANDPACK OOBD ON OOBD.OA_BRANDPACK_ID = PO.OA_BRANDPACK_ID 
--	        WHERE INV.INVDATE >= @START_DATE AND INV.INVDATE <= @END_DATE AND PO.PO_ORIGINAL_QTY > 0; 
--                
--	   END
--	ELSE
--	   BEGIN
--		SELECT PO.REGIONAL_AREA,PO.TERRITORY_AREA, PO.DISTRIBUTOR_ID,PO.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_DATE,
--	        PO.OA_ID AS OA_REF_NO,PO.BRANDPACK_ID,PO.BRANDPACK_NAME,(INV.QTY/ISNULL(OOBD.SPPB_QTY,0)) * PO.PO_ORIGINAL_QTY AS PO_ORIGINAL_QTY,PO.CREATED_PO_BY,
--		INV.INVNUMBER AS INVOICE_NUMBER,INV.INVDATE,
--	        INV.QTY AS TOTAL_SHIPMENT,INV.AUDTUSER AS CREATED_INVOICE_BY,DATENAME(MONTH,INV.INVDATE)AS [MONTH]
--		FROM  
--	   	    (
--			 SELECT INV.PONUMBER,INV.INVNUMBER,INV.REFERENCE,Tmbp.BRANDPACK_ID_DTS AS BRANDPACK_ID,INV.QTY,INV.AUDTUSER
--                                 ,CAST( '' + SUBSTRING(CAST(INV.INVDATE AS VARCHAR(20)),5,2) + 
--			  	 '/' + RIGHT(CAST(INV.INVDATE AS VARCHAR(20)),2) +  '/' + LEFT(CAST(INV.INVDATE AS VARCHAR(20)),4)
--				 AS SMALLDATETIME)AS INVDATE
--			         FROM COMPARE_ITEM Tmbp INNER JOIN ##T_SELECT_INVOICE INV
--	                         ON Tmbp.BRANDPACK_ID_ACCPAC = INV.BRANDPACK_ID
--                                 WHERE INV.QTY IS NOT NULL AND INV.QTY > 0
--
--	     	    )INV
--		 INNER JOIN(
--	              	     SELECT REG.REGIONAL_AREA,TER.TERRITORY_AREA,PO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_REF_DATE AS PO_DATE,
--	                OOA.RUN_NUMBER,OOA.OA_ID,OPB.PO_BRANDPACK_ID,OOAB.OA_BRANDPACK_ID,OPB.BRANDPACK_ID,BB.BRANDPACK_NAME,
--	      		OPB.PO_ORIGINAL_QTY,OPB.CREATE_BY AS CREATED_PO_BY
--	     		FROM Nufarm.dbo.ORDR_PURCHASE_ORDER PO INNER JOIN Nufarm.dbo.ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = PO.PO_REF_NO
-- 			INNER JOIN Nufarm.dbo.ORDR_ORDER_ACCEPTANCE OOA ON OOA.PO_REF_NO = PO.PO_REF_NO
--            INNER JOIN ORDR_OA_BRANDPACK OOAB ON OOAB.OA_ID = OOA.OA_ID AND OOAB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID
--	      		INNER JOIN Nufarm.dbo.BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID
--	      		INNER JOIN Nufarm.dbo.DIST_DISTRIBUTOR DR ON PO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
--                        INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
--                        INNER JOIN DIST_REGIONAL REG ON REG.REGIONAL_ID = TER.REGIONAL_ID           
--				 --AND INV.INVDATE <= @DEC_END_DATE AND INVDATE >= @DEC_START_DATE
--			     )PO
--	     	ON INV.BRANDPACK_ID = PO.BRANDPACK_ID AND INV.PONUMBER = PO.PO_REF_NO
-- 			INNER JOIN SPPB_BRANDPACK OOBD ON OOBD.OA_BRANDPACK_ID = PO.OA_BRANDPACK_ID
--	      	WHERE INV.INVDATE >= @START_DATE AND INV.INVDATE <= @END_DATE AND PO.PO_ORIGINAL_QTY > 0; --INV.INVDATE <= @DEC_END_DATE AND INVDATE >= @DEC_START_DATE-- --INV.INVDATE <= @DEC_END_DATE
--	 END
--END
--GO

--------------------------------------------------------------------------------------
-----------------PROCEDURE BUAT BIKIN TABLE TEMPORARY INVOICE--------
IF EXISTS(SELECT NAME FROM [sys].[objects] WHERE NAME = 'Usp_Create_Temp_Invoice_Table' AND TYPE = 'P')
DROP PROCEDURE Usp_Create_Temp_Invoice_Table
GO
CREATE PROCEDURE Usp_Create_Temp_Invoice_Table
@DEC_START_DATE NUMERIC(9,0),@DEC_END_DATE NUMERIC(9,0),
@COMPUTERNAME VARCHAR(100)
AS
SET NOCOUNT ON;
DECLARE @Statement NVARCHAR(4000);

SET @Statement = 'SELECT SUBSTRING(REPLACE(RIGHT(RTRIM(INV.ITEM),14),''-'',''''),2,9)AS BRANDPACK_ID,INV.BRANDPACK_NAME,
      INV.QTYSHIPPED - INV.QTYRETURN AS QTY,RTRIM(INV.INVNUMBER)AS INVNUMBER, RTRIM(INV.PONUMBER) AS PONUMBER,RTRIM(INV.REFERENCE)AS REFERENCE,INV.INVDATE,INV.UNITPRICE, 
	 (INV.QTYSHIPPED - INV.QTYRETURN)* INV.UNITPRICE AS INV_AMOUNT,INV.AUDTUSER
      INTO tempdb..##T_SELECT_INVOICE_' + @COMPUTERNAME + ' FROM
      (
       SELECT INVH.INVDATE,INVH.INVNUMBER,INVH.PONUMBER,RTRIM(ORD1.VALUE)AS REFERENCE,INVD.ITEM,INVD.[DESC] AS BRANDPACK_NAME,INVD.QTYSHIPPED,ISNULL(CRD.QTYRETURN,0)AS QTYRETURN,INVD.UNITPRICE,INVD.AUDTUSER
       FROM NI87.dbo.OEINVH INVH INNER JOIN NI87.dbo.OEINVD INVD ON INVH.INVUNIQ = INVD.INVUNIQ
       INNER JOIN NI87.DBO.OEORDH ORD ON ORD.ORDNUMBER = INVH.ORDNUMBER
       INNER JOIN NI87.DBO.OEORDHO ORD1 ON ORD.ORDUNIQ = ORD1.ORDUNIQ
       LEFT OUTER JOIN
                  (
		   SELECT CRDH1.INVNUMBER,CRDH1.ITEM,ISNULL(SUM(CRDH1.QTYRETURN),0)AS QTYRETURN
		   FROM 
			(								
                   	  SELECT CRDH.CRDUNIQ,CRDH.INVNUMBER,CRDH.CRDDATE,CRD.ITEM,ISNULL(CRD.QTYRETURN,0)AS QTYRETURN
                          FROM NI87.DBO.OECRDH CRDH INNER JOIN 
                          (
                            SELECT CRDUNIQ,ITEM,ISNULL(SUM(QTYRETURN),0)AS QTYRETURN
                            FROM NI87.DBO.OECRDD WHERE LINETYPE = 1 AND (RTRIM(ACCTSET) = ''FG'' OR RTRIM(ACCTSET) = ''FGST'' OR RTRIM(ACCTSET) = ''FGTOLL'')
						    GROUP BY CRDUNIQ,ITEM
                           )CRD ON CRDH.CRDUNIQ = CRD.CRDUNIQ      
                         )CRDH1
                   WHERE CRDH1.CRDDATE >= ' + CAST(@DEC_START_DATE AS VARCHAR(20)) + '' +
                   ' GROUP BY CRDH1.INVNUMBER,CRDH1.ITEM    
                  )CRD
        ON CRD.INVNUMBER = INVH.INVNUMBER 
        AND CRD.ITEM = INVD.ITEM
        WHERE RTRIM(ORD1.OPTFIELD) = ''DTSREF''
        AND LEN(RTRIM(ORD1.VALUE)) >= 4
        AND INVH.INVDATE >= ' + CAST(@DEC_START_DATE AS VARCHAR(20)) + '' +
        ' AND INVH.INVDATE <= ' + CAST(@DEC_END_DATE AS VARCHAR(20)) + '' +
	'	AND (RTRIM(INVD.ACCTSET) = ''FG'' OR RTRIM(INVD.ACCTSET) = ''FGST'' OR RTRIM(INVD.ACCTSET) = ''FGTOLL'') AND INVD.LINETYPE = 1
        AND LEN(RIGHT(RTRIM(INVD.ITEM),11)) >= 11
       )INV;
   CREATE CLUSTERED INDEX IDX_T_S_I ON ##T_SELECT_INVOICE_' + @COMPUTERNAME + '(INVDATE,QTY,BRANDPACK_ID,REFERENCE);'
execute sp_executesql @stmt = @statement;
GO
--exec Usp_Create_Temp_Invoice_Table @COMPUTERNAME = 'NKusnandar',@DEC_START_DATE = 20160701,@DEC_END_DATE = 20170131


--SELECT * FROM TEMPDB..##T_SELECT_INVOICE_NKusnandar WHERE BRANDPACK_NAME LIKE '%STARLON%' AND  PONUMBER 
--= ANY(SELECT PO_REF_NO FROM ORDR_PURCHASE_ORDER WHERE DISTRIBUTOR_ID = 'SEG001IDR' AND PO_REF_DATE >= '08/01/2016' AND PO_REF_DATE <= '01/31/2017')
                             
--IF EXISTS(SELECT NAME FROM dbo.SYSOBJECTS WHERE NAME = 'Usp_Create_Temp_Invoice_Table' AND TYPE = 'P')
--DROP PROCEDURE Usp_Create_Temp_Invoice_Table
--GO
--CREATE PROCEDURE Usp_Create_Temp_Invoice_Table
--@DEC_START_DATE NUMERIC(9,0),@DEC_END_DATE NUMERIC(9,0),
--@COMPUTERNAME VARCHAR(100)
--AS
--SET NOCOUNT ON;
--DECLARE @Statement NVARCHAR(4000);
--
--SELECT SUBSTRING(REPLACE(RIGHT(RTRIM(INV.ITEM),14),'-',''),2,9)AS BRANDPACK_ID,INV.BRANDPACK_NAME,
--      INV.QTYSHIPPED - INV.QTYRETURN AS QTY,RTRIM(INV.INVNUMBER)AS INVNUMBER, RTRIM(INV.PONUMBER) AS PONUMBER,RTRIM(INV.REFERENCE)AS REFERENCE,INV.INVDATE,INV.AUDTUSER
--      INTO tempdb..##T_SELECT_INVOICE_Administrator FROM
--      (
--       SELECT INVH.INVDATE,INVH.INVNUMBER,INVH.PONUMBER,RTRIM(ORD1.VALUE)AS REFERENCE,INVD.ITEM,INVD.[DESC] AS BRANDPACK_NAME,INVD.QTYSHIPPED,ISNULL(CRD.QTYRETURN,0)AS QTYRETURN,INVD.AUDTUSER
--       FROM NI87.dbo.OEINVH INVH INNER JOIN NI87.dbo.OEINVD INVD ON INVH.INVUNIQ = INVD.INVUNIQ
--       INNER JOIN NI87.DBO.OEORDH ORD ON ORD.ORDNUMBER = INVH.ORDNUMBER
--       INNER JOIN NI87.DBO.OEORDHO ORD1 ON ORD.ORDUNIQ = ORD1.ORDUNIQ
--       LEFT OUTER JOIN
--                  (
--		   SELECT CRDH1.INVNUMBER,CRDH1.ITEM,ISNULL(SUM(CRDH1.QTYRETURN),0)AS QTYRETURN
--		   FROM 
--			(								
--                   	  SELECT CRDH.CRDUNIQ,CRDH.INVNUMBER,CRDH.CRDDATE,CRD.ITEM,ISNULL(CRD.QTYRETURN,0)AS QTYRETURN
--                          FROM NI87.DBO.OECRDH CRDH INNER JOIN 
--                          (
--                            SELECT CRDUNIQ,ITEM,ISNULL(SUM(QTYRETURN),0)AS QTYRETURN
--                            FROM NI87.DBO.OECRDD WHERE LINETYPE = 1 AND (RTRIM(ACCTSET) = 'FG' OR RTRIM(ACCTSET) = 'FGST')
--						    GROUP BY CRDUNIQ,ITEM
--                           )CRD ON CRDH.CRDUNIQ = CRD.CRDUNIQ      
--                         )CRDH1
--                   WHERE CRDH1.CRDDATE >= 20120401
--                    GROUP BY CRDH1.INVNUMBER,CRDH1.ITEM    
--                  )CRD
--        ON CRD.INVNUMBER = INVH.INVNUMBER 
--        AND CRD.ITEM = INVD.ITEM
--        WHERE RTRIM(ORD1.OPTFIELD) = 'DTSREF'
--        AND LEN(RTRIM(ORD1.VALUE)) >= 4
--        AND INVH.INVDATE >= @DEC_START_DATE
--        AND INVH.INVDATE <= @DEC_END_DATE
--		AND (RTRIM(INVD.ACCTSET) = 'FG' OR RTRIM(INVD.ACCTSET) = 'FGST') AND INVD.LINETYPE = 1
--        AND LEN(RIGHT(RTRIM(INVD.ITEM),11)) >= 11
--       )INV;
--   CREATE CLUSTERED INDEX IDX_T_S_I ON ##T_SELECT_INVOICE_Administrator(INVDATE,QTY,BRANDPACK_ID,REFERENCE);
--GO


--DECLARE @Statement NVARCHAR(3000), @COMPUTERNAME VARCHAR(100),@DEC_START_DATE NUMERIC(9,0),@DEC_END_DATE NUMERIC(9,0) ;
--SET @COMPUTERNAME = 'NANDAR';
--SET @DEC_START_DATE = 89078899;
--SET @DEC_END_DATE = 79845609;
--SET @Statement = 'HKSJDFLSDFS ' + @COMPUTERNAME + ' ' + CAST(@DEC_START_DATE AS VARCHAR(100)) + ' ' + CAST(@DEC_END_DATE AS VARCHAR(100));
--PRINT('' +@Statement) ;
--------------------------------------------------------------------------------------------
-----------------PROCEDURE BUAT TABLE_BRANDPACK UNTUK DI COCOKAN DENGAN ACCPACK---
IF EXISTS(SELECT NAME FROM [tempdb].[sys].[objects] WHERE NAME = 'Usp_Create_Temp_Table_BrandPack' AND TYPE = 'P')
DROP PROCEDURE Usp_Create_Temp_Table_BrandPack
GO
CREATE PROCEDURE Usp_Create_Temp_Table_BrandPack
AS 
SET NOCOUNT ON;
SELECT BP.BRANDPACK_NAME,BR.BRAND_NAME AS BRAND_ACCPAC,BB1.BRAND_ID AS BRAND_ID_DTS,
BP.BRANDPACK_ID AS BRANDPACK_ID_DTS,BR.BRAND_ID AS BRAND_ID_ACCPAC
,(BR.BRAND_ID + '' + CASE RTRIM(BP.UNIT)
WHEN ('LITRE')THEN
        (SELECT 'DevidedQty' = CASE 
          WHEN (P.QUANTITY >=1 AND P.QUANTITY <= 9) 
             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'L') 
          WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'L')
          WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999)
             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'L')
            END
         )  
WHEN ('MILILITRE') THEN
      (SELECT 'DevidedQty' = CASE 
       WHEN (P.QUANTITY >= 1 AND P.QUANTITY <= 9) 
             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'M') 
       WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'M')
       WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999 )
             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'M')
	END
         )  	      
WHEN ('KILOGRAM') THEN
      (SELECT 'DevidedQty' = CASE 
       WHEN (BP.DEVIDED_QUANTITY >= 0.001 AND BP.DEVIDED_QUANTITY <= 0.009)
             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G') 
       WHEN (BP.DEVIDED_QUANTITY >= 0.10 AND BP.DEVIDED_QUANTITY <= 0.09)
	     THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G')
       WHEN (BP.DEVIDED_QUANTITY >= 0.1 AND BP.DEVIDED_QUANTITY <= 0.9)
	     THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G') 
       WHEN (P.QUANTITY >=1 AND P.QUANTITY <= 9) 
             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K') 
       WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K')
       WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999)
             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K')
	END
         )  	
WHEN ('GRAM') THEN
      (SELECT 'DevidedQty' = CASE 
       WHEN (P.QUANTITY >=1 AND P.QUANTITY <= 9) 
             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G') 
       WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G')
       WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999)
             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G')
       END 
      )
WHEN('SACHET') THEN
       (SELECT 'DevidedQty' = CASE 
       WHEN (P.QUANTITY >=1 AND P.QUANTITY <= 9) 
             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'S') 
       WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'S')
       WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999)
             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'S')
       END 
      )   	
WHEN ('BAGS') THEN
      (SELECT 'DevidedQty' = CASE 
       WHEN (P.QUANTITY >=1 AND P.QUANTITY <= 9) 
             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K') 
       WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K')
       WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999)
             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K')
	END
       )  
END	
)AS BRANDPACK_ID_ACCPAC
INTO ##T_BRANDPACK
FROM(SELECT DISTINCT RIGHT(RTRIM(SEG.SEGMENT1),1) + '' + RTRIM(SEG.SEGMENT2)AS BRAND_ID,
       UPPER(RTRIM(IC1.[DESC])) AS BRAND_NAME
       FROM NI87.dbo.ICITEM SEG INNER JOIN NI87.dbo.ICCATG  IC1 ON IC1.CATEGORY = SEG.CATEGORY
       WHERE (RTRIM(SEG.ITEMBRKID) = 'FG' OR  RTRIM(SEG.ITEMBRKID) = 'FGST') AND UPPER(IC1.[DESC]) NOT LIKE '%BULK%'
       AND UPPER(IC1.[DESC]) NOT LIKE '%OTHERS%' AND UPPER(IC1.[DESC]) NOT LIKE '%GARBAGES%' AND UPPER(IC1.[DESC]) NOT LIKE '%-E' 
       AND UPPER(IC1.[DESC]) NOT LIKE '%EXPORT%' AND UPPER(IC1.[DESC]) NOT LIKE '%EXP%'
      )BR
INNER JOIN(SELECT BRAND_ID,BRAND_NAME,'BRAND_ID_ACCPAC' = CASE REPLACE(BRAND_ID,'-','')
	--ROUNDUP
		WHEN '006020' THEN '00060' WHEN '0060200' THEN '00060'
		WHEN '00604' THEN '00060' WHEN '00601' THEN '00060'
		-----CHIX--
		WHEN '01006' THEN '11006' 
                -------LUGEN---------------------------------------------
		WHEN '01001' THEN '11001'-----------------------------------------
		---GIBGRO
		WHEN '00896' THEN '30896' WHEN '00897' THEN '30897' WHEN '00898' THEN '30898'                
		--MICROTHIOL---
		WHEN '07017' THEN '77017' WHEN '07009' THEN '77009' WHEN '07008' THEN '77008' 
		--KUPROXAT
		WHEN '077001' THEN '77001'
		---BIMARON--
		WHEN '00325' THEN '00310'
                --PRODUCT EXPORT 02-2014
		WHEN '022010' THEN '22010' WHEN '022003' THEN '22003' WHEN '022034' THEN '22034'
		WHEN '022006' THEN '22006' WHEN '022012' THEN '22012' WHEN '022011' THEN '22011'
		ELSE BRAND_ID END
            FROM Nufarm.dbo.BRND_BRAND WHERE BRAND_NAME NOT LIKE 'OTHERS'
           )BB1    
ON BB1.BRAND_ID_ACCPAC = BR.BRAND_ID 
 OR SUBSTRING(BB1.BRAND_ID_ACCPAC,2,5) = BR.BRAND_ID OR RTRIM(BB1.BRAND_NAME) LIKE RTRIM(BR.BRAND_NAME) + '%'
INNER JOIN Nufarm.dbo.BRND_BRANDPACK BP ON BP.BRAND_ID = BB1.BRAND_ID
INNER JOIN Nufarm.dbo.BRND_PACK P ON BP.PACK_ID = P.PACK_ID
WHERE (BP.UNIT <> '' AND BP.UNIT IS NOT NULL)
AND (BP.IsActive = 1 AND BP.IsObsolete = 0)
AND EXISTS(SELECT BRAND_ID FROM Nufarm.dbo.AGREE_BRAND_INCLUDE WHERE BRAND_ID = BB1.BRAND_ID); 

CREATE CLUSTERED INDEX IX_T_BRANDPACK ON ##T_BRANDPACK(BRANDPACK_ID_DTS,BRANDPACK_ID_ACCPAC);
GO
----------------------------------------------------------------------------------------
IF EXISTS(SELECT NAME FROM [tempdb].[sys].[objects] WHERE NAME = 'Usp_Get_Accrued' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Accrued
GO
CREATE PROCEDURE Usp_Get_Accrued
@START_DATE SMALLDATETIME,
@END_DATE SMALLDATETIME,
@QS_TREATMENT_FLAG CHAR(1)
AS
SET NOCOUNT ON;
IF NOT EXISTS(SELECT NAME FROM [tempdb].[sys].[objects] WHERE NAME = '##T_DistAccrue' AND TYPE = 'U')
    BEGIN
	SELECT REG.REGIONAL_AREA AS REGIONAL,TER.TERRITORY_AREA AS TERRITORY,ABI.DISTRIBUTOR_ID,ABI.DISTRIBUTOR_NAME,ABI.BRAND_ID,ABI.BRAND_NAME,
	ABI.TARGET_Q1,ISNULL(ACRH.ACTUAL_Q1,0)AS ACTUAL_Q1,ISNULL(ACRH.ACHIEVEMENT_DISPROQ1/100,0)AS ACHIEVEMENT_DISPROQ1,ISNULL(ACRH.DISPROQ1/100,0)AS DISPROQ1,
	ISNULL(ACRH.BONUS_QTYQ1,0) AS BONUS_QTYQ1,ABI.TARGET_Q2,ISNULL(ACRH.ACTUAL_Q2,0)AS ACTUAL_Q2,ISNULL(ACRH.ACHIEVEMENT_DISPROQ2/100,0)AS ACHIEVEMENT_DISPROQ2,
	ISNULL(ACRH.DISPROQ2/100,0)AS DISPROQ2,ISNULL(ACRH.BONUS_QTYQ2,0)AS BONUS_QTYQ2,ABI.TARGET_Q3,ISNULL(ACRH.ACTUAL_Q3,0)AS ACTUAL_Q3,
	ISNULL(ACRH.ACHIEVEMENT_DISPROQ3/100,0)AS ACHIEVEMENT_DISPROQ3,ISNULL(ACRH.DISPROQ3/100,0)AS DISPROQ3,
	ISNULL(ACRH.BONUS_QTYQ3,0)AS BONUS_QTYQ3,ABI.TARGET_Q4,ISNULL(ACRH.ACTUAL_Q4,0)AS ACTUAL_Q4,ISNULL(ACRH.ACHIEVEMENT_DISPROQ4/100,0)AS ACHIEVEMENT_DISPROQ4,
	ISNULL(ACRH.DISPROQ4/100,0)AS DISPROQ4,ISNULL(ACRH.BONUS_QTYQ4,0)AS BONUS_QTYQ4,ABI.TARGET_S1,ISNULL(ACRH.ACTUAL_S1,0)AS ACTUAL_S1,
	ISNULL(ACRH.ACHIEVEMENT_DISPROS1/100,0)AS ACHIEVEMENT_DISPROS1,ISNULL(ACRH.DISPROS1/100,0)AS DISPROS1,
	ISNULL(ACRH.BONUS_QTYS1,0)AS BONUS_QTYS1,ABI.TARGET_S2,ISNULL(ACRH.ACTUAL_S2,0)AS ACTUAL_S2,
	ISNULL(ACRH.ACHIEVEMENT_DISPROS2/100,0)AS ACHIEVEMENT_DISPROS2,ISNULL(ACRH.DISPROS2/100,0)AS DISPROS2,
	ISNULL(ACRH.BONUS_QTYS2,0)AS BONUS_QTYS2,
	ABI.TARGET_YEAR,ISNULL(ACRH.ACTUAL_Y,0)AS ACTUAL_Y,ISNULL(ACRH.ACHIEVEMENT_DISPRO_Y/100,0)AS ACHIEVEMENT_DISPRO_Y,ISNULL(ACRH.DISPRO_Y/100,0)AS DISPRO_Y,
	ISNULL(ACRH.BONUS_QTY_Y,0)AS BONUS_QTY_Y
	FROM DIST_REGIONAL REG INNER JOIN TERRITORY TER ON REG.REGIONAL_ID = TER.REGIONAL_ID
	INNER JOIN DIST_DISTRIBUTOR DR ON TER.TERRITORY_ID = DR.TERRITORY_ID INNER JOIN VIEW_AGREE_BRAND_INCLUDE ABI ON ABI.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
	LEFT OUTER JOIN (
		    SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
		    SUM(CASE FLAG WHEN 'Q1' THEN TARGET END) AS TARGET_Q1,
		    SUM(CASE FLAG WHEN 'Q1' THEN TOTAL_ACTUAL END) AS ACTUAL_Q1,
		    SUM(CASE FLAG WHEN 'Q1' THEN ACHIEVEMENT_DISPRO END) AS ACHIEVEMENT_DISPROQ1,
		    SUM(CASE FLAG WHEN 'Q1' THEN DISPRO END) AS DISPROQ1, 
		    SUM(CASE FLAG WHEN 'Q1' THEN BONUS_QTY END) AS BONUS_QTYQ1,
	            SUM(CASE FLAG WHEN 'Q2' THEN TARGET END) AS TARGET_Q2,
		    SUM(CASE FLAG WHEN 'Q2' THEN TOTAL_ACTUAL END) AS ACTUAL_Q2,
		    SUM(CASE FLAG WHEN 'Q2' THEN ACHIEVEMENT_DISPRO END) AS ACHIEVEMENT_DISPROQ2,
		    SUM(CASE FLAG WHEN 'Q2' THEN DISPRO END) AS DISPROQ2,
		    SUM(CASE FLAG WHEN 'Q2' THEN BONUS_QTY END) AS BONUS_QTYQ2,
		    SUM(CASE FLAG WHEN 'Q3' THEN TARGET END) AS TARGET_Q3,
		    SUM(CASE FLAG WHEN 'Q3' THEN TOTAL_ACTUAL END) AS ACTUAL_Q3,
		    SUM(CASE FLAG WHEN 'Q3' THEN ACHIEVEMENT_DISPRO END) AS ACHIEVEMENT_DISPROQ3,
		    SUM(CASE FLAG WHEN 'Q3' THEN DISPRO END) AS DISPROQ3,
		    SUM(CASE FLAG WHEN 'Q3' THEN BONUS_QTY END) AS BONUS_QTYQ3,
		    SUM(CASE FLAG WHEN 'Q4' THEN TARGET END) AS TARGET_Q4,
		    SUM(CASE FLAG WHEN 'Q4' THEN TOTAL_ACTUAL END) AS ACTUAL_Q4,
	            SUM(CASE FLAG WHEN 'Q4' THEN ACHIEVEMENT_DISPRO END) AS ACHIEVEMENT_DISPROQ4,
		    SUM(CASE FLAG WHEN 'Q4' THEN DISPRO END) AS DISPROQ4,
		    SUM(CASE FLAG WHEN 'Q4' THEN BONUS_QTY END) AS BONUS_QTYQ4,
	  
		    
		    SUM(CASE FLAG WHEN 'S1' THEN TARGET END) AS TARGET_S1,
		    SUM(CASE FLAG WHEN 'S1' THEN TOTAL_ACTUAL END) AS ACTUAL_S1,
		    SUM(CASE FLAG WHEN 'S1' THEN ACHIEVEMENT_DISPRO END) AS ACHIEVEMENT_DISPROS1,
		    SUM(CASE FLAG WHEN 'S1' THEN DISPRO END) AS DISPROS1,
		    SUM(CASE FLAG WHEN 'S1' THEN BONUS_QTY END) AS BONUS_QTYS1,
		    SUM(CASE FLAG WHEN 'S2' THEN TARGET END) AS TARGET_S2,
		    SUM(CASE FLAG WHEN 'S2' THEN TOTAL_ACTUAL END) AS ACTUAL_S2,
		    SUM(CASE FLAG WHEN 'S2' THEN ACHIEVEMENT_DISPRO END) AS ACHIEVEMENT_DISPROS2,
		    SUM(CASE FLAG WHEN 'S2' THEN DISPRO END) AS DISPROS2,
		    SUM(CASE FLAG WHEN 'S2' THEN BONUS_QTY END) AS BONUS_QTYS2,
		    SUM(CASE FLAG WHEN 'Y' THEN TARGET END) AS TARGET_YEAR,
		    SUM(CASE FLAG WHEN 'Y' THEN TOTAL_ACTUAL END) AS ACTUAL_Y,
		    SUM(CASE FLAG WHEN 'Y' THEN ACHIEVEMENT_DISPRO END) AS ACHIEVEMENT_DISPRO_Y,
		    SUM(CASE FLAG WHEN 'Y' THEN DISPRO END) AS DISPRO_Y,
		    SUM(CASE FLAG WHEN 'Y' THEN BONUS_QTY END) AS BONUS_QTY_Y
	            
                   
		    FROM ACCRUED_HEADER WHERE AGREEMENT_NO = ANY(SELECT AGREEMENT_NO FROM AGREE_AGREEMENT
		         WHERE START_DATE >= @START_DATE AND END_DATE <= @END_DATE AND QS_TREATMENT_FLAG = @QS_TREATMENT_FLAG)
	           GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID 
		  )ACRH
	ON ABI.DISTRIBUTOR_ID = ACRH.DISTRIBUTOR_ID AND ABI.[ID] = ACRH.AGREE_BRAND_ID
	WHERE ABI.START_DATE >= @START_DATE AND ABI.END_DATE <= @END_DATE AND ABI.QS_TREATMENT_FLAG = @QS_TREATMENT_FLAG;
      END
ELSE
      BEGIN
	  SELECT REG.REGIONAL_AREA AS REGIONAL,TER.TERRITORY_AREA AS TERRITORY,ABI.DISTRIBUTOR_ID,ABI.DISTRIBUTOR_NAME,ABI.BRAND_ID,ABI.BRAND_NAME,
	ABI.TARGET_Q1,ISNULL(ACRH.ACTUAL_Q1,0)AS ACTUAL_Q1,ISNULL(ACRH.ACHIEVEMENT_DISPROQ1/100,0)AS ACHIEVEMENT_DISPROQ1,ISNULL(ACRH.DISPROQ1/100,0)AS DISPROQ1,
	ISNULL(ACRH.BONUS_QTYQ1,0) AS BONUS_QTYQ1,ABI.TARGET_Q2,ISNULL(ACRH.ACTUAL_Q2,0)AS ACTUAL_Q2,ISNULL(ACRH.ACHIEVEMENT_DISPROQ2/100,0)AS ACHIEVEMENT_DISPROQ2,
	ISNULL(ACRH.DISPROQ2/100,0)AS DISPROQ2,ISNULL(ACRH.BONUS_QTYQ2,0)AS BONUS_QTYQ2,ABI.TARGET_Q3,ISNULL(ACRH.ACTUAL_Q3,0)AS ACTUAL_Q3,
	ISNULL(ACRH.ACHIEVEMENT_DISPROQ3/100,0)AS ACHIEVEMENT_DISPROQ3,ISNULL(ACRH.DISPROQ3/100,0)AS DISPROQ3,
	ISNULL(ACRH.BONUS_QTYQ3,0)AS BONUS_QTYQ3,ABI.TARGET_Q4,ISNULL(ACRH.ACTUAL_Q4,0)AS ACTUAL_Q4,ISNULL(ACRH.ACHIEVEMENT_DISPROQ4/100,0)AS ACHIEVEMENT_DISPROQ4,
	ISNULL(ACRH.DISPROQ4/100,0)AS DISPROQ4,ISNULL(ACRH.BONUS_QTYQ4,0)AS BONUS_QTYQ4,ABI.TARGET_S1,ISNULL(ACRH.ACTUAL_S1,0)AS ACTUAL_S1,
	ISNULL(ACRH.ACHIEVEMENT_DISPROS1/100,0)AS ACHIEVEMENT_DISPROS1,ISNULL(ACRH.DISPROS1/100,0)AS DISPROS1,
	ISNULL(ACRH.BONUS_QTYS1,0)AS BONUS_QTYS1,ABI.TARGET_S2,ISNULL(ACRH.ACTUAL_S2,0)AS ACTUAL_S2,
	ISNULL(ACRH.ACHIEVEMENT_DISPROS2/100,0)AS ACHIEVEMENT_DISPROS2,ISNULL(ACRH.DISPROS2/100,0)AS DISPROS2,
	ISNULL(ACRH.BONUS_QTYS2,0)AS BONUS_QTYS2,
	ABI.TARGET_YEAR,ISNULL(ACRH.ACTUAL_Y,0)AS ACTUAL_Y,ISNULL(ACRH.ACHIEVEMENT_DISPRO_Y/100,0)AS ACHIEVEMENT_DISPRO_Y,ISNULL(ACRH.DISPRO_Y/100,0)AS DISPRO_Y,
	ISNULL(ACRH.BONUS_QTY_Y,0)AS BONUS_QTY_Y
	FROM DIST_REGIONAL REG INNER JOIN TERRITORY TER ON REG.REGIONAL_ID = TER.REGIONAL_ID
	INNER JOIN DIST_DISTRIBUTOR DR ON TER.TERRITORY_ID = DR.TERRITORY_ID INNER JOIN VIEW_AGREE_BRAND_INCLUDE ABI ON ABI.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
	LEFT OUTER JOIN (
		    SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
		    SUM(CASE FLAG WHEN 'Q1' THEN TARGET END) AS TARGET_Q1,
		    SUM(CASE FLAG WHEN 'Q1' THEN TOTAL_ACTUAL END) AS ACTUAL_Q1,
		    SUM(CASE FLAG WHEN 'Q1' THEN ACHIEVEMENT_DISPRO END) AS ACHIEVEMENT_DISPROQ1,
		    SUM(CASE FLAG WHEN 'Q1' THEN DISPRO END) AS DISPROQ1, 
		    SUM(CASE FLAG WHEN 'Q1' THEN BONUS_QTY END) AS BONUS_QTYQ1,
	            SUM(CASE FLAG WHEN 'Q2' THEN TARGET END) AS TARGET_Q2,
		    SUM(CASE FLAG WHEN 'Q2' THEN TOTAL_ACTUAL END) AS ACTUAL_Q2,
		    SUM(CASE FLAG WHEN 'Q2' THEN ACHIEVEMENT_DISPRO END) AS ACHIEVEMENT_DISPROQ2,
		    SUM(CASE FLAG WHEN 'Q2' THEN DISPRO END) AS DISPROQ2,
		    SUM(CASE FLAG WHEN 'Q2' THEN BONUS_QTY END) AS BONUS_QTYQ2,
		    SUM(CASE FLAG WHEN 'Q3' THEN TARGET END) AS TARGET_Q3,
		    SUM(CASE FLAG WHEN 'Q3' THEN TOTAL_ACTUAL END) AS ACTUAL_Q3,
		    SUM(CASE FLAG WHEN 'Q3' THEN ACHIEVEMENT_DISPRO END) AS ACHIEVEMENT_DISPROQ3,
		    SUM(CASE FLAG WHEN 'Q3' THEN DISPRO END) AS DISPROQ3,
		    SUM(CASE FLAG WHEN 'Q3' THEN BONUS_QTY END) AS BONUS_QTYQ3,
		    SUM(CASE FLAG WHEN 'Q4' THEN TARGET END) AS TARGET_Q4,
		    SUM(CASE FLAG WHEN 'Q4' THEN TOTAL_ACTUAL END) AS ACTUAL_Q4,
	            SUM(CASE FLAG WHEN 'Q4' THEN ACHIEVEMENT_DISPRO END) AS ACHIEVEMENT_DISPROQ4,
		    SUM(CASE FLAG WHEN 'Q4' THEN DISPRO END) AS DISPROQ4,
		    SUM(CASE FLAG WHEN 'Q4' THEN BONUS_QTY END) AS BONUS_QTYQ4,
		   
		    SUM(CASE FLAG WHEN 'S1' THEN TARGET END) AS TARGET_S1,
		    SUM(CASE FLAG WHEN 'S1' THEN TOTAL_ACTUAL END) AS ACTUAL_S1,
		    SUM(CASE FLAG WHEN 'S1' THEN ACHIEVEMENT_DISPRO END) AS ACHIEVEMENT_DISPROS1,
		    SUM(CASE FLAG WHEN 'S1' THEN DISPRO END) AS DISPROS1,
		    SUM(CASE FLAG WHEN 'S1' THEN BONUS_QTY END) AS BONUS_QTYS1,
		    SUM(CASE FLAG WHEN 'S2' THEN TARGET END) AS TARGET_S2,
		    SUM(CASE FLAG WHEN 'S2' THEN TOTAL_ACTUAL END) AS ACTUAL_S2,
		    SUM(CASE FLAG WHEN 'S2' THEN ACHIEVEMENT_DISPRO END) AS ACHIEVEMENT_DISPROS2,
		    SUM(CASE FLAG WHEN 'S2' THEN DISPRO END) AS DISPROS2,
		    SUM(CASE FLAG WHEN 'S2' THEN BONUS_QTY END) AS BONUS_QTYS2,
		    SUM(CASE FLAG WHEN 'Y' THEN TARGET END) AS TARGET_YEAR,
		    SUM(CASE FLAG WHEN 'Y' THEN TOTAL_ACTUAL END) AS ACTUAL_Y,
		    SUM(CASE FLAG WHEN 'Y' THEN ACHIEVEMENT_DISPRO END) AS ACHIEVEMENT_DISPRO_Y,
		    SUM(CASE FLAG WHEN 'Y' THEN DISPRO END) AS DISPRO_Y,
		    SUM(CASE FLAG WHEN 'Y' THEN BONUS_QTY END) AS BONUS_QTY_Y
	            
		    FROM ACCRUED_HEADER WHERE AGREEMENT_NO = ANY(SELECT AGREEMENT_NO FROM AGREE_AGREEMENT
		    WHERE START_DATE >= @START_DATE AND END_DATE <= @END_DATE AND QS_TREATMENT_FLAG = @QS_TREATMENT_FLAG)
	            GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID 
		   )ACRH
	ON ABI.DISTRIBUTOR_ID = ACRH.DISTRIBUTOR_ID AND ABI.[ID] = ACRH.AGREE_BRAND_ID
	WHERE ABI.START_DATE >= @START_DATE AND ABI.END_DATE <= @END_DATE AND ABI.QS_TREATMENT_FLAG = @QS_TREATMENT_FLAG
        AND ABI.DISTRIBUTOR_ID = ANY(SELECT DISTRIBUTOR_ID FROM Tempdb..##T_DistAccrue);
     END 	
GO

--exec Usp_Get_Accrued @QS_TREATMENT_FLAG = 'Q', @START_DATE = CAST(('Sep  9 2009 12:00AM') AS DATETIME), @END_DATE = CAST(('Aug 31 2010 12:00AM') AS DATETIME)

--exec Usp_Get_Accrued @QS_TREATMENT_FLAG = 'Q', @START_DATE = '09/01/2009', @END_DATE = '08/31/2010'
------------------------------------------------------------------------------------------
--exec Usp_Get_Total_Acrue_By_Year
--@AGREEMENT_NO = '0853/NI/V/2011.14',
--@CURRENT_FLAG = ''
---------------------PROCEDURE UNTUK MENTRACT CHANGES-------------------------------------
IF EXISTS(SELECT NAME FROM [sys].[objects] WHERE NAME = 'Usp_Get_Total_Acrue_By_Year' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Total_Acrue_By_Year
GO
CREATE PROCEDURE Usp_Get_Total_Acrue_By_Year
@AGREEMENT_NO VARCHAR(32),
@CURRENT_FLAG VARCHAR(2)
AS
SET DEADLOCK_PRIORITY NORMAL; SET NOCOUNT ON;
DECLARE @V_QS_TREATMENT_FLAG CHAR(1),@V_IsTargetGroup BIT;
SET @V_QS_TREATMENT_FLAG = (SELECT TOP 1 QS_TREATMENT_FLAG FROM AGREE_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO);
IF (SELECT COUNT(AGREEMENT_NO) FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO) > 1
    BEGIN SET @V_IsTargetGroup = 1; END
ELSE 
    BEGIN SET @V_IsTargetGroup = 0; END
IF @V_QS_TREATMENT_FLAG = 'Q'
   BEGIN 
	SELECT ABI.DISTRIBUTOR_ID,ABI.AGREEMENT_NO,ABI.[ID] AS AGREE_BRAND_ID,ABI.BRAND_ID,ABI.TARGET_YEAR,
       TOTAL_ACTUAL = CASE @CURRENT_FLAG 
			 WHEN 'Q1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4
			 WHEN 'Q2' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q3 + ABI.TARGET_Q4
			 WHEN 'Q3' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q4
			 ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
       	     END,
		ISNULL(ACRH.TOTAL_PO_ORIGINAL,0)AS TOTAL_PO_ORIGINAL,ISNULL(ACRH.TOTAL_PO_DISTRIBUTOR,0) AS TOTAL_PO_DISTRIBUTOR,
		ACTUAL_YEAR_DISTRIBUTOR = CASE @V_IsTargetGroup
							 	  WHEN 0 THEN CASE @CURRENT_FLAG 
												  WHEN 'Q1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4
												  WHEN 'Q2' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q3 + ABI.TARGET_Q4
												  WHEN 'Q3' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q4
												  ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) END
                                  ELSE  ISNULL(ACRH.ACTUAL_YEAR_DISTRIBUTOR,0)
                                  END,           		
        ABI.COMBINED_BRAND,--UNTUK AMOUNT GAK USAH PAKE CURRENT FLAG LAH, KARENA BUKA ACCRUE LAGI
		ISNULL(ACRH.TOTAL_ACTUAL_AMOUNT,0)AS TOTAL_ACTUAL_AMOUNT, ISNULL(ACRH.TOTAL_PO_AMOUNT,0) AS TOTAL_PO_AMOUNT,
		ISNULL(ACRH.T_PO_DIST_AMOUNT,0) AS PO_AMOUNT_DISTRIBUTOR,ISNULL(ACRH.ACTUAL_YEAR_DIST_AMOUNT,0)AS ACTUAL_YEAR_DIST_AMOUNT FROM VIEW_AGREE_BRAND_INCLUDE ABI
	    LEFT OUTER JOIN( 
					   SELECT ACRHA.AGREE_BRAND_ID,ACRHA.ACTUAL_Q1 + ACRHA.ACTUAL_Q2 + ACRHA.ACTUAL_Q3 + ACRHA.ACTUAL_Q4  + ACRHA.TOTAL_JOIN_CP AS TOTAL_ACTUAL,
					   ACRHA.ACTUAL_AMTQ1 + ACRHA.ACTUAL_AMTQ2 + ACRHA.ACTUAL_AMTQ3 +  ACRHA.ACTUAL_AMTQ4 + ACRHA.TOTAL_JOIN_CPAMT AS TOTAL_ACTUAL_AMOUNT,
					   ACRHA.TOTAL_PO_Q1 + ACRHA.TOTAL_PO_Q2 + ACRHA.TOTAL_PO_Q3 + ACRHA.TOTAL_PO_Q4 AS TOTAL_PO_ORIGINAL,
					   ACRHA.TOTAL_PO_AMTQ1 +  ACRHA.TOTAL_PO_AMTQ2 +  ACRHA.TOTAL_PO_AMTQ3 +  ACRHA.TOTAL_PO_AMTQ4 AS TOTAL_PO_AMOUNT,  	
					   ACRHA1.ACTUAL_Y,ACRHA1.ACTUAL_AMTY, ACRHD.DISTRIBUTOR_ID,
					   ACRHD.ACDIST_Q1 + ACRHD.ACDIST_Q2 + ACRHD.ACDIST_Q3 + ACRHD.ACDIST_Q4 + ACRHD.TOTAL_CP AS ACTUAL_YEAR_DISTRIBUTOR,
					   ACRHD.ACDIST_AMTQ1 + ACRHD.ACDIST_AMTQ2 + ACRHD.ACDIST_AMTQ3 + ACRHD.ACDIST_AMTQ4 + ACRHD.TOTAL_CP_AMOUNT AS ACTUAL_YEAR_DIST_AMOUNT,
					   ACRHD.T_PO_DIST_Q1 + ACRHD.T_PO_DIST_Q2 + ACRHD.T_PO_DIST_Q3 + ACRHD.T_PO_DIST_Q4 AS TOTAL_PO_DISTRIBUTOR,
					   ACRHD.T_PO_DIST_AMTQ1 + ACRHD.T_PO_DIST_AMTQ2 + ACRHD.T_PO_DIST_AMTQ3 + ACRHD.T_PO_DIST_AMTQ4 AS T_PO_DIST_AMOUNT
					   FROM
						(
                      	 SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
						 --UNTUK QTY DULU
						 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_DISTRIBUTOR END),0)  AS ACTUAL_Q1,
						 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q1,
						 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_Q2,
						 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q2, 
						 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_DISTRIBUTOR END),0)  AS ACTUAL_Q3,
						 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q3,
						 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_Q4,
						 ISNULL(SUM(CASE FLAG when 'Q4' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q4,
					
						 ---UNTUK VALUE
						 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0)  AS ACTUAL_AMTQ1,
						 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS TOTAL_PO_AMTQ1,
						 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0)  AS ACTUAL_AMTQ2,
						 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS TOTAL_PO_AMTQ2,
						 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0)  AS ACTUAL_AMTQ3,
						 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS TOTAL_PO_AMTQ3,
						 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0)  AS ACTUAL_AMTQ4,
						 ISNULL(SUM(CASE FLAG when 'Q4' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS TOTAL_PO_AMTQ4,
						 ISNULL(SUM(TOTAL_CPQ1),0) + ISNULL(SUM(TOTAL_CPQ2),0) + ISNULL(SUM(TOTAL_CPQ3),0) AS TOTAL_JOIN_CP,
						 ISNULL(SUM(CPQ1_AMOUNT),0) + ISNULL(SUM(CPQ2_AMOUNT),0) + ISNULL(SUM(CPQ3_AMOUNT),0) AS TOTAL_JOIN_CPAMT
						 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO 
						 GROUP BY AGREEMENT_NO + BRAND_ID
            	        )ACRHA
					   LEFT OUTER JOIN
                        (SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,TOTAL_ACTUAL AS ACTUAL_Y,TOTAL_ACTUAL_AMOUNT AS ACTUAL_AMTY
  						 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO AND FLAG = 'Y'	
        				)ACRHA1
					   ON ACRHA.AGREE_BRAND_ID = ACRHA1.AGREE_BRAND_ID
                       INNER JOIN 
                            (SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
							 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACDIST_Q1,
							 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS T_PO_DIST_Q1,
							 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACDIST_Q2,
							 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS T_PO_DIST_Q2,
							 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_DISTRIBUTOR END),0) AS ACDIST_Q3,
							 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN TOTAL_PO_DISTRIBUTOR END),0) AS T_PO_DIST_Q3,
							 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_DISTRIBUTOR END),0) AS ACDIST_Q4,
							 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN TOTAL_PO_DISTRIBUTOR END),0) AS T_PO_DIST_Q4,

							 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACDIST_AMTQ1,
							 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS T_PO_DIST_AMTQ1,
							 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACDIST_AMTQ2,
							 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS T_PO_DIST_AMTQ2,
							 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACDIST_AMTQ3,
							 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS T_PO_DIST_AMTQ3,
							 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACDIST_AMTQ4,
							 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS T_PO_DIST_AMTQ4,
							 ISNULL(SUM(TOTAL_CPQ1),0) + ISNULL(SUM(TOTAL_CPQ2),0) + ISNULL(SUM(TOTAL_CPQ3),0) AS TOTAL_CP,
							 ISNULL(SUM(CPQ1_AMOUNT),0) + ISNULL(SUM(CPQ2_AMOUNT),0) + ISNULL(SUM(CPQ3_AMOUNT),0) AS TOTAL_CP_AMOUNT
							 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO
							 GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID 
            	 			 )ACRHD
						ON ACRHD.AGREE_BRAND_ID = ACRHA.AGREE_BRAND_ID
                   )ACRH
         ON ACRH.AGREE_BRAND_ID = ABI.[ID] AND ACRH.DISTRIBUTOR_ID = ABI.DISTRIBUTOR_ID
	WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO
 	OPTION(KEEP PLAN);
    END
 ELSE
     BEGIN
 	 SELECT ABI.DISTRIBUTOR_ID,ABI.AGREEMENT_NO,ABI.[ID] AS AGREE_BRAND_ID,ABI.BRAND_ID,ABI.TARGET_YEAR,
        TOTAL_ACTUAL = CASE @CURRENT_FLAG 
							WHEN 'S1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_S2
						    ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
        				END,
		ISNULL(ACRH.TOTAL_PO_ORIGINAL,0) AS TOTAL_PO_ORIGINAL,ISNULL(ACRH.TOTAL_PO_DISTRIBUTOR,0) AS TOTAL_PO_DISTRIBUTOR,		
		ACTUAL_YEAR_DISTRIBUTOR = CASE @V_IsTargetGroup
									   WHEN 0 THEN CASE @CURRENT_FLAG 
												  WHEN 'S1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_S2
			 									  ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
        		 								  END
									    ELSE  ISNULL(ACRH.ACTUAL_YEAR_DISTRIBUTOR,0)
                                   END,           		
        ABI.COMBINED_BRAND,--UNTUK AMOUNT GAK USAH PAKE CURRENT FLAG LAH, KARENA BUKA ACCRUE LAGI
		ISNULL(ACRH.TOTAL_ACTUAL_AMOUNT,0)AS TOTAL_ACTUAL_AMOUNT, ISNULL(ACRH.TOTAL_PO_AMOUNT,0) AS TOTAL_PO_AMOUNT,
		ISNULL(ACRH.T_PO_DIST_AMOUNT,0) AS PO_AMOUNT_DISTRIBUTOR,ISNULL(ACRH.ACTUAL_YEAR_DIST_AMOUNT,0)AS ACTUAL_YEAR_DIST_AMOUNT
		FROM VIEW_AGREE_BRAND_INCLUDE ABI
		LEFT OUTER JOIN ( 
					      SELECT ACRHA.AGREE_BRAND_ID,
						  ACRHA.ACTUAL_S1 + ACRHA.ACTUAL_S2 + ACRHA.TOTAL_JOIN_CP AS TOTAL_ACTUAL,
						  ACRHA.ACTUAL_AMTS1 + ACRHA.ACTUAL_AMTS2 + ACRHA.TOTAL_JOIN_CPAMT AS TOTAL_ACTUAL_AMOUNT,
					      ACRHA1.ACTUAL_Y AS ACTUAL_Y,ACRHA1.ACTUAL_YAMT,ACRHD.DISTRIBUTOR_ID,
						  ACRHD.ACTDIST_S1 + ACRHD.ACTDIST_S2 + ACRHD.TOTAL_CP AS ACTUAL_YEAR_DISTRIBUTOR,
					      ACRHD.ACTDIST_AMTS1 + ACRHD.ACTDIST_AMTS2 + ACRHD.TOTAL_CPAMT AS ACTUAL_YEAR_DIST_AMOUNT,
						  ACRHA.TOTAL_PO_S1 + ACRHA.TOTAL_PO_S2 AS TOTAL_PO_ORIGINAL,
						  ACRHA.TOTAL_PO_AMTS1 + ACRHA.TOTAL_PO_AMTS2 AS TOTAL_PO_AMOUNT,
						  ACRHD.T_PO_DIST_S1 +  ACRHD.T_PO_DIST_S2 AS TOTAL_PO_DISTRIBUTOR,
						  ACRHD.T_PO_DIST_AMTS1 +  ACRHD.T_PO_DIST_AMTS2 AS  T_PO_DIST_AMOUNT
                         FROM
                             (
                         	   SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
		    				   ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_S1,
							   ISNULL(SUM(CASE FLAG WHEN 'S1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_S1,
							   ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_S2,
							   ISNULL(SUM(CASE FLAG WHEN 'S2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_S2,
								
							   ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACTUAL_AMTS1,
							   ISNULL(SUM(CASE FLAG WHEN 'S1' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS TOTAL_PO_AMTS1,
							   ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACTUAL_AMTS2,
							   ISNULL(SUM(CASE FLAG WHEN 'S2' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS TOTAL_PO_AMTS2,
							   ISNULL(SUM(TOTAL_CPS1),0) AS TOTAL_JOIN_CP,
							   ISNULL(SUM(CPS1_AMOUNT),0) AS TOTAL_JOIN_CPAMT
							   FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO
							   GROUP BY AGREEMENT_NO + BRAND_ID 
                    	      )ACRHA
 							LEFT OUTER JOIN
										(SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,TOTAL_ACTUAL AS ACTUAL_Y,TOTAL_ACTUAL_AMOUNT AS ACTUAL_YAMT
	  									 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO AND FLAG = 'Y'	
		   								 )ACRHA1
							ON ACRHA.AGREE_BRAND_ID = ACRHA1.AGREE_BRAND_ID
							INNER JOIN 
									  (SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
										ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTDIST_S1,
										ISNULL(SUM(CASE FLAG WHEN 'S1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS T_PO_DIST_S1,
										ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTDIST_S2,
										ISNULL(SUM(CASE FLAG WHEN 'S2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS T_PO_DIST_S2,
			
										ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACTDIST_AMTS1,
										ISNULL(SUM(CASE FLAG WHEN 'S1' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS T_PO_DIST_AMTS1,
										ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACTDIST_AMTS2,
										ISNULL(SUM(CASE FLAG WHEN 'S2' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS T_PO_DIST_AMTS2,
    	 								ISNULL(SUM(TOTAL_CPS1),0) AS TOTAL_CP,
										ISNULL(SUM(CPS1_AMOUNT),0) AS TOTAL_CPAMT
										FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO
										GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID
                    	 				)ACRHD
   							ON ACRHD.AGREE_BRAND_ID = ACRHA.AGREE_BRAND_ID
						 )ACRH
			 ON ACRH.AGREE_BRAND_ID = ABI.[ID] AND ACRH.DISTRIBUTOR_ID = ABI.DISTRIBUTOR_ID
	WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO
 	OPTION(KEEP PLAN);
   END
GO
-------------------------------------------------------------------------------------------
--IF EXISTS(SELECT NAME FROM [sys].[objects] WHERE NAME = 'Usp_Changed_Actual_Accrue_By_Year' AND TYPE = 'P')
--	DROP PROCEDURE Usp_Changed_Actual_Accrue_By_Year
--GO
--CREATE PROCEDURE Usp_Changed_Actual_Accrue_By_Year
--@AGREEMENT_NO VARCHAR(32),
--@CURRENT_FLAG VARCHAR(2)
--AS
--SET DEADLOCK_PRIORITY NORMAL; SET NOCOUNT ON;
--DECLARE @V_QS_TREATMENT_FLAG CHAR(1),@V_IsTargetGroup BIT;
--SET @V_QS_TREATMENT_FLAG = (SELECT TOP 1 QS_TREATMENT_FLAG FROM AGREE_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO);
--IF (SELECT COUNT(AGREEMENT_NO) FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO) > 1
--    BEGIN SET @V_IsTargetGroup = 1; END
--ELSE 
--    BEGIN SET @V_IsTargetGroup = 0; END
--
--IF @V_QS_TREATMENT_FLAG = 'Q'
--   BEGIN 
--	SELECT ABI.DISTRIBUTOR_ID,ABI.AGREEMENT_NO,ABI.[ID] AS AGREE_BRAND_ID,ABI.BRAND_ID,ABI.TARGET_YEAR,
--       TOTAL_ACTUAL = CASE @CURRENT_FLAG 
--			 WHEN 'Q1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4
--			 WHEN 'Q2' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q3 + ABI.TARGET_Q4
--			 WHEN 'Q3' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q4
--			 ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
--       			 END,
--	ISNULL(ACRH.TOTAL_PO_ORIGINAL,0)AS TOTAL_PO_ORIGINAL,ISNULL(ACRH.TOTAL_PO_DISTRIBUTOR,0) AS TOTAL_PO_DISTRIBUTOR,
--	ACTUAL_YEAR_DISTRIBUTOR = CASE @V_IsTargetGroup
--				    WHEN 0 THEN CASE @CURRENT_FLAG 
--					        WHEN 'Q1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4
--					        WHEN 'Q2' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q3 + ABI.TARGET_Q4
--					        WHEN 'Q3' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q4
--					        ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) END
--                                    ELSE  ISNULL(ACRH.ACTUAL_YEAR_DISTRIBUTOR,0)
--                                    END,           		
--        ABI.COMBINED_BRAND FROM VIEW_AGREE_BRAND_INCLUDE ABI
--	INNER JOIN( 
--                   SELECT ACRHA.AGREE_BRAND_ID,ISNULL(ACRHA.ACTUAL_Q1,0) + ISNULL(ACRHA.ACTUAL_Q2,0) + ISNULL(ACRHA.ACTUAL_Q3,0) + ISNULL(ACRHA.ACTUAL_Q4,0)  + ISNULL(ACRHA.TOTAL_JOIN_CP,0) AS TOTAL_ACTUAL,
--		   ISNULL(ACRHA.TOTAL_PO_Q1,0) + ISNULL(ACRHA.TOTAL_PO_Q2,0) + ISNULL(ACRHA.TOTAL_PO_Q3,0) + ISNULL(ACRHA.TOTAL_PO_Q4,0) AS TOTAL_PO_ORIGINAL,	
--		   ISNULL(ACRHA1.ACTUAL_Y,0)AS ACTUAL_Y,ACRHD.DISTRIBUTOR_ID,
--		   ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q1,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q2,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q3,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q4,0)  + ISNULL(ACRHD.TOTAL_CP,0) AS ACTUAL_YEAR_DISTRIBUTOR,
--		   ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_Q1,0) + ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_Q2,0) + ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_Q3,0) + ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_Q4,0) AS TOTAL_PO_DISTRIBUTOR
--                   FROM
--                     (
--                      	 SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
--				 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_DISTRIBUTOR END),0)  AS ACTUAL_Q1,
--			 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q1,
--				 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_Q2,
--			 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q2, 
--				 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_DISTRIBUTOR END),0)  AS ACTUAL_Q3,
--			 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q3,
--				 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_Q4,
--			 ISNULL(SUM(CASE FLAG when 'Q4' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q4,
--			     ISNULL(SUM(TOTAL_CPQ1),0) + ISNULL(SUM(TOTAL_CPQ2),0) + ISNULL(SUM(TOTAL_CPQ3),0) AS TOTAL_JOIN_CP
--			 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO 
--			 GROUP BY AGREEMENT_NO + BRAND_ID
--            	      )ACRHA
--		    INNER JOIN
--                            (SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,TOTAL_ACTUAL AS ACTUAL_Y
--	  	             FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO AND FLAG = 'Y'	
--            		     )ACRHA1
--		    ON ACRHA.AGREE_BRAND_ID = ACRHA1.AGREE_BRAND_ID
--                    INNER JOIN 
--                            (SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
--				 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q1,
--				 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_Q1,
--				     ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q2,
--				 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_Q2,
--				     ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q3,
--				 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_Q3,
--					 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q4,
--				 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_Q4,
--			      ISNULL(SUM(TOTAL_CPQ1),0) + ISNULL(SUM(TOTAL_CPQ2),0) + ISNULL(SUM(TOTAL_CPQ3),0) AS TOTAL_CP
--					 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO
--				 GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID 
--            	 	     )ACRHD
--		    ON ACRHD.AGREE_BRAND_ID = ACRHA.AGREE_BRAND_ID
--                   )ACRH
--         ON ACRH.AGREE_BRAND_ID = ABI.[ID] AND ACRH.DISTRIBUTOR_ID = ABI.DISTRIBUTOR_ID
--	WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO
-- 	AND ACRH.ACTUAL_Y <> ACRH.TOTAL_ACTUAL OPTION(KEEP PLAN);
--    END
-- ELSE
--     BEGIN
-- 	 SELECT ABI.DISTRIBUTOR_ID,ABI.AGREEMENT_NO,ABI.[ID] AS AGREE_BRAND_ID,ABI.BRAND_ID,ABI.TARGET_YEAR,
--        TOTAL_ACTUAL = CASE @CURRENT_FLAG 
--			 WHEN 'S1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_S2
--			 ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
--        		 END,
--	ISNULL(ACRH.TOTAL_PO_ORIGINAL,0) AS TOTAL_PO_ORIGINAL,ISNULL(ACRH.TOTAL_PO_DISTRIBUTOR,0) AS TOTAL_PO_DISTRIBUTOR,
--	ACTUAL_YEAR_DISTRIBUTOR = CASE @V_IsTargetGroup
--				    WHEN 0 THEN CASE @CURRENT_FLAG 
--					       WHEN 'S1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_S2
--			 		       ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
--        		 		       END
--                                    ELSE  ISNULL(ACRH.ACTUAL_YEAR_DISTRIBUTOR,0)
--                                    END,           		
--        ABI.COMBINED_BRAND FROM VIEW_AGREE_BRAND_INCLUDE ABI
--	INNER JOIN ( 
--                        SELECT ACRHA.AGREE_BRAND_ID,ISNULL(ACRHA.ACTUAL_S1,0) + ISNULL(ACRHA.ACTUAL_S2,0) + ISNULL(ACRHA.TOTAL_JOIN_CP,0) AS TOTAL_ACTUAL,
--			ISNULL(ACRHA1.ACTUAL_Y,0)AS ACTUAL_Y,ACRHD.DISTRIBUTOR_ID,
--			ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_S1,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_S2,0)  + ISNULL(ACRHD.TOTAL_CP,0) AS ACTUAL_YEAR_DISTRIBUTOR,
--			 ISNULL(ACRHA.TOTAL_PO_S1,0) + ISNULL(ACRHA.TOTAL_PO_S2,0) AS TOTAL_PO_ORIGINAL,
--			 ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_S1,0) +  ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_S2,0) AS TOTAL_PO_DISTRIBUTOR
--                         FROM
--                             (
--                         	SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
--		    		ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_S1,
--				  ISNULL(SUM(CASE FLAG WHEN 'S1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_S1,
--				  ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_S2,
--				  ISNULL(SUM(CASE FLAG WHEN 'S2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_S2,
--				 ISNULL(SUM(TOTAL_CPS1),0) AS TOTAL_JOIN_CP
--				  FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO
--				  GROUP BY AGREEMENT_NO + BRAND_ID 
--                    	      )ACRHA
-- 			INNER JOIN
--                                 (SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,TOTAL_ACTUAL AS ACTUAL_Y
--	  	                  FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO AND FLAG = 'Y'	
--		   	          )ACRHA1
--			ON ACRHA.AGREE_BRAND_ID = ACRHA1.AGREE_BRAND_ID
--                        INNER JOIN 
--                                 (SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
--						ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_S1,
--				ISNULL(SUM(CASE FLAG WHEN 'S1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_S1,
--					ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_S2,
--				ISNULL(SUM(CASE FLAG WHEN 'S2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_S2,
--    	 				    ISNULL(SUM(TOTAL_CPS1),0) AS TOTAL_CP
--					FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO 
--				GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID
--                    	 	  )ACRHD
--   			ON ACRHD.AGREE_BRAND_ID = ACRHA.AGREE_BRAND_ID
--                     )ACRH
--        ON ACRH.AGREE_BRAND_ID = ABI.[ID] AND ACRH.DISTRIBUTOR_ID = ABI.DISTRIBUTOR_ID
--	WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO
-- 	AND ACRH.ACTUAL_Y <> ACRH.TOTAL_ACTUAL OPTION(KEEP PLAN);
--   END
--GO

----------------------------------------------------------------------------------------
IF EXISTS(SELECT NAME FROM [sys].[objects] WHERE NAME = 'Usp_Changed_Actual_Accrue_By_Year' AND TYPE = 'P')
	DROP PROCEDURE Usp_Changed_Actual_Accrue_By_Year
GO
CREATE PROCEDURE Usp_Changed_Actual_Accrue_By_Year
@AGREEMENT_NO VARCHAR(32),
@CURRENT_FLAG VARCHAR(2)
AS
SET DEADLOCK_PRIORITY NORMAL; SET NOCOUNT ON;
DECLARE @V_QS_TREATMENT_FLAG CHAR(1),@V_IsTargetGroup BIT;
SET @V_QS_TREATMENT_FLAG = (SELECT TOP 1 QS_TREATMENT_FLAG FROM AGREE_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO);
IF (SELECT COUNT(AGREEMENT_NO) FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO) > 1
    BEGIN SET @V_IsTargetGroup = 1; END
ELSE 
    BEGIN SET @V_IsTargetGroup = 0; END
IF @V_QS_TREATMENT_FLAG = 'Q'
   BEGIN 
	SELECT ABI.DISTRIBUTOR_ID,ABI.AGREEMENT_NO,ABI.[ID] AS AGREE_BRAND_ID,ABI.BRAND_ID,ABI.TARGET_YEAR,
       TOTAL_ACTUAL = CASE @CURRENT_FLAG 
			 WHEN 'Q1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4
			 WHEN 'Q2' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q3 + ABI.TARGET_Q4
			 WHEN 'Q3' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q4
			 ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
       	     END,
		ISNULL(ACRH.TOTAL_PO_ORIGINAL,0)AS TOTAL_PO_ORIGINAL,ISNULL(ACRH.TOTAL_PO_DISTRIBUTOR,0) AS TOTAL_PO_DISTRIBUTOR,
		ACTUAL_YEAR_DISTRIBUTOR = CASE @V_IsTargetGroup
							 	  WHEN 0 THEN CASE @CURRENT_FLAG 
												  WHEN 'Q1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4
												  WHEN 'Q2' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q3 + ABI.TARGET_Q4
												  WHEN 'Q3' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q4
												  ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) END
                                  ELSE  ISNULL(ACRH.ACTUAL_YEAR_DISTRIBUTOR,0)
                                  END,           		
        ABI.COMBINED_BRAND,--UNTUK AMOUNT GAK USAH PAKE CURRENT FLAG LAH, KARENA BUKA ACCRUE LAGI
		ISNULL(ACRH.TOTAL_ACTUAL_AMOUNT,0)AS TOTAL_ACTUAL_AMOUNT, ISNULL(ACRH.TOTAL_PO_AMOUNT,0) AS TOTAL_PO_AMOUNT,
		ISNULL(ACRH.T_PO_DIST_AMOUNT,0) AS PO_AMOUNT_DISTRIBUTOR,ISNULL(ACRH.ACTUAL_YEAR_DIST_AMOUNT,0)AS ACTUAL_YEAR_DIST_AMOUNT FROM VIEW_AGREE_BRAND_INCLUDE ABI
	    INNER JOIN( 
					   SELECT ACRHA.AGREE_BRAND_ID,ACRHA.ACTUAL_Q1 + ACRHA.ACTUAL_Q2 + ACRHA.ACTUAL_Q3 + ACRHA.ACTUAL_Q4  + ACRHA.TOTAL_JOIN_CP AS TOTAL_ACTUAL,
					   ACRHA.ACTUAL_AMTQ1 + ACRHA.ACTUAL_AMTQ2 + ACRHA.ACTUAL_AMTQ3 +  ACRHA.ACTUAL_AMTQ4 + ACRHA.TOTAL_JOIN_CPAMT AS TOTAL_ACTUAL_AMOUNT,
					   ACRHA.TOTAL_PO_Q1 + ACRHA.TOTAL_PO_Q2 + ACRHA.TOTAL_PO_Q3 + ACRHA.TOTAL_PO_Q4 AS TOTAL_PO_ORIGINAL,
					   ACRHA.TOTAL_PO_AMTQ1 +  ACRHA.TOTAL_PO_AMTQ2 +  ACRHA.TOTAL_PO_AMTQ3 +  ACRHA.TOTAL_PO_AMTQ4 AS TOTAL_PO_AMOUNT,  	
					   ACRHA1.ACTUAL_Y,ACRHA1.ACTUAL_AMTY, ACRHD.DISTRIBUTOR_ID,
					   ACRHD.ACDIST_Q1 + ACRHD.ACDIST_Q2 + ACRHD.ACDIST_Q3 + ACRHD.ACDIST_Q4 + ACRHD.TOTAL_CP AS ACTUAL_YEAR_DISTRIBUTOR,
					   ACRHD.ACDIST_AMTQ1 + ACRHD.ACDIST_AMTQ2 + ACRHD.ACDIST_AMTQ3 + ACRHD.ACDIST_AMTQ4 + ACRHD.TOTAL_CP_AMOUNT AS ACTUAL_YEAR_DIST_AMOUNT,
					   ACRHD.T_PO_DIST_Q1 + ACRHD.T_PO_DIST_Q2 + ACRHD.T_PO_DIST_Q3 + ACRHD.T_PO_DIST_Q4 AS TOTAL_PO_DISTRIBUTOR,
					   ACRHD.T_PO_DIST_AMTQ1 + ACRHD.T_PO_DIST_AMTQ2 + ACRHD.T_PO_DIST_AMTQ3 + ACRHD.T_PO_DIST_AMTQ4 AS T_PO_DIST_AMOUNT
					   FROM
						(
                      	 SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
						 --UNTUK QTY DULU
						 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_DISTRIBUTOR END),0)  AS ACTUAL_Q1,
						 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q1,
						 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_Q2,
						 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q2, 
						 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_DISTRIBUTOR END),0)  AS ACTUAL_Q3,
						 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q3,
						 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_Q4,
						 ISNULL(SUM(CASE FLAG when 'Q4' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q4,
					
						 ---UNTUK VALUE
						 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0)  AS ACTUAL_AMTQ1,
						 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS TOTAL_PO_AMTQ1,
						 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0)  AS ACTUAL_AMTQ2,
						 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS TOTAL_PO_AMTQ2,
						 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0)  AS ACTUAL_AMTQ3,
						 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS TOTAL_PO_AMTQ3,
						 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0)  AS ACTUAL_AMTQ4,
						 ISNULL(SUM(CASE FLAG when 'Q4' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS TOTAL_PO_AMTQ4,
						 ISNULL(SUM(TOTAL_CPQ1),0) + ISNULL(SUM(TOTAL_CPQ2),0) + ISNULL(SUM(TOTAL_CPQ3),0) AS TOTAL_JOIN_CP,
						 ISNULL(SUM(CPQ1_AMOUNT),0) + ISNULL(SUM(CPQ2_AMOUNT),0) + ISNULL(SUM(CPQ3_AMOUNT),0) AS TOTAL_JOIN_CPAMT
						 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO 
						 GROUP BY AGREEMENT_NO + BRAND_ID
            	        )ACRHA
					   INNER JOIN
                        (SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,TOTAL_ACTUAL AS ACTUAL_Y,TOTAL_ACTUAL_AMOUNT AS ACTUAL_AMTY
  						 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO AND FLAG = 'Y'	
        				)ACRHA1
					   ON ACRHA.AGREE_BRAND_ID = ACRHA1.AGREE_BRAND_ID
                       INNER JOIN 
                            (SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
							 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACDIST_Q1,
							 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS T_PO_DIST_Q1,
							 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACDIST_Q2,
							 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS T_PO_DIST_Q2,
							 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_DISTRIBUTOR END),0) AS ACDIST_Q3,
							 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN TOTAL_PO_DISTRIBUTOR END),0) AS T_PO_DIST_Q3,
							 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_DISTRIBUTOR END),0) AS ACDIST_Q4,
							 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN TOTAL_PO_DISTRIBUTOR END),0) AS T_PO_DIST_Q4,

							 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACDIST_AMTQ1,
							 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS T_PO_DIST_AMTQ1,
							 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACDIST_AMTQ2,
							 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS T_PO_DIST_AMTQ2,
							 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACDIST_AMTQ3,
							 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS T_PO_DIST_AMTQ3,
							 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACDIST_AMTQ4,
							 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS T_PO_DIST_AMTQ4,
							 ISNULL(SUM(TOTAL_CPQ1),0) + ISNULL(SUM(TOTAL_CPQ2),0) + ISNULL(SUM(TOTAL_CPQ3),0) AS TOTAL_CP,
							 ISNULL(SUM(CPQ1_AMOUNT),0) + ISNULL(SUM(CPQ2_AMOUNT),0) + ISNULL(SUM(CPQ3_AMOUNT),0) AS TOTAL_CP_AMOUNT
							 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO
							 GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID 
            	 			 )ACRHD
						ON ACRHD.AGREE_BRAND_ID = ACRHA.AGREE_BRAND_ID
                   )ACRH
         ON ACRH.AGREE_BRAND_ID = ABI.[ID] AND ACRH.DISTRIBUTOR_ID = ABI.DISTRIBUTOR_ID
	WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO
 	AND ACRH.ACTUAL_Y <> ACRH.TOTAL_ACTUAL OPTION(KEEP PLAN);
    END
 ELSE
     BEGIN
 	 SELECT ABI.DISTRIBUTOR_ID,ABI.AGREEMENT_NO,ABI.[ID] AS AGREE_BRAND_ID,ABI.BRAND_ID,ABI.TARGET_YEAR,
        TOTAL_ACTUAL = CASE @CURRENT_FLAG 
							WHEN 'S1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_S2
						    ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
        				END,
		ISNULL(ACRH.TOTAL_PO_ORIGINAL,0) AS TOTAL_PO_ORIGINAL,ISNULL(ACRH.TOTAL_PO_DISTRIBUTOR,0) AS TOTAL_PO_DISTRIBUTOR,		
		ACTUAL_YEAR_DISTRIBUTOR = CASE @V_IsTargetGroup
									   WHEN 0 THEN CASE @CURRENT_FLAG 
												  WHEN 'S1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_S2
			 									  ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
        		 								  END
									    ELSE  ISNULL(ACRH.ACTUAL_YEAR_DISTRIBUTOR,0)
                                   END,           		
        ABI.COMBINED_BRAND,--UNTUK AMOUNT GAK USAH PAKE CURRENT FLAG LAH, KARENA BUKA ACCRUE LAGI
		ISNULL(ACRH.TOTAL_ACTUAL_AMOUNT,0)AS TOTAL_ACTUAL_AMOUNT, ISNULL(ACRH.TOTAL_PO_AMOUNT,0) AS TOTAL_PO_AMOUNT,
		ISNULL(ACRH.T_PO_DIST_AMOUNT,0) AS PO_AMOUNT_DISTRIBUTOR,ISNULL(ACRH.ACTUAL_YEAR_DIST_AMOUNT,0)AS ACTUAL_YEAR_DIST_AMOUNT 
		FROM VIEW_AGREE_BRAND_INCLUDE ABI
		INNER JOIN ( 
					      SELECT ACRHA.AGREE_BRAND_ID,
						  ACRHA.ACTUAL_S1 + ACRHA.ACTUAL_S2 + ACRHA.TOTAL_JOIN_CP AS TOTAL_ACTUAL,
						  ACRHA.ACTUAL_AMTS1 + ACRHA.ACTUAL_AMTS2 + ACRHA.TOTAL_JOIN_CPAMT AS TOTAL_ACTUAL_AMOUNT,
					      ACRHA1.ACTUAL_Y AS ACTUAL_Y,ACRHA1.ACTUAL_YAMT,ACRHD.DISTRIBUTOR_ID,
						  ACRHD.ACTDIST_S1 + ACRHD.ACTDIST_S2 + ACRHD.TOTAL_CP AS ACTUAL_YEAR_DISTRIBUTOR,
					      ACRHD.ACTDIST_AMTS1 + ACRHD.ACTDIST_AMTS2 + ACRHD.TOTAL_CPAMT AS ACTUAL_YEAR_DIST_AMOUNT,
						  ACRHA.TOTAL_PO_S1 + ACRHA.TOTAL_PO_S2 AS TOTAL_PO_ORIGINAL,
						  ACRHA.TOTAL_PO_AMTS1 + ACRHA.TOTAL_PO_AMTS2 AS TOTAL_PO_AMOUNT,
						  ACRHD.T_PO_DIST_S1 +  ACRHD.T_PO_DIST_S2 AS TOTAL_PO_DISTRIBUTOR,
						  ACRHD.T_PO_DIST_AMTS1 +  ACRHD.T_PO_DIST_AMTS2 AS  T_PO_DIST_AMOUNT
                         FROM
                             (
                         	   SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
		    				   ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_S1,
							   ISNULL(SUM(CASE FLAG WHEN 'S1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_S1,
							   ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_S2,
							   ISNULL(SUM(CASE FLAG WHEN 'S2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_S2,
								
							   ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACTUAL_AMTS1,
							   ISNULL(SUM(CASE FLAG WHEN 'S1' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS TOTAL_PO_AMTS1,
							   ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACTUAL_AMTS2,
							   ISNULL(SUM(CASE FLAG WHEN 'S2' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS TOTAL_PO_AMTS2,
							   ISNULL(SUM(TOTAL_CPS1),0) AS TOTAL_JOIN_CP,
							   ISNULL(SUM(CPS1_AMOUNT),0) AS TOTAL_JOIN_CPAMT
							   FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO
							   GROUP BY AGREEMENT_NO + BRAND_ID 
                    	      )ACRHA
 							INNER JOIN
										(SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,TOTAL_ACTUAL AS ACTUAL_Y,TOTAL_ACTUAL_AMOUNT AS ACTUAL_YAMT
	  									 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO AND FLAG = 'Y'	
		   								 )ACRHA1
							ON ACRHA.AGREE_BRAND_ID = ACRHA1.AGREE_BRAND_ID
							INNER JOIN 
									  (SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
										ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTDIST_S1,
										ISNULL(SUM(CASE FLAG WHEN 'S1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS T_PO_DIST_S1,
										ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTDIST_S2,
										ISNULL(SUM(CASE FLAG WHEN 'S2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS T_PO_DIST_S2,
			
										ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACTDIST_AMTS1,
										ISNULL(SUM(CASE FLAG WHEN 'S1' THEN PO_AMOUNT_DISTRIBUTOR  END),0) AS T_PO_DIST_AMTS1,
										ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_AMOUNT_DISTRIBUTOR END),0) AS ACTDIST_AMTS2,
										ISNULL(SUM(CASE FLAG WHEN 'S2' THEN PO_AMOUNT_DISTRIBUTOR END),0) AS T_PO_DIST_AMTS2,
    	 								ISNULL(SUM(TOTAL_CPS1),0) AS TOTAL_CP,
										ISNULL(SUM(CPS1_AMOUNT),0) AS TOTAL_CPAMT
										FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO 
										GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID
                    	 				)ACRHD
   							ON ACRHD.AGREE_BRAND_ID = ACRHA.AGREE_BRAND_ID
						 )ACRH
			 ON ACRH.AGREE_BRAND_ID = ABI.[ID] AND ACRH.DISTRIBUTOR_ID = ABI.DISTRIBUTOR_ID
	WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO
 	AND ACRH.ACTUAL_Y <> ACRH.TOTAL_ACTUAL OPTION(KEEP PLAN);
   END
GO
------------------------------------------------------------------------------------
IF EXISTS(SELECT NAME FROM [sys].[objects] WHERE NAME = 'Usp_Get_Total_Accrue_By_Year_Detail' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Total_Accrue_By_Year_Detail
GO
CREATE PROCEDURE Usp_Get_Total_Accrue_By_Year_Detail
@AGREEMENT_NO VARCHAR(32)
AS
SET DEADLOCK_PRIORITY NORMAL; SET NOCOUNT ON; 
DECLARE @V_QS_TREATMENT_FLAG CHAR(1);
SET @V_QS_TREATMENT_FLAG = (SELECT TOP 1 QS_TREATMENT_FLAG FROM AGREE_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO);
IF (@V_QS_TREATMENT_FLAG = 'S')
   BEGIN
	SELECT ACRH.AGREEMENT_NO + ACRH.BRAND_ID AS AGREE_BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,
	SUM(ACD.TOTAL_CPS1) + SUM(ACD.TOTAL_ACTUAL) AS TOTAL_ACTUAL,
	--BAGIAN UANG--
	SUM(ACD.CPS1_AMOUNT) + SUM(ACD.TOTAL_ACTUAL_AMOUNT) AS TOTAL_ACTUAL_AMOUNT,
	SUM(ACD.TOTAL_PO_ORIGINAL) AS TOTAL_PO_ORIGINAL,SUM(ACD.TOTAL_PO_AMOUNT) AS TOTAL_PO_AMOUNT
	FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACD ON ACRH.ACHIEVEMENT_ID = ACD.ACHIEVEMENT_ID
        WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.FLAG IN('S1','S2')
	GROUP BY ACRH.AGREEMENT_NO + ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID
	OPTION(KEEP PLAN);
   END
ELSE IF (@V_QS_TREATMENT_FLAG = 'Q')
   BEGIN
	SELECT ACRH.AGREEMENT_NO + ACRH.BRAND_ID AS AGREE_BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,
	SUM(ACD.TOTAL_CPQ1) + SUM(ACD.TOTAL_CPQ2) + SUM(ACD.TOTAL_CPQ3) + SUM(ACD.TOTAL_ACTUAL) AS TOTAL_ACTUAL,
	--BAGIAN DUITNYA
	SUM(ACD.CPQ1_AMOUNT) + SUM(ACD.CPQ2_AMOUNT) + SUM(ACD.CPQ3_AMOUNT) + SUM(ACD.TOTAL_ACTUAL_AMOUNT),
	SUM(ACD.TOTAL_PO_ORIGINAL) AS TOTAL_PO_ORIGINAL,SUM(ACD.TOTAL_PO_AMOUNT)AS TOTAL_PO_AMOUNT
	FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACD ON ACRH.ACHIEVEMENT_ID = ACD.ACHIEVEMENT_ID
        WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.FLAG IN('Q1','Q2','Q3','Q4')
	GROUP BY ACRH.AGREEMENT_NO + ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID
	OPTION(KEEP PLAN);
   END
GO
	
----------------------------------------------------------------------------------------------
IF EXISTS(SELECT NAME FROM [sys].[objects] WHERE NAME = 'Usp_Changed_Acrue_BY_Year_Detail' AND TYPE = 'P')
DROP PROCEDURE Usp_Changed_Acrue_BY_Year_Detail
GO
CREATE PROCEDURE Usp_Changed_Acrue_BY_Year_Detail
@AGREEMENT_NO VARCHAR(32)
AS
SET DEADLOCK_PRIORITY NORMAL; SET NOCOUNT ON; 
DECLARE @V_QS_TREATMENT_FLAG CHAR(1);
SET @V_QS_TREATMENT_FLAG = (SELECT TOP 1 QS_TREATMENT_FLAG FROM AGREE_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO);
IF (@V_QS_TREATMENT_FLAG = 'S')
   BEGIN
        SELECT ACRH.AGREEMENT_NO + ACRH.BRAND_ID AS AGREE_BRAND_ID,ACRH.DISTRIBUTOR_ID,ACRH.BRANDPACK_ID,ACRH.TOTAL_ACTUAL,
		ACRH.TOTAL_PO_ORIGINAL,ACRH.TOTAL_PO_AMOUNT,ACRH.TOTAL_ACTUAL_AMOUNT
        FROM(  
			  SELECT ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,SUM(ACD.TOTAL_CPS1) + SUM(ACD.TOTAL_ACTUAL) AS TOTAL_ACTUAL,
			  --BAGIAN UANG--
			  SUM(ACD.CPS1_AMOUNT) + SUM(ACD.TOTAL_ACTUAL_AMOUNT) AS TOTAL_ACTUAL_AMOUNT,
			  SUM(ACD.TOTAL_PO_ORIGINAL) AS TOTAL_PO_ORIGINAL,SUM(ACD.TOTAL_PO_AMOUNT) AS TOTAL_PO_AMOUNT
			  FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACD ON ACRH.ACHIEVEMENT_ID = ACD.ACHIEVEMENT_ID
              WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.FLAG IN('S1','S2')
			  GROUP BY ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID
             )ACRH
        INNER JOIN(SELECT ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,ACD.TOTAL_ACTUAL
	     		   FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACD ON ACRH.ACHIEVEMENT_ID = ACD.ACHIEVEMENT_ID
              	   WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.FLAG = 'Y'
                   )ACRH1 
        ON (ACRH.AGREEMENT_NO + ACRH.BRAND_ID + ACRH.DISTRIBUTOR_ID + ACRH.BRANDPACK_ID)
           = (ACRH1.AGREEMENT_NO + ACRH1.BRAND_ID + ACRH1.DISTRIBUTOR_ID + ACRH1.BRANDPACK_ID)
		WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.TOTAL_ACTUAL <> ACRH1.TOTAL_ACTUAL OPTION(KEEP PLAN);
   END
ELSE IF (@V_QS_TREATMENT_FLAG = 'Q')
   BEGIN
		 SELECT ACRH.AGREEMENT_NO + ACRH.BRAND_ID AS AGREE_BRAND_ID,ACRH.DISTRIBUTOR_ID,ACRH.BRANDPACK_ID,ACRH.TOTAL_ACTUAL,
		ACRH.TOTAL_PO_ORIGINAL,ACRH.TOTAL_PO_AMOUNT,ACRH.TOTAL_ACTUAL_AMOUNT
        FROM(  
			  SELECT ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,
			  SUM(ACD.TOTAL_CPQ1) + SUM(ACD.TOTAL_CPQ2)+ SUM(ACD.TOTAL_CPQ3) + SUM(ACD.TOTAL_ACTUAL) AS TOTAL_ACTUAL,
			 	--BAGIAN DUITNYA
			  SUM(ACD.CPQ1_AMOUNT) + SUM(ACD.CPQ2_AMOUNT) + SUM(ACD.CPQ3_AMOUNT) + SUM(ACD.TOTAL_ACTUAL_AMOUNT) AS TOTAL_ACTUAL_AMOUNT,
			  SUM(ACD.TOTAL_PO_ORIGINAL) AS TOTAL_PO_ORIGINAL,SUM(ACD.TOTAL_PO_AMOUNT)AS TOTAL_PO_AMOUNT
			  FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACD ON ACRH.ACHIEVEMENT_ID = ACD.ACHIEVEMENT_ID
              WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.FLAG IN('Q1','Q2','Q3','Q4')
			  GROUP BY ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID
             )ACRH
         INNER JOIN(SELECT ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,ACD.TOTAL_ACTUAL
	     			FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACD ON ACRH.ACHIEVEMENT_ID = ACD.ACHIEVEMENT_ID
              	    WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.FLAG = 'Y'
                   )ACRH1 
         ON (ACRH.AGREEMENT_NO + ACRH.BRAND_ID + ACRH.DISTRIBUTOR_ID + ACRH.BRANDPACK_ID)
            = (ACRH1.AGREEMENT_NO + ACRH1.BRAND_ID + ACRH1.DISTRIBUTOR_ID + ACRH1.BRANDPACK_ID)
		WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.TOTAL_ACTUAL <> ACRH1.TOTAL_ACTUAL OPTION(KEEP PLAN);
   END
GO
---------------------------------------------------------------------------------------------
--IF EXISTS(SELECT NAME FROM DBOS.SYSOBJECTS WHERE NAME = 'Usp_GetReportSummaryPlantation' AND TYPE = 'P')
--DROP PROCEDURE  Usp_GetReportSummaryPlantation
--GO
--CREATE PROCEDURE Usp_GetReportSummaryPlantation
--AS
--SET DEADLOCK_PRIORITY NORMAL;SET NOCOUNT ON;
--SELECT 
--DECLARE @V_OA_BRANDPACK_ID VARCHAR(110);
--DECLARE CURSOR_BRANDPACK_ID CURSOR FOR
--SELECT OA_BRANDPACK_ID FROM(
--SELECT PO.PO_REF_DATE,OPB.PO_REF_NO,OOAB.OA_BRANDPACK_ID,ISNULL(OOAB.AGREE_DISC_QTY,0) + ISNULL(OOAB.PROG_DISC_QTY,0) + ISNULL(OOAB.OTHER_DISC_QTY,0)
--AS SUM_OA_DISCOUNT,OOBD.DISC_QTY AS TOTAL_DISC_QTY
--FROM ORDR_OA_BRANDPACK OOAB INNER JOIN(SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS DISC_QTY FROM ORDR_OA_BRANDPACK_DISC
--WHERE GQSY_SGT_P_FLAG != 'RMOA' GROUP BY OA_BRANDPACK_ID HAVING SUM(DISC_QTY) > 0 )OOBD
--ON OOBD.OA_BRANDPACK_ID = OOAB.OA_BRANDPACK_ID
--INNER JOIN ORDR_PO_BRANDPACK OPB ON OOAB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID
--INNER JOIN ORDR_PURCHASE_ORDER PO ON PO.PO_REF_NO = OPB.PO_REF_NO
--WHERE (ISNULL(OOAB.AGREE_DISC_QTY,0) + ISNULL(OOAB.PROG_DISC_QTY,0) + ISNULL(OOAB.OTHER_DISC_QTY,0)) > 0
--AND (ISNULL(OOAB.AGREE_DISC_QTY,0) + ISNULL(OOAB.PROG_DISC_QTY,0) + ISNULL(OOAB.OTHER_DISC_QTY,0)) <> OOBD.DISC_QTY 
--AND YEAR(PO.PO_REF_DATE) >= 2009
--)C;
--OPEN CURSOR_BRANDPACK_ID;
--FETCH NEXT FROM CURSOR_BRANDPACK_ID INTO @V_OA_BRANDPACK_ID;
--WHILE (@@FETCH_STATUS = 0)
--BEGIN
--exec Usp_Check_Sum_Mathching_Disc_Qty @OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID,
--@DISCOUNT_TYPE = 'Sales_Discount';
--FETCH NEXT FROM CURSOR_BRANDPACK_ID INTO @V_OA_BRANDPACK_ID;
--END
--CLOSE CURSOR_BRANDPACK_ID;
--DEALLOCATE CURSOR_BRANDPACK_ID;
--------------------------------------------------------------------------------
--
--DECLARE @V_OA_BRANDPACK_ID VARCHAR(110);
--DECLARE CURSOR_BRANDPACK_ID CURSOR FOR
--SELECT OA_BRANDPACK_ID FROM(
--SELECT PO.PO_REF_DATE,OPB.PO_REF_NO,OOAB.OA_BRANDPACK_ID,ISNULL(OOAB.AGREE_DISC_QTY,0) + ISNULL(OOAB.PROG_DISC_QTY,0) + ISNULL(OOAB.OTHER_DISC_QTY,0)
--AS SUM_OA_DISCOUNT,OOBD.DISC_QTY AS TOTAL_DISC_QTY
--FROM ORDR_OA_BRANDPACK OOAB INNER JOIN(SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS DISC_QTY FROM ORDR_OA_BRANDPACK_DISC
--WHERE GQSY_SGT_P_FLAG != 'RMOA' GROUP BY OA_BRANDPACK_ID HAVING SUM(DISC_QTY) > 0 )OOBD
--ON OOBD.OA_BRANDPACK_ID = OOAB.OA_BRANDPACK_ID
--INNER JOIN ORDR_PO_BRANDPACK OPB ON OOAB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID
--INNER JOIN ORDR_PURCHASE_ORDER PO ON PO.PO_REF_NO = OPB.PO_REF_NO
--WHERE (ISNULL(OOAB.AGREE_DISC_QTY,0) + ISNULL(OOAB.PROG_DISC_QTY,0) + ISNULL(OOAB.OTHER_DISC_QTY,0)) > 0
--AND (ISNULL(OOAB.AGREE_DISC_QTY,0) + ISNULL(OOAB.PROG_DISC_QTY,0) + ISNULL(OOAB.OTHER_DISC_QTY,0)) <> OOBD.DISC_QTY 
--AND YEAR(PO.PO_REF_DATE) >= 2009
--)C;
--OPEN CURSOR_BRANDPACK_ID;
--FETCH NEXT FROM CURSOR_BRANDPACK_ID INTO @V_OA_BRANDPACK_ID;
--WHILE (@@FETCH_STATUS = 0)
--BEGIN
--exec Usp_Check_Sum_Mathching_Disc_Qty @OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID,
--@DISCOUNT_TYPE = 'Agreement_Discount';
--FETCH NEXT FROM CURSOR_BRANDPACK_ID INTO @V_OA_BRANDPACK_ID;
--END
--CLOSE CURSOR_BRANDPACK_ID;
--DEALLOCATE CURSOR_BRANDPACK_ID;
--
---------------------------------------------------------------------------
--DECLARE @V_OA_BRANDPACK_ID VARCHAR(110);
--DECLARE CURSOR_BRANDPACK_ID CURSOR FOR
--SELECT OA_BRANDPACK_ID FROM(
--SELECT PO.PO_REF_DATE,OPB.PO_REF_NO,OOAB.OA_BRANDPACK_ID,ISNULL(OOAB.AGREE_DISC_QTY,0) + ISNULL(OOAB.PROG_DISC_QTY,0) + ISNULL(OOAB.OTHER_DISC_QTY,0)
--AS SUM_OA_DISCOUNT,OOBD.DISC_QTY AS TOTAL_DISC_QTY
--FROM ORDR_OA_BRANDPACK OOAB INNER JOIN(SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS DISC_QTY FROM ORDR_OA_BRANDPACK_DISC
--WHERE GQSY_SGT_P_FLAG != 'RMOA' GROUP BY OA_BRANDPACK_ID HAVING SUM(DISC_QTY) > 0 )OOBD
--ON OOBD.OA_BRANDPACK_ID = OOAB.OA_BRANDPACK_ID
--INNER JOIN ORDR_PO_BRANDPACK OPB ON OOAB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID
--INNER JOIN ORDR_PURCHASE_ORDER PO ON PO.PO_REF_NO = OPB.PO_REF_NO
--WHERE (ISNULL(OOAB.AGREE_DISC_QTY,0) + ISNULL(OOAB.PROG_DISC_QTY,0) + ISNULL(OOAB.OTHER_DISC_QTY,0)) > 0
--AND (ISNULL(OOAB.AGREE_DISC_QTY,0) + ISNULL(OOAB.PROG_DISC_QTY,0) + ISNULL(OOAB.OTHER_DISC_QTY,0)) <> OOBD.DISC_QTY 
--AND YEAR(PO.PO_REF_DATE) >= 2009
--)C;
--OPEN CURSOR_BRANDPACK_ID;
--FETCH NEXT FROM CURSOR_BRANDPACK_ID INTO @V_OA_BRANDPACK_ID;
--WHILE (@@FETCH_STATUS = 0)
--BEGIN
--exec Usp_Check_Sum_Mathching_Disc_Qty @OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID,
--@DISCOUNT_TYPE = 'Other_Discount';
--FETCH NEXT FROM CURSOR_BRANDPACK_ID INTO @V_OA_BRANDPACK_ID;
--END
--CLOSE CURSOR_BRANDPACK_ID;
--DEALLOCATE CURSOR_BRANDPACK_ID;
--
--2010-10-31 00:00:00
--
--2010-08-01 00:00:00
--
--
--
--EXEC Usp_Create_Temp_Invoice_Table
--@DEC_START_DATE =20100801 ,
--@DEC_END_DATE = 20101031
--
-- SELECT PO.DISTRIBUTOR_ID,ABI.BRAND_ID,ABP.BRANDPACK_ID,(ISNULL(INV.QTY,0)/SB.SPPB_QTY)* OPB.PO_ORIGINAL_QTY AS QTY
--	      FROM Nufarm.dbo.AGREE_BRAND_INCLUDE ABI 
--	      INNER JOIN Nufarm.DBO.AGREE_BRANDPACK_INCLUDE ABP ON ABI.AGREE_BRAND_ID = ABP.AGREE_BRAND_ID
--	      INNER JOIN Nufarm.dbo.ORDR_PO_BRANDPACK OPB ON OPB.BRANDPACK_ID = ABP.BRANDPACK_ID
--	      INNER JOIN Nufarm.dbo.ORDR_PURCHASE_ORDER PO
--	      ON PO.PO_REF_NO = OPB.PO_REF_NO INNER JOIN Nufarm.dbo.ORDR_ORDER_ACCEPTANCE OOA
--	      ON OOA.PO_REF_NO = PO.PO_REF_NO
--	      
-- 	      INNER JOIN ORDR_OA_BRANDPACK OOAB ON OOA.OA_ID = OOAB.OA_ID
--	      INNER JOIN SPPB_BRANDPACK SB ON SB.OA_BRANDPACK_ID = OOAB.OA_BRANDPACK_ID
--	      INNER JOIN COMPARE_ITEM Tmbp ON OPB.BRANDPACK_ID = Tmbp.BRANDPACK_ID_DTS
--	      INNER JOIN ##T_SELECT_INVOICE INV ON Tmbp.BRANDPACK_ID_ACCPAC = INV.BRANDPACK_ID
--	      	    AND (PO.PO_REF_NO = INV.PONUMBER OR OOA.RUN_NUMBER = INV.REFERENCE) 
--	      WHERE PO.DISTRIBUTOR_ID = SOME( 
--	          			      SELECT DISTRIBUTOR_ID FROM Nufarm.DBO.DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = '01033/NI/IX/09-1L.10'
--	         			     )
--	      AND ABI.AGREEMENT_NO = '01033/NI/IX/09-1L.10' AND ABP.AGREEMENT_NO = '01033/NI/IX/09-1L.10'
--	      AND OPB.PO_ORIGINAL_QTY > 0	
--
-- SELECT OPO.DISTRIBUTOR_ID,ABI.BRAND_ID,ABP.BRANDPACK_ID,(ISNULL(INVOICE.QTY,0)/SB.SPPB_QTY) * OPB.PO_ORIGINAL_QTY AS QTY
--		   FROM Nufarm.dbo.AGREE_BRAND_INCLUDE ABI 
--		   INNER JOIN Nufarm.DBO.AGREE_BRANDPACK_INCLUDE ABP ON ABI.AGREE_BRAND_ID = ABP.AGREE_BRAND_ID
--		   INNER JOIN Nufarm.dbo.ORDR_PO_BRANDPACK OPB ON OPB.BRANDPACK_ID = ABP.BRANDPACK_ID
--		   INNER JOIN Nufarm.dbo.ORDR_PURCHASE_ORDER OPO
--		   ON OPO.PO_REF_NO = OPB.PO_REF_NO INNER JOIN Nufarm.dbo.ORDR_ORDER_ACCEPTANCE OOA
--	           ON OOA.PO_REF_NO = OPO.PO_REF_NO
--	           INNER JOIN ORDR_OA_BRANDPACK OOAB ON OOAB.OA_ID = OOA.OA_ID
--	           INNER JOIN SPPB_BRANDPACK SB ON OOAB.OA_BRANDPACK_ID = SB.OA_BRANDPACK_ID
--		   LEFT OUTER JOIN (
--		                     SELECT INV.PONUMBER,INV.REFERENCE,Tmbp.BRANDPACK_ID_DTS AS BRANDPACK_ID,INV.QTY 
--		                     FROM ##T_SELECT_INVOICE INV INNER JOIN COMPARE_ITEM Tmbp 
--		                     ON INV.BRANDPACK_ID =  Tmbp.BRANDPACK_ID_ACCPAC 
--		    	            )INVOICE
--		   ON ABP.BRANDPACK_ID = INVOICE.BRANDPACK_ID
--		   AND (OOA.PO_REF_NO = INVOICE.PONUMBER OR OOA.RUN_NUMBER = INVOICE.REFERENCE)
--		   WHERE OPO.DISTRIBUTOR_ID 
--		   = SOME( 
--		          SELECT DISTRIBUTOR_ID FROM Nufarm.DBO.DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = '01033/NI/IX/09-1L.10'
--		          )
--		   AND ABI.AGREEMENT_NO = '01033/NI/IX/09-1L.10' AND ABP.AGREEMENT_NO = '01033/NI/IX/09-1L.10'
--		   AND OPB.PO_ORIGINAL_QTY > 0
--
--SELECT * FROM ##T_SELECT_INVOICE ORDER BY INVDATE DESC
--
--exec Usp_Get_Invoice_by_Invoice_Date @START_DATE = 'Apr  1 2011 12:00AM', @END_DATE = 'Jun  1 2011 12:00AM', @DISTRIBUTOR_ID = NULL
--
--exec Usp_Get_Invoice_by_Invoice_Date @START_DATE = 'Apr  5 2011 12:00AM', @END_DATE = 'Jun  3 2011 12:00AM', @DISTRIBUTOR_ID = NULL
--SELECT [ROWS] +1  FROM tempdb.dbo.sysindexes  WHERE id = OBJECT_ID('TEMPDB..##T_SELECT_INVOICE') AND INDID < 2 
--
--select * from tempdb.dbo.sysIndexES WHERE [ID] = '2073058421'
--
--SELECT * FROM TEMPDB.DBO.SYSINDEXES WHERE [ID] = OBJECT_ID(N'##T_START_DATE')
--
--SELECT TOP 1 [rows] from Sysindexes WHERE [ID] = OBJECT_ID('TERRITORY') AND INDID < 2
--
--SELECT * FROM (SELECT INV.INVNUMBER,INV.INVDATE,OH.ORDNUMBER,OH.PONUMBER,OEO.OPTFIELD,OEO.VALUE FROM NI87.DBO.OEORDHO OEO INNER JOIN 
--NI87.DBO.OEORDH OH ON OEO.ORDUNIQ = OH.ORDUNIQ
--INNER JOIN NI87.DBO.OEINVH INV ON INV.PONUMBER = OH.PONUMBER
-- WHERE RTRIM(OH.PONUMBER) LIKE '%001/8M/NI/RUB/14%' and RTRIM(OEO.OPTFIELD) = 'DTSREF' )C
--
--
--
--
--SELECT * FROM COMPARE_ITEM WHERE BRANDPACK_NAME LIKE '%PADAN%'
--
--UPDATE COMPARE_ITEM SET BRANDPACK_ID_ACCPAC = '11023500G'
--WHERE BRANDPACK_ID_ACCPAC = '11023500K' AND BRANDPACK_NAME LIKE  '%PADAN%';
--
--
--UPDATE COMPARE_ITEM SET BRANDPACK_ID_ACCPAC = '11024500G'
--WHERE BRANDPACK_ID_ACCPAC = '11024500K' AND BRANDPACK_NAME LIKE  '%PADAN%';
--
--
--SELECT * FROM NI87.DBO.OEORDHO WHERE --RTRIM(OPTFIELD) = 'DTSREF'
----AND
-- RTRIM(VALUE) = '00018823' OR RTRIM(VALUE) LIKE '%00018823%'
----
----
--SELECT * FROM NI87.DBO.OEORDHO WHERE --RTRIM(OPTFIELD) = 'DTSREF'
----AND
-- RTRIM(VALUE) = '00018824' OR RTRIM(VALUE) LIKE '%00018824%'
--
--
--
--SELECT * FROM NI87.DBO.OEORDHO WHERE --RTRIM(OPTFIELD) = 'DTSREF'
----AND
-- RTRIM(VALUE) = '008127' OR RTRIM(VALUE) LIKE '%008127%'
--
--
--IF NOT EXISTS(SELECT [NAME] FROM tempdb.DBO.SysObjects WHERE [NAME] = '##T_Disc_OA' AND TYPE = 'U') 
--  BEGIN 
--  SELECT OPB.PO_BRANDPACK_ID,OOAB.OA_BRANDPACK_ID,OOAB.OA_ORIGINAL_QTY + ISNULL(OOBD.DISC_QTY,0)AS TOTAL_QTY INTO ##T_Disc_OA 
--  FROM ORDR_OA_BRANDPACK OOAB LEFT OUTER JOIN 
--  ( 
--   SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS DISC_QTY FROM ORDR_OA_BRANDPACK_DISC WHERE CREATE_DATE >= '08/01/2010' 
--   AND GQSY_SGT_P_FLAG IN('MG','KP','CP','CR','DK','O','S1','S2','Q1','Q2','Q3','Q4','Y') GROUP BY OA_BRANDPACK_ID 
--   )OOBD ON OOAB.OA_BRANDPACK_ID = OOBD.OA_BRANDPACK_ID 
--  INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_BRANDPACK_ID = OOAB.PO_BRANDPACK_ID 
--  WHERE (OOAB.OA_ORIGINAL_QTY + ISNULL(OOBD.DISC_QTY,0)) > 0  AND OOAB.CREATE_DATE >= '08/01/2010' ; 
--  CREATE CLUSTERED INDEX IX_T_Disc_OA ON ##T_Disc_OA(PO_BRANDPACK_ID) 
--END
--
--SELECT * INTO ##T_INV FROM(
--SELECT PO.REGIONAL_AREA,PO.TERRITORY_AREA,PO.DISTRIBUTOR_ID,PO.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_DATE,
--	        PO.BRANDPACK_ID,PO.BRANDPACK_NAME,PO.PO_ORIGINAL_QTY,PO.CREATED_PO_BY,
--		INV.INVNUMBER AS INVOICE_NUMBER,INV.INVDATE,
--	        INV.QTY AS TOTAL_SHIPMENT,INV.AUDTUSER AS CREATED_INVOICE_BY,DATENAME(MONTH,INV.INVDATE)AS [MONTH]
--		FROM  
--	   	    (
--	      		SELECT REG.REGIONAL_AREA,TER.TERRITORY_AREA,PO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_REF_DATE AS PO_DATE,
--	                OOA.RUN_NUMBER,OOA.OA_ID,OPB.PO_BRANDPACK_ID,OPB.BRANDPACK_ID,BB.BRANDPACK_NAME,
--	      		OPB.PO_ORIGINAL_QTY,OPB.CREATE_BY AS CREATED_PO_BY
--	     		FROM Nufarm.dbo.ORDR_PURCHASE_ORDER PO INNER JOIN Nufarm.dbo.ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = PO.PO_REF_NO
-- 			INNER JOIN Nufarm.dbo.ORDR_ORDER_ACCEPTANCE OOA ON OOA.PO_REF_NO = PO.PO_REF_NO
--	      		INNER JOIN Nufarm.dbo.BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID
--	      		INNER JOIN Nufarm.dbo.DIST_DISTRIBUTOR DR ON PO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
--	     	    	INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
--                        INNER JOIN DIST_REGIONAL REG ON REG.REGIONAL_ID = TER.REGIONAL_ID
--                    )PO
--		LEFT OUTER JOIN(
--	                         SELECT INV.PONUMBER,INV.INVNUMBER,INV.REFERENCE,Tmbp.BRANDPACK_ID_DTS AS BRANDPACK_ID,INV.QTY,INV.AUDTUSER
--			          ,CAST( '' + SUBSTRING(CAST(INV.INVDATE AS VARCHAR(20)),5,2) + 
--			  	 '/' + RIGHT(CAST(INV.INVDATE AS VARCHAR(20)),2) +  '/' + LEFT(CAST(INV.INVDATE AS VARCHAR(20)),4)
--				 AS SMALLDATETIME)AS INVDATE
--                                 FROM COMPARE_ITEM Tmbp INNER JOIN ##T_SELECT_INVOICE INV
--	                         ON Tmbp.BRANDPACK_ID_ACCPAC = INV.BRANDPACK_ID
--                                 WHERE INV.QTY IS NOT NULL AND INV.QTY > 0
--				 --AND INV.INVDATE <= @DEC_END_DATE AND INVDATE >= @DEC_START_DATE
--			        )INV
--	     	ON INV.BRANDPACK_ID = PO.BRANDPACK_ID AND (INV.REFERENCE = PO.RUN_NUMBER)
--	      	 --INV.INVDATE <= @DEC_END_DATE AND INVDATE >= @DEC_START_DATE--  --INV.INVDATE <= @DEC_END_DATE
--		--AND 
--               WHERE PO.PO_DATE >= '08/01/2010' AND PO.PO_DATE <= '07/30/2011'
--)V
--
-- CREATE CLUSTERED INDEX IX_T_INV_1 ON ##T_INV(INVDATE,PO_DATE,DISTRIBUTOR_ID,BRANDPACK_ID); 
--
--EXEC Usp_Create_Temp_Invoice_Table
--@DEC_START_DATE = 20100801,@DEC_END_DATE = 20110730
------
--SELECT * FROM NI87.DBO.OEORDHO WHERE RTRIM(OPTFIELD) = 'DTSREF'
--AND
--RTRIM(VALUE) = '00018823' OR RTRIM(VALUE) LIKE '%00018823%'
------
--
--SELECT * FROM NI87.DBO.OEORDH WHERE ORDUNIQ IN('1318206','1318205');
----OC14063208 = .A
--
--SELECT * FROM NI87.DBO.OEINVH WHERE RTRIM(PONUMBER) = '001/8M/NI/RUB/14'
--
--
--SELECT * FROM NI87.DBO.OEINVH WHERE PONUMBER = '001/IK/PO-NF/VIII/2013'
--OC14063207            
--OC14063208
--
--UPDATE NI87.DBO.OEINVH SET PONUMBER = 'SAP:2014/04/05'
--WHERE  INVUNIQ = '538862';
--           
--SELECT * FROM NI87.DBO.OEINVD WHERE  INVUNIQ IN('518146','511865','510860')-- '416309'
--
--
--SELECT PONUMBER,ORDNUMBER,INVUNIQ,INVNUMBER FROM NI87.DBO.OEINVH WHERE PONUMBER  IN('001/8M/NI/RUB/14','001/8M/NI/RUB/14.A')  
--ORDER BY INVNUMBER DESC; 
--SELECT PONUMBER,ORDNUMBER,LASTINVNUM 
-- FROM NI87.DBO.OEORDH WHERE PONUMBER LIKE '%001/8M/NI/RUB/14%' --AND RTRIM(SHPSTATE) = 'Jawa Tengah'
--ORDER BY  LASTINVNUM DESC;                
--
--SELECT * FROM NI87.DBO.OEINVD WHERE  INVUNIQ IN('518146','511865','510860')-- '416309'

--SELECT * FROM NI87.DBO.OEINVH WHERE PONUMBER = 'SAP:2013/03/018'       
--SELECT * FROM NI87.DBO.OEINVD WHERE  INVUNIQ = 433966


--SELECT C.*,LEN(C.VALUE)AS PANJANG_VALUE,LEN(C.OPTFIELD) AS PANJANG_OPTFIELD
--FROM(SELECT * FROM NI87.DBO.OEORDHO WHERE --RTRIM(OPTFIELD) = 'DTSREF'
----AND
-- RTRIM(VALUE) = '00018823' OR RTRIM(VALUE) LIKE '%00018823%'
--)C




--SAM/I/2009        

--ALTER PROCEDURE [dbo].[Usp_Changed_Acrue_BY_Year_Detail]
--@AGREEMENT_NO VARCHAR(32)
--AS
--SET DEADLOCK_PRIORITY NORMAL; SET NOCOUNT ON; 
--DECLARE @V_QS_TREATMENT_FLAG CHAR(1);
--SET @V_QS_TREATMENT_FLAG = (SELECT TOP 1 QS_TREATMENT_FLAG FROM AGREE_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO);
--IF (@V_QS_TREATMENT_FLAG = 'S')
--   BEGIN
--        SELECT ACRH.AGREEMENT_NO + ACRH.BRAND_ID AS AGREE_BRAND_ID,ACRH.DISTRIBUTOR_ID,ACRH.BRANDPACK_ID,ACRH.TOTAL_ACTUAL,
--	ACRH.TOTAL_PO_ORIGINAL
--        FROM(  
--	      SELECT ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,ISNULL(SUM(ACD.TOTAL_ACTUAL),0) AS TOTAL_ACTUAL,
--	      SUM(ACD.TOTAL_PO_ORIGINAL) AS TOTAL_PO_ORIGINAL
--	      FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACD ON ACRH.ACHIEVEMENT_ID = ACD.ACHIEVEMENT_ID
--             WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.FLAG IN('S1','S2')
--	      GROUP BY ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID
--             )ACRH
--        INNER JOIN(SELECT ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,ACD.TOTAL_ACTUAL
--	     	   FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACD ON ACRH.ACHIEVEMENT_ID = ACD.ACHIEVEMENT_ID
--              	   WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.FLAG = 'Y'
--                   )ACRH1 
--        ON (ACRH.AGREEMENT_NO + ACRH.BRAND_ID + ACRH.DISTRIBUTOR_ID + ACRH.BRANDPACK_ID)
--         = (ACRH1.AGREEMENT_NO + ACRH1.BRAND_ID + ACRH1.DISTRIBUTOR_ID + ACRH1.BRANDPACK_ID)
--	WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.TOTAL_ACTUAL <> ACRH1.TOTAL_ACTUAL OPTION(KEEP PLAN);
--   END
--ELSE IF (@V_QS_TREATMENT_FLAG = 'Q')
--   BEGIN
--	SELECT ACRH.AGREEMENT_NO + ACRH.BRAND_ID AS AGREE_BRAND_ID,ACRH.DISTRIBUTOR_ID,ACRH.BRANDPACK_ID,ACRH.TOTAL_ACTUAL,
--	ACRH.TOTAL_PO_ORIGINAL
--       FROM(  
--	      SELECT ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,ISNULL(SUM(ACD.TOTAL_ACTUAL),0) AS TOTAL_ACTUAL,
--	      SUM(ACD.TOTAL_PO_ORIGINAL) AS TOTAL_PO_ORIGINAL
--	      FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACD ON ACRH.ACHIEVEMENT_ID = ACD.ACHIEVEMENT_ID
--              WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.FLAG IN('Q1','Q2','Q3','Q4')
--	      GROUP BY ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID
--             )ACRH
--         INNER JOIN(SELECT ACRH.AGREEMENT_NO,ACRH.BRAND_ID,ACRH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,ACD.TOTAL_ACTUAL
--	     	    FROM ACCRUED_HEADER ACRH INNER JOIN ACCRUED_DETAIL ACD ON ACRH.ACHIEVEMENT_ID = ACD.ACHIEVEMENT_ID
--             	    WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.FLAG = 'Y'
--                   )ACRH1 
--         ON (ACRH.AGREEMENT_NO + ACRH.BRAND_ID + ACRH.DISTRIBUTOR_ID + ACRH.BRANDPACK_ID)
--         = (ACRH1.AGREEMENT_NO + ACRH1.BRAND_ID + ACRH1.DISTRIBUTOR_ID + ACRH1.BRANDPACK_ID)
--	WHERE ACRH.AGREEMENT_NO = @AGREEMENT_NO AND ACRH.TOTAL_ACTUAL <> ACRH1.TOTAL_ACTUAL OPTION(KEEP PLAN);
--   END

--SELECT * FROM ##T_SELECT_INVOICE WHERE BRANDPACK_NAME LIKE '%METAFURON 20 WG @ 500 GR - D%'
--
--
--

--
--
--SELECT *  FROM NI87.DBO.OEORDH PO --INNER JOIN NI87.DBO.OEORDHO PO1 ON PO.ORDUNIQ = PO1.ORDUNIQ
--WHERE NOT EXISTS(SELECT PONUMBER FROM NI87.DBO.OEINVH
--WHERE PONUMBER = PO.PONUMBER)AND PO.ORDDATE >= 20100801
--
--AND RTRIM(PO1.OPTFIELD) = 'DTSREF'
--
--


--SELECT DISTINCT PONUMBER FROM(
-- SELECT OPO.DISTRIBUTOR_ID,ABI.BRAND_ID,ABP.BRANDPACK_ID,OPO.PO_REF_NO ,OPO.PO_REF_DATE, INVOICE.INVNUMBER,INVOICE.BRANDPACK_ID_ACCPAC,INVOICE.REFERENCE,INVOICE.PONUMBER,
--(ISNULL(INVOICE.QTY,0)/SB.TOTAL_QTY) * 
--OPB.PO_ORIGINAL_QTY AS QTY
--		   FROM Nufarm.dbo.AGREE_BRAND_INCLUDE ABI 
--		   INNER JOIN Nufarm.DBO.AGREE_BRANDPACK_INCLUDE ABP ON ABI.AGREE_BRAND_ID = ABP.AGREE_BRAND_ID
--		   INNER JOIN Nufarm.dbo.ORDR_PO_BRANDPACK OPB ON OPB.BRANDPACK_ID = ABP.BRANDPACK_ID
--		   INNER JOIN Nufarm.dbo.ORDR_PURCHASE_ORDER OPO
--		   ON OPO.PO_REF_NO = OPB.PO_REF_NO INNER JOIN Nufarm.dbo.ORDR_ORDER_ACCEPTANCE OOA
--	           ON OOA.PO_REF_NO = OPO.PO_REF_NO
--	           INNER JOIN ORDR_OA_BRANDPACK OOAB ON OOAB.OA_ID = OOA.OA_ID AND OOAB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID
--	           INNER JOIN ##T_Disc_OA SB ON SB.OA_BRANDPACK_ID = OOAB.OA_BRANDPACK_ID
--		   RIGHT OUTER JOIN (
--		                    SELECT INV.INVNUMBER,INV.PONUMBER,INV.REFERENCE,Tmbp.BRANDPACK_ID_DTS AS BRANDPACK_ID,inv.BRANDPACK_ID AS BRANDPACK_ID_ACCPAC,INV.QTY 
--		                    FROM ##T_SELECT_INVOICE INV INNER JOIN COMPARE_ITEM Tmbp 
--		                     ON INV.BRANDPACK_ID =  Tmbp.BRANDPACK_ID_ACCPAC WHERE QTY >0
--		    	            )INVOICE
--		   ON ABP.BRANDPACK_ID = INVOICE.BRANDPACK_ID
--		   AND (OOA.PO_REF_NO = INVOICE.PONUMBER OR OOA.RUN_NUMBER = INVOICE.REFERENCE)
--		   WHERE OPO.DISTRIBUTOR_ID 
--		   = SOME( 
--		          SELECT DISTRIBUTOR_ID FROM Nufarm.DBO.DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = '1103/NI/X/2008-1L.10'
--		          )
--		   AND ABI.AGREEMENT_NO = '1103/NI/X/2008-1L.10' AND ABP.AGREEMENT_NO = '1103/NI/X/2008-1L.10'
--		   AND OPB.PO_ORIGINAL_QTY > 0
--AND QTY> 0
--
--SELECT * FROM ##T_SELECT_INVOICE WHERE RTRIM(PONUMBER)= '005/IK/PO-NF/I/2012'
--
--SELECT * FROM ##T_SELECT_INVOICE WHERE BRANDPACK_ID = '00601001L'
--
--SELECT * FROM ##T_SELECT_INVOICE WHERE INVNUMBER = 'IN11030977' AND QTY >0           
--
--SELECT * FROM AGREE_BRAND_INCLUDE WHERE AGREEMENT_NO = '1103/NI/X/2008-1L.10'
--
--
--
--SELECT * FROM ##T_SELECT_INVOICE WHERE REFERENCE LIKE '%009110%'
--
--SELECT PONUMBER,INVNUMBER,INVUNIQ,INVDATE FROM NI87.DBO.OEINVH WHERE RTRIM(PONUMBER) LIKE '%84/ATU/VII/2015%'              
--
--SELECT PONUMBER,INVNUMBER,INVUNIQ,INVDATE FROM NI87.DBO.OEINVH WHERE RTRIM(PONUMBER) LIKE '%001/ASJ-PO/I/2012%'   
--
--SELECT * FROM ORDR_ORDER_ACCEPTANCE WHERE RUN_NUMBER = ANY(
--SELECT RUN_NUMBER FROM(
--SELECT RUN_NUMBER,COUNT(RUN_NUMBER)AS JUMLAH
--FROM ORDR_ORDER_ACCEPTANCE GROUP BY RUN_NUMBER HAVING COUNT(RUN_NUMBER) > 1)C)
--AND  OA_DATE >= '08/01/2010'
--ORDER BY OA_DATE,RUN_NUMBER DESC;
--
--SELECT * FROM NI87.DBO.OEINVD WHERE INVUNIQ = RTRIM(656559)
--SELECT * FROM NI87.DBO.OEINVD WHERE  RTRIM(INVUNIQ) = 267248
--SELECT * FROM NI87.DBO.OEINVD WHERE  RTRIM(INVUNIQ) = 269695
--
--
--SELECT * FROM ORDR_ORDER_ACCEPTANCE WHERE OA_ID LIKE '%006717%'
--SELECT * FROM ##T_SELECT_INVOICE WHERE REFERENCE = '006716'
--
--
--
--
--SELECT NVD.* FROM NI87.DBO.OEINVD NVD INNER JOIN NI87.DBO.OEINVH INVH ON NVD.INVUNIQ = INVH.INVUNIQ WHERE INVH.PONUMBER LIKE '%84/ATU/VII/2015%'
--

----316082
--SELECT * FROM NI87.DBO.OEINVH WHERE PONUMBER LIKE '%012-014/PKNN/VIII/2012%'
--SELECT ORDNUMBER,PONUMBER,INVNUMBER,INVDATE,SHINUMBER,AUDTUSER,ENTEREDBY FROM NI87.DBO.OEINVH WHERE PONUMBER LIKE '%012-102/PKNN/V/2012%'
--SELECT * FROM NI87.DBO.OEORDHO WHERE RTRIM(OPTFIELD) = 'DTSREF' AND RTRIM(VALUE) = '013312' OR RTRIM(VALUE) LIKE '%013312%'
--
----
--SELECT PONUMBER,REFERENCE,INVNUMBER,COMMENT,ENTEREDBY FROM OEINVH WHERE PONUMBER = 
--ANY(SELECT PONUMBER FROM OEORDH WHERE ORDUNIQ = ANY(SELECT ORDUNIQ FROM OEORDHO WHERE  RTRIM(VALUE) = '013959' AND RTRIM(OPTFIELD) = 'DTSREF'))
----
--SELECT * FROM NI87.DBO.OEORDH WHERE RTRIM(ORDUNIQ) = '013959'
--
---SELECT * FROM NI87.DBO.OEORDH WHERE ORTRIM(ORDUNIQ) IN('1149723','1149725')


--
--SELECT * FROM NI87.DBO.OEORDH WHERE PONUMBER LIKE '%PO000375.A%'
--
--SELECT * FROM NI87.DBO.OEINVH WHERE RTRIM(PONUMBER) LIKE '%PO000375.A%%'
--
--
--SELECT * FROM NI87.DBO.OEINVH WHERE RTRIM(PONUMBER) LIKE '%019/KIU/V/2015%'
--SELECT * FROM NI87.DBO.OEINVH WHERE RTRIM(INVNUMBER) like '%IN15104578%'  
---- 005/IK/PO-NF/I/2012
----
--SELECT * FROM NI87.DBO.OEINVD WHERE RTRIM(INVUNIQ) = '538862'
--
--SELECT * FROM NI87.DBO.OEINVD WHERE RTRIM(INVUNIQ) in('642493','648494');

-- 
--SELECT * FROM NI87.DBO.OEORDHO WHERE RTRIM(VALUE) = '00023635' AND RTRIM(OPTFIELD) = 'DTSREF'
--SELECT * FROM NI87.DBO.OEORDH WHERE RTRIM(ORDUNIQ) IN('1520897','1524858')--SELECT * FROM ACCRUED_HEADER WHERE GP_ID IS NOT NULL AND FLAG = 'Y'

 --SELECT CRDH.CRDUNIQ,CRDH.INVNUMBER,CRDH.CRDDATE,CRD.ITEM,ISNULL(CRD.QTYRETURN,0)AS QTYRETURN
 --                         FROM NI87.DBO.OECRDH CRDH INNER JOIN 
 --                         (
 --                           SELECT CRDUNIQ,ITEM,ISNULL(SUM(QTYRETURN),0)AS QTYRETURN
 --                           FROM NI87.DBO.OECRDD WHERE LINETYPE = 1 AND (RTRIM(ACCTSET) = 'FG' OR RTRIM(ACCTSET) = 'FGST')
	--					    GROUP BY CRDUNIQ,ITEM
 --                          )CRD ON CRDH.CRDUNIQ = CRD.CRDUNIQ      
 --                      WHERE RTRIM(INVNUMBER) IN('IN15104578','IN15104578.')   
 
 --019/KIU/V/2015                 
 --019/KIU/V/2015        
 UPDATE ACCRUED_DETAIL SET BRANDPACK_ID = '00790001LD',ACHIEVEMENT_BRANDPACK_ID = 'SAN201IDR|555/NI/V/2004.1400790|S2|00790001LD'
 WHERE ACHIEVEMENT_BRANDPACK_ID = 'SAN201IDR|555/NI/V/2004.1400790|S2|007900000D'

  UPDATE ACCRUED_DETAIL SET BRANDPACK_ID = '00790001LD',ACHIEVEMENT_BRANDPACK_ID = 'SAN201IDR|555/NI/V/2004.1400790|Y|00790001LD'
 WHERE ACHIEVEMENT_BRANDPACK_ID = 'SAN201IDR|555/NI/V/2004.1400790|Y|007900000D'
Use Nufarm; 
GO
IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE [COLUMN_NAME] = 'TOTAL_PBS2' AND [TABLE_NAME] = 'ACHIEVEMENT_HEADER')
BEGIN
ALTER TABLE ACHIEVEMENT_HEADER ADD TOTAL_PBS2 DECIMAL(18,3) NULL;
END
GO
UPDATE ACHIEVEMENT_HEADER SET TOTAL_PBS2 = 0 WHERE TOTAL_PBS2 IS NULL;
ALTER TABLE ACHIEVEMENT_HEADER ADD DEFAULT 0 FOR TOTAL_PBS2;
GO
IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE [COLUMN_NAME] = 'PBS2_DIST' AND [TABLE_NAME] = 'ACHIEVEMENT_HEADER')
BEGIN
ALTER TABLE ACHIEVEMENT_HEADER ADD PBS2_DIST DECIMAL(18,3) NULL;
END
GO
UPDATE ACHIEVEMENT_HEADER SET PBS2_DIST = 0 WHERE PBS2_DIST IS NULL;
ALTER TABLE ACHIEVEMENT_HEADER ADD DEFAULT 0 FOR PBS2_DIST;
GO

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE [COLUMN_NAME] = 'TOTAL_PBS2' AND [TABLE_NAME] = 'ACHIEVEMENT_DETAIL')
BEGIN
ALTER TABLE ACHIEVEMENT_DETAIL ADD TOTAL_PBS2 DECIMAL(18,3) NULL;
END
GO
UPDATE ACHIEVEMENT_DETAIL SET TOTAL_PBS2 = 0 WHERE TOTAL_PBS2 IS NULL;
ALTER TABLE ACHIEVEMENT_DETAIL ADD DEFAULT 0 FOR TOTAL_PBS2;
GO

IF EXISTS(SELECT NAME FROM [sys].[objects] WHERE NAME = 'Usp_Create_Temp_Table_BrandPack_NI109' AND TYPE = 'P')
DROP PROCEDURE Usp_Create_Temp_Table_BrandPack_NI109
GO
CREATE PROCEDURE Usp_Create_Temp_Table_BrandPack_NI109
AS 
SET NOCOUNT ON;
SELECT BP.BRANDPACK_NAME,BR.BRAND_NAME AS BRAND_ACCPAC,BB1.BRAND_ID AS BRAND_ID_DTS,
BP.BRANDPACK_ID AS BRANDPACK_ID_DTS,BR.BRAND_ID AS BRAND_ID_ACCPAC
,(BR.BRAND_ID + '' + CASE RTRIM(BP.UNIT)
WHEN ('LITRE')THEN
        (SELECT DevidedQty = CASE 
          WHEN (P.QUANTITY >=1 AND P.QUANTITY <= 9) 
             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'L') 
          WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'L')
          WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999)
             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'L')
            END
         )  
WHEN ('MILILITRE') THEN
      (SELECT DevidedQty = CASE 
       WHEN (P.QUANTITY >= 1 AND P.QUANTITY <= 9) 
             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'M') 
       WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'M')
       WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999 )
             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'M')
	END
         )  	      
WHEN ('KILOGRAM') THEN
      (SELECT DevidedQty = CASE 
       WHEN (BP.DEVIDED_QUANTITY >= 0.001 AND BP.DEVIDED_QUANTITY <= 0.009)
             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G') 
       WHEN (BP.DEVIDED_QUANTITY >= 0.10 AND BP.DEVIDED_QUANTITY <= 0.09)
	     THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G')
       WHEN (BP.DEVIDED_QUANTITY >= 0.1 AND BP.DEVIDED_QUANTITY <= 0.9)
	     THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G') 
       WHEN (P.QUANTITY >=1 AND P.QUANTITY <= 9) 
             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K') 
       WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K')
       WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999)
             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K')
	END
         )  	
WHEN ('GRAM') THEN
      (SELECT DevidedQty = CASE 
       WHEN (P.QUANTITY >=1 AND P.QUANTITY <= 9) 
             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G') 
       WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G')
       WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999)
             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G')
       END 
      )
WHEN('SACHET') THEN
       (SELECT DevidedQty = CASE 
       WHEN (P.QUANTITY >=1 AND P.QUANTITY <= 9) 
             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'S') 
       WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'S')
       WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999)
             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'S')
       END 
      )   	
WHEN ('BAGS') THEN
      (SELECT DevidedQty = CASE 
       WHEN (P.QUANTITY >=1 AND P.QUANTITY <= 9) 
             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K') 
       WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K')
       WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999)
             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K')
	END
       )  
END	
)AS BRANDPACK_ID_ACCPAC
INTO ##T_BRANDPACK
FROM(SELECT DISTINCT RIGHT(RTRIM(SEG.SEGMENT1),1) + '' + RTRIM(SEG.SEGMENT2)AS BRAND_ID,
       UPPER(RTRIM(IC1.[DESC])) AS BRAND_NAME
       FROM NI109.dbo.ICITEM SEG INNER JOIN NI109.dbo.ICCATG  IC1 ON IC1.CATEGORY = SEG.CATEGORY
       WHERE (RTRIM(SEG.ITEMBRKID) = 'FG' OR  RTRIM(SEG.ITEMBRKID) = 'FGST') AND UPPER(IC1.[DESC]) NOT LIKE '%BULK%'
       AND UPPER(IC1.[DESC]) NOT LIKE '%OTHERS%' AND UPPER(IC1.[DESC]) NOT LIKE '%GARBAGES%' AND UPPER(IC1.[DESC]) NOT LIKE '%-E' 
       AND UPPER(IC1.[DESC]) NOT LIKE '%EXPORT%' AND UPPER(IC1.[DESC]) NOT LIKE '%EXP%'
      )BR
INNER JOIN(SELECT BRAND_ID,BRAND_NAME,BRAND_ID_ACCPAC = CASE REPLACE(BRAND_ID,'-','')
	--ROUNDUP
		WHEN '006020' THEN '00060' WHEN '0060200' THEN '00060'
		WHEN '00604' THEN '00060' WHEN '00601' THEN '00060'
		-----CHIX--
		WHEN '01006' THEN '11006' 
                -------LUGEN---------------------------------------------
		WHEN '01001' THEN '11001'-----------------------------------------
		---GIBGRO
		WHEN '00896' THEN '30896' WHEN '00897' THEN '30897' WHEN '00898' THEN '30898'                
		--MICROTHIOL---
		WHEN '07017' THEN '77017' WHEN '07009' THEN '77009' WHEN '07008' THEN '77008' 
		--KUPROXAT
		WHEN '077001' THEN '77001'
		---BIMARON--
		WHEN '00325' THEN '00310'
                --PRODUCT EXPORT 02-2014
		WHEN '022010' THEN '22010' WHEN '022003' THEN '22003' WHEN '022034' THEN '22034'
		WHEN '022006' THEN '22006' WHEN '022012' THEN '22012' WHEN '022011' THEN '22011'
		ELSE BRAND_ID END
            FROM Nufarm.dbo.BRND_BRAND WHERE BRAND_NAME NOT LIKE 'OTHERS'
           )BB1    
ON BB1.BRAND_ID_ACCPAC = BR.BRAND_ID 
 OR SUBSTRING(BB1.BRAND_ID_ACCPAC,2,5) = BR.BRAND_ID OR RTRIM(BB1.BRAND_NAME) LIKE RTRIM(BR.BRAND_NAME) + '%'
INNER JOIN Nufarm.dbo.BRND_BRANDPACK BP ON BP.BRAND_ID = BB1.BRAND_ID
INNER JOIN Nufarm.dbo.BRND_PACK P ON BP.PACK_ID = P.PACK_ID
WHERE (BP.UNIT <> '' AND BP.UNIT IS NOT NULL)
AND (BP.IsActive = 1 AND BP.IsObsolete = 0)
AND EXISTS(SELECT BRAND_ID FROM Nufarm.dbo.AGREE_BRAND_INCLUDE WHERE BRAND_ID = BB1.BRAND_ID); 

CREATE CLUSTERED INDEX IX_T_BRANDPACK ON ##T_BRANDPACK(BRANDPACK_ID_DTS,BRANDPACK_ID_ACCPAC);
GO

--SELECT * FROM COMPARE_ITEM ORDER BY CREATE_DATE DESC;

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE [COLUMN_NAME] = 'ISTARGET_GROUP' AND [TABLE_NAME] = 'ACHIEVEMENT_HEADER')
BEGIN
ALTER TABLE ACHIEVEMENT_HEADER ADD ISTARGET_GROUP BIT NULL;
END
GO
UPDATE ACHIEVEMENT_HEADER SET ISTARGET_GROUP = 0 WHERE ISTARGET_GROUP IS NULL;
ALTER TABLE ACHIEVEMENT_HEADER ADD DEFAULT 0 FOR ISTARGET_GROUP;
GO


IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE [COLUMN_NAME] = 'COMBINED_BRAND_ID' AND [TABLE_NAME] = 'ACHIEVEMENT_HEADER')
BEGIN
ALTER TABLE ACHIEVEMENT_HEADER ADD COMBINED_BRAND_ID VARCHAR(7) NULL;
END
GO


IF EXISTS(SELECT NAME FROM Nufarm.Sys.Objects WHERE NAME  ='Usp_Get_Total_PO_And_DPD' 
           AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Total_PO_And_DPD
GO
CREATE PROCEDURE Usp_Get_Total_PO_And_DPD
@DISTRIBUTOR_ID VARCHAR(10),
@START_DATE SMALLDATETIME,
@END_DATE SMALLDATETIME
AS
SET NOCOUNT ON;
-------------------------------------------------------------------------------- 
IF (@DISTRIBUTOR_ID IS NOT NULL)
  BEGIN
	SELECT DR.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,BR.BRAND_NAME,BB.BRANDPACK_NAME,ISNULL((PO.QTY_EVEN + ISNULL(PO.LEFT_OA_QTY,0)),0) AS TOTAL_PO,ISNULL(PO.TOTAL_DISC,0) AS TOTAL_DISC,ISNULL((ISNULL(PO.TOTAL_DISC,0) + PO.QTY_EVEN),0)AS TOTAL_DELIVERY,
	ISNULL(DPD.FMP1,0)AS FMP1,ISNULL(DPD.FMP2,0)AS FMP2,ISNULL(DPD.FMP3,0)AS FMP3,ISNULL(DPD.FMP1,0)+ISNULL(DPD.FMP2,0)+ISNULL(DPD.FMP3,0) AS TOTAL_DPD_FMP
	FROM Nufarm.dbo.DIST_DISTRIBUTOR DR
	INNER JOIN DISTRIBUTOR_AGREEMENT DA ON DA.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
	INNER JOIN AGREE_AGREEMENT AA ON AA.AGREEMENT_NO = DA.AGREEMENT_NO
	INNER JOIN AGREE_BRAND_INCLUDE AB ON AB.AGREEMENT_NO = AA.AGREEMENT_NO
	INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = AB.BRAND_ID
	INNER JOIN BRND_BRANDPACK BB ON BB.BRAND_ID = BR.BRAND_ID
	INNER JOIN AGREE_BRANDPACK_INCLUDE ABI ON ABI.AGREE_BRAND_ID = AB.AGREE_BRAND_ID
	AND ABI.BRANDPACK_ID = BB.BRANDPACK_ID
    LEFT OUTER JOIN
	(
	  SELECT PO.DISTRIBUTOR_ID,OPB.BRANDPACK_ID,ISNULL(SUM(OOB.QTY_EVEN),0) AS QTY_EVEN,
	  ISNULL(SUM(OBD.LEFT_OA_QTY),0) AS LEFT_OA_QTY,ISNULL(SUM(OBD.TOTAL_DISC),0) AS TOTAL_DISC
	  FROM Nufarm.dbo.ORDR_PURCHASE_ORDER PO 
	  INNER JOIN Nufarm.dbo.ORDR_PO_BRANDPACK OPB ON PO.PO_REF_NO = OPB.PO_REF_NO
	  INNER JOIN Nufarm.dbo.ORDR_OA_BRANDPACK OOB ON OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID 
	  LEFT OUTER JOIN (
			    SELECT OA_BRANDPACK_ID,
			    ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'RMOA' THEN DISC_QTY ELSE 0 END),0) AS LEFT_OA_QTY,
			    ISNULL(SUM(CASE WHEN GQSY_SGT_P_FLAG != 'RMOA' THEN DISC_QTY ELSE 0 END),0) AS TOTAL_DISC
			    FROM Nufarm.dbo.ORDR_OA_BRANDPACK_DISC
			    GROUP BY OA_BRANDPACK_ID
	                  )OBD
	  ON OOB.OA_BRANDPACK_ID = OBD.OA_BRANDPACK_ID
	  WHERE PO.PO_REF_DATE >= @START_DATE
	  AND OPB.PO_ORIGINAL_QTY > 0  
	  GROUP BY PO.DISTRIBUTOR_ID,OPB.BRANDPACK_ID
	)PO
	ON PO.DISTRIBUTOR_ID = DA.DISTRIBUTOR_ID AND PO.BRANDPACK_ID = BB.BRANDPACK_ID
	LEFT OUTER JOIN(
	                 SELECT ACH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,
					 ISNULL(SUM(CASE ACH.FLAG WHEN 'F1' THEN ACD.DISC_QTY END),0)AS FMP1,
					 ISNULL(SUM(CASE ACH.FLAG WHEN 'F2' THEN ACD.DISC_QTY END),0)AS FMP2,
	                 ISNULL(SUM(CASE ACH.FLAG WHEN 'F3' THEN ACD.DISC_QTY  END),0)AS FMP3
					 FROM Nufarm.dbo.ACHIEVEMENT_HEADER ACH INNER JOIN Nufarm.dbo.ACHIEVEMENT_DETAIL ACD
	                 ON ACH.ACH_HEADER_ID = ACD.ACH_HEADER_ID
					 INNER JOIN Nufarm.dbo.AGREE_AGREEMENT AA ON ACH.AGREEMENT_NO = AA.AGREEMENT_NO
                     WHERE AA.START_DATE >= @START_DATE AND AA.END_DATE <= @END_DATE
					 GROUP BY ACH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID
		           )DPD
	ON DPD.BRANDPACK_ID = BB.BRANDPACK_ID
	AND DPD.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
	WHERE DA.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
	AND AA.START_DATE >= @START_DATE AND AA.END_DATE <= @END_DATE
  END
ELSE
    BEGIN
	SELECT DR.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,BR.BRAND_NAME,BB.BRANDPACK_NAME,ISNULL((PO.QTY_EVEN + ISNULL(PO.LEFT_OA_QTY,0)),0) AS TOTAL_PO,ISNULL(PO.TOTAL_DISC,0) AS TOTAL_DISC,ISNULL((ISNULL(PO.TOTAL_DISC,0) + PO.QTY_EVEN),0)AS TOTAL_DELIVERY,
	ISNULL(DPD.FMP1,0)AS FMP1,ISNULL(DPD.FMP2,0)AS FMP2,ISNULL(DPD.FMP3,0)AS FMP3,ISNULL(DPD.FMP1,0)+ISNULL(DPD.FMP2,0)+ISNULL(DPD.FMP3,0) AS TOTAL_DPD_FMP
	FROM Nufarm.dbo.DIST_DISTRIBUTOR DR
	INNER JOIN DISTRIBUTOR_AGREEMENT DA ON DA.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
	INNER JOIN AGREE_AGREEMENT AA ON AA.AGREEMENT_NO = DA.AGREEMENT_NO
	INNER JOIN AGREE_BRAND_INCLUDE AB ON AB.AGREEMENT_NO = AA.AGREEMENT_NO
	INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = AB.BRAND_ID
	INNER JOIN BRND_BRANDPACK BB ON BB.BRAND_ID = BR.BRAND_ID
	INNER JOIN AGREE_BRANDPACK_INCLUDE ABI ON ABI.AGREE_BRAND_ID = AB.AGREE_BRAND_ID
	AND ABI.BRANDPACK_ID = BB.BRANDPACK_ID
    LEFT OUTER JOIN
	(
	  SELECT PO.DISTRIBUTOR_ID,OPB.BRANDPACK_ID,ISNULL(SUM(OOB.QTY_EVEN),0) AS QTY_EVEN,
	  ISNULL(SUM(OBD.LEFT_OA_QTY),0) AS LEFT_OA_QTY,ISNULL(SUM(OBD.TOTAL_DISC),0) AS TOTAL_DISC
	  FROM Nufarm.dbo.ORDR_PURCHASE_ORDER PO 
	  INNER JOIN Nufarm.dbo.ORDR_PO_BRANDPACK OPB ON PO.PO_REF_NO = OPB.PO_REF_NO
	  INNER JOIN Nufarm.dbo.ORDR_OA_BRANDPACK OOB ON OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID 
	  LEFT OUTER JOIN (
			    SELECT OA_BRANDPACK_ID,
			    ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'RMOA' THEN DISC_QTY ELSE 0 END),0) AS LEFT_OA_QTY,
			    ISNULL(SUM(CASE WHEN GQSY_SGT_P_FLAG != 'RMOA' THEN DISC_QTY ELSE 0 END),0) AS TOTAL_DISC
			    FROM Nufarm.dbo.ORDR_OA_BRANDPACK_DISC
			    GROUP BY OA_BRANDPACK_ID
	                  )OBD
	  ON OOB.OA_BRANDPACK_ID = OBD.OA_BRANDPACK_ID
	  WHERE PO.PO_REF_DATE >= @START_DATE
	  AND OPB.PO_ORIGINAL_QTY > 0  
	  GROUP BY PO.DISTRIBUTOR_ID,OPB.BRANDPACK_ID
	)PO
	ON PO.DISTRIBUTOR_ID = DA.DISTRIBUTOR_ID AND PO.BRANDPACK_ID = BB.BRANDPACK_ID
	LEFT OUTER JOIN(
	                 SELECT ACH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID,
					 ISNULL(SUM(CASE ACH.FLAG WHEN 'F1' THEN ACD.DISC_QTY END),0)AS FMP1,
					 ISNULL(SUM(CASE ACH.FLAG WHEN 'F2' THEN ACD.DISC_QTY END),0)AS FMP2,
	                 ISNULL(SUM(CASE ACH.FLAG WHEN 'F3' THEN ACD.DISC_QTY  END),0)AS FMP3
					 FROM Nufarm.dbo.ACHIEVEMENT_HEADER ACH INNER JOIN Nufarm.dbo.ACHIEVEMENT_DETAIL ACD
	                 ON ACH.ACH_HEADER_ID = ACD.ACH_HEADER_ID
					 INNER JOIN Nufarm.dbo.AGREE_AGREEMENT AA ON ACH.AGREEMENT_NO = AA.AGREEMENT_NO
                     WHERE AA.START_DATE >= @START_DATE AND AA.END_DATE <= @END_DATE
					 GROUP BY ACH.DISTRIBUTOR_ID,ACD.BRANDPACK_ID
		           )DPD
	ON DPD.BRANDPACK_ID = BB.BRANDPACK_ID
	AND DPD.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
	WHERE AA.START_DATE >= @START_DATE AND AA.END_DATE <= @END_DATE
   END
GO

--EXEC Usp_Get_Total_PO_And_DPD 
--@DISTRIBUTOR_ID = NULL,@START_DATE = '08/01/2020',@END_DATE = '07/31/2021'

--EXEC Usp_Get_Total_PO_And_DPD 
--@DISTRIBUTOR_ID = 'AGR011IDR',@START_DATE = '08/01/2020',@END_DATE = '07/31/2021'

Use Nufarm 
GO

IF EXISTS(SELECT NAME FROM SYS.OBJECTS WHERE NAME = 'Usp_Get_Report_DD_DR' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Report_DD_DR
GO
CREATE PROCEDURE Usp_Get_Report_DD_DR
@START_DATE SMALLDATETIME,
@END_DATE SMALLDATETIME,
@PAR_COLUMNS VARCHAR(50),
@DISTRIBUTOR_ID VARCHAR(50)
AS
SET NOCOUNT ON;
DECLARE @QRY_MAIN NVARCHAR(MAX),@QRY_WHERE NVARCHAR(300),@QRY_FULL NVARCHAR(MAX)
SET @QRY_MAIN = N'SELECT REG.REGIONAL_AREA,TR.TERRITORY_AREA,PROGRAM_ID = CASE WHEN (BDH.PROGRAM_ID IS NOT NULL) THEN BDH.PROGRAM_ID
ELSE CONVERT(VARCHAR(100),BDH.IDApp) END,
BDH.PROGRAM_DESC,BDH.APPlY_DATE,BDH.END_DATE,
CASE BDH.APPLY_TO WHEN ''AL'' THEN (''ALL DISTRIBUTORS'') ELSE ''CERTAIN DISTRIBUTORS'' END
AS APPLY_TO,
CASE BDH.APPLY_TO WHEN ''AL'' THEN (''REF ALL'') ELSE DR.DISTRIBUTOR_NAME END
AS DISTRIBUTORS,
BR.BRAND_NAME,ISNULL(LB.BRANDPACK_NAME,'''') AS BRANDPACK_NAME,
APPLY_TARGET_TO =  CASE WHEN (PROG1.BRANDPACK_ID IS NOT NULL) THEN ''CURRENT PACK SIZE'' 
						WHEN (PROG2.BRAND_ID IS NOT NULL) THEN ''ALL PACK SIZE OF CURRENT BRAND''
						ELSE ''ALL PRODUCT(S)'' 
						END,
TARGET_PO = CASE WHEN (PROG1.BRANDPACK_ID IS NOT NULL) THEN PROG1.MoreThanQty 
						WHEN (PROG2.BRAND_ID IS NOT NULL) THEN PROG2.MoreThanQty
						ELSE PROG.MoreThanQty 
						END,
DISC = CASE WHEN (PROG1.BRANDPACK_ID IS NOT NULL) THEN PROG1.Disc/100 
						WHEN (PROG2.BRAND_ID IS NOT NULL) THEN PROG2.Disc/100
						ELSE PROG.Disc/100 
						END,
DISC_TYPE = CASE WHEN (PROG1.BRANDPACK_ID IS NOT NULL) THEN PROG1.TypeApp 
						WHEN (PROG2.BRAND_ID IS NOT NULL) THEN PROG2.TypeApp
						ELSE PROG.TypeApp 
						END

FROM DIST_REGIONAL REG INNER JOIN TERRITORY TR ON TR.REGIONAL_ID = REG.REGIONAL_ID
INNER JOIN DIST_DISTRIBUTOR DR ON DR.TERRITORY_ID = TR.TERRITORY_ID
INNER JOIN DIST_DISC_BRAND_LIST DDBL ON DR.DISTRIBUTOR_ID = DDBL.DISTRIBUTOR_ID 
INNER JOIN BRND_DISC_HEADER BDH ON BDH.IDApp = DDBL.FKApp
INNER JOIN BRND_DISC_LIST_BRAND BDLB ON BDLB.FKApp = BDH.IDApp
INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BDLB.BRAND_ID
LEFT OUTER JOIN(SELECT BR1.BRAND_ID, BDLP.BRANDPACK_ID,BP.BRANDPACK_NAME,BDLP.FKApp FROM BRND_BRANDPACK BP INNER JOIN BRND_DISC_LIST_BRANDPACK BDLP ON BDLP.BRANDPACK_ID = BP.BRANDPACK_ID
 INNER JOIN BRND_BRAND BR1 ON BR1.BRAND_ID = BP.BRAND_ID)LB
ON LB.FKApp = BDH.IDApp AND LB.BRAND_ID = BDLB.BRAND_ID
LEFT OUTER JOIN(SELECT FKApp,MoreThanQty,Disc,TypeApp,BRANDPACK_ID FROM BRND_DISC_PROG WHERE BRANDPACK_ID IS NOT NULL)PROG1
ON PROG1.BRANDPACK_ID = LB.BRANDPACK_ID AND PROG1.FKApp = BDH.IDApp
LEFT OUTER JOIN (SELECT FkApp,MoreThanQty,Disc,TypeApp,BRAND_ID FROM BRND_DISC_PROG WHERE BRAND_ID IS NOT NULL)PROG2
 ON PROG2.FKApp=BDH.IDApp AND PROG2.BRAND_ID = BDLB.BRAND_ID
LEFT OUTER JOIN (SELECT FkApp,MoreThanQty,Disc,TypeApp FROM BRND_DISC_PROG WHERE (BRAND_ID IS NULL AND BRANDPACK_ID IS NULL))PROG
 ON PROG.FKApp = BDH.IDApp';
 IF @PAR_COLUMNS = 'APPLY_DATE AND END_DATE' 
	BEGIN
		SET @QRY_WHERE = ' WHERE BDH.APPLY_DATE >= @V_START_DATE AND BDH.END_DATE <= @V_END_DATE' 
	END
ELSE IF @PAR_COLUMNS = 'APPLY_DATE'
	BEGIN 
		SET @QRY_WHERE = ' WHERE BDH.APPLY_DATE >= @V_START_DATE AND BDH.APPLY_DATE <= @V_END_DATE' 
	END
ELSE 
	BEGIN 
		SET @QRY_WHERE = ' WHERE BDH.END_DATE >= @V_START_DATE AND BDH.END_DATE <= @V_END_DATE'
	END
SET @QRY_FULL = @QRY_MAIN + @QRY_WHERE ;
IF @DISTRIBUTOR_ID IS NOT NULL
	SET @QRY_FULL = @QRY_FULL + ' AND DR.DISTRIBUTOR_ID = @V_DISTRIBUTOR_ID '
EXECUTE sp_executesql @QRY_FULL,N'@V_START_DATE SMALLDATETIME,@V_END_DATE SMALLDATETIME,@V_DISTRIBUTOR_ID VARCHAR(50)',@V_START_DATE = @START_DATE,@V_END_DATE = @END_DATE,@V_DISTRIBUTOR_ID = @DISTRIBUTOR_ID
GO


IF EXISTS(SELECT NAME FROM SYS.OBJECTS WHERE NAME = 'Usp_Get_Report_DD_DR_All' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Report_DD_DR_All
GO
CREATE PROCEDURE Usp_Get_Report_DD_DR_All
@START_DATE SMALLDATETIME,
@END_DATE SMALLDATETIME,
@PAR_COLUMNS VARCHAR(50)
AS
SET NOCOUNT ON;
DECLARE @QRY_MAIN NVARCHAR(MAX),@QRY_WHERE NVARCHAR(300),@QRY_FULL NVARCHAR(MAX)
SET @QRY_MAIN = N'SELECT REGIONAL_AREA = ''ALL_REGIONALS'',TERRITORY_AREA = ''ALL_TERRITORIES'',PROGRAM_ID = CASE WHEN (BDH.PROGRAM_ID IS NOT NULL) THEN BDH.PROGRAM_ID
ELSE CONVERT(VARCHAR(100),BDH.IDApp) END,
BDH.PROGRAM_DESC,BDH.APPlY_DATE,BDH.END_DATE,
APPLY_TO = ''ALL_DISTRIBUTORS'',DISTRIBUTORS = '''',
BR.BRAND_NAME,ISNULL(LB.BRANDPACK_NAME,'''') AS BRANDPACK_NAME,
APPLY_TARGET_TO =  CASE WHEN (PROG1.BRANDPACK_ID IS NOT NULL) THEN ''CURRENT PACK SIZE'' 
						WHEN (PROG2.BRAND_ID IS NOT NULL) THEN ''ALL PACK SIZE OF CURRENT BRAND''
						ELSE ''ALL PRODUCT(S)'' 
						END,
TARGET_PO = CASE WHEN (PROG1.BRANDPACK_ID IS NOT NULL) THEN PROG1.MoreThanQty 
						WHEN (PROG2.BRAND_ID IS NOT NULL) THEN PROG2.MoreThanQty
						ELSE PROG.MoreThanQty 
						END,
DISC = CASE WHEN (PROG1.BRANDPACK_ID IS NOT NULL) THEN PROG1.Disc/100 
						WHEN (PROG2.BRAND_ID IS NOT NULL) THEN PROG2.Disc/100
						ELSE PROG.Disc/100 
						END,
DISC_TYPE = CASE WHEN (PROG1.BRANDPACK_ID IS NOT NULL) THEN PROG1.TypeApp 
						WHEN (PROG2.BRAND_ID IS NOT NULL) THEN PROG2.TypeApp
						ELSE PROG.TypeApp 
						END

FROM BRND_DISC_HEADER BDH INNER JOIN BRND_DISC_LIST_BRAND BDLB ON BDLB.FKApp = BDH.IDApp
INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BDLB.BRAND_ID
LEFT OUTER JOIN(SELECT BR1.BRAND_ID, BDLP.BRANDPACK_ID,BP.BRANDPACK_NAME,BDLP.FKApp FROM BRND_BRANDPACK BP INNER JOIN BRND_DISC_LIST_BRANDPACK BDLP ON BDLP.BRANDPACK_ID = BP.BRANDPACK_ID
 INNER JOIN BRND_BRAND BR1 ON BR1.BRAND_ID = BP.BRAND_ID)LB
ON LB.FKApp = BDH.IDApp AND LB.BRAND_ID = BDLB.BRAND_ID
LEFT OUTER JOIN(SELECT FKApp,MoreThanQty,Disc,TypeApp,BRANDPACK_ID FROM BRND_DISC_PROG WHERE BRANDPACK_ID IS NOT NULL)PROG1
ON PROG1.BRANDPACK_ID = LB.BRANDPACK_ID AND PROG1.FKApp = BDH.IDApp
LEFT OUTER JOIN (SELECT FkApp,MoreThanQty,Disc,TypeApp,BRAND_ID FROM BRND_DISC_PROG WHERE BRAND_ID IS NOT NULL)PROG2
 ON PROG2.FKApp=BDH.IDApp AND PROG2.BRAND_ID = BDLB.BRAND_ID
LEFT OUTER JOIN (SELECT FkApp,MoreThanQty,Disc,TypeApp FROM BRND_DISC_PROG WHERE (BRAND_ID IS NULL AND BRANDPACK_ID IS NULL))PROG
 ON PROG.FKApp = BDH.IDApp';
 IF @PAR_COLUMNS = 'APPLY_DATE AND END_DATE' 
	BEGIN
		SET @QRY_WHERE = ' WHERE BDH.APPLY_DATE >= @V_START_DATE AND BDH.END_DATE <= @V_END_DATE AND BDH.APPLY_TO = ''AL''' 
	END
ELSE IF @PAR_COLUMNS = 'APPLY_DATE'
	BEGIN 
		SET @QRY_WHERE = ' WHERE BDH.APPLY_DATE >= @V_START_DATE AND BDH.APPLY_DATE <= @V_END_DATE  AND BDH.APPLY_TO = ''AL''' 
	END
ELSE 
	BEGIN 
		SET @QRY_WHERE = ' WHERE BDH.END_DATE >= @V_START_DATE AND BDH.END_DATE <= @V_END_DATE AND BDH.APPLY_TO = ''AL'''
	END
SET @QRY_FULL = @QRY_MAIN + @QRY_WHERE ;
EXECUTE sp_executesql @QRY_FULL,N'@V_START_DATE SMALLDATETIME,@V_END_DATE SMALLDATETIME',@V_START_DATE = @START_DATE,@V_END_DATE = @END_DATE
GO

--EXEC Usp_Get_Report_DD_DR_All @PAR_COLUMNS = 'APPLY_DATE', @START_DATE = '05/01/2019',@END_DATE = '08/01/2019'

IF EXISTS(SELECT NAME FROM SYS.OBJECTS WHERE NAME = 'Usp_Get_Report_DD_DR_History' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Report_DD_DR_History
GO
CREATE PROCEDURE Usp_Get_Report_DD_DR_History
@DISTRIBUTOR_ID VARCHAR(50)
AS
SET NOCOUNT ON;
SELECT REG.REGIONAL_AREA,TR.TERRITORY_AREA,PROGRAM_ID = CASE WHEN (BDH.PROGRAM_ID IS NOT NULL) THEN BDH.PROGRAM_ID
ELSE CONVERT(VARCHAR(100),BDH.IDApp) END,
BDH.PROGRAM_DESC,BDH.APPlY_DATE,BDH.END_DATE,
APPLY_TO = 'CERTAIN DISTRIBUTORS',DISTRIBUTORS = DR.DISTRIBUTOR_NAME ,
BR.BRAND_NAME,ISNULL(LB.BRANDPACK_NAME,'') AS BRANDPACK_NAME,
APPLY_TARGET_TO =  CASE WHEN (PROG1.BRANDPACK_ID IS NOT NULL) THEN 'CURRENT PACK SIZE' 
						WHEN (PROG2.BRAND_ID IS NOT NULL) THEN 'ALL PACK SIZE OF CURRENT BRAND'
						ELSE 'ALL PRODUCT(S)' 
						END,
TARGET_PO = CASE WHEN (PROG1.BRANDPACK_ID IS NOT NULL) THEN PROG1.MoreThanQty 
						WHEN (PROG2.BRAND_ID IS NOT NULL) THEN PROG2.MoreThanQty
						ELSE PROG.MoreThanQty 
						END,
DISC = CASE WHEN (PROG1.BRANDPACK_ID IS NOT NULL) THEN PROG1.Disc/100 
						WHEN (PROG2.BRAND_ID IS NOT NULL) THEN PROG2.Disc/100
						ELSE PROG.Disc/100 
						END,
DISC_TYPE = CASE WHEN (PROG1.BRANDPACK_ID IS NOT NULL) THEN PROG1.TypeApp 
						WHEN (PROG2.BRAND_ID IS NOT NULL) THEN PROG2.TypeApp
						ELSE PROG.TypeApp 
						END
FROM DIST_REGIONAL REG INNER JOIN TERRITORY TR ON TR.REGIONAL_ID = REG.REGIONAL_ID
INNER JOIN DIST_DISTRIBUTOR DR ON DR.TERRITORY_ID = TR.TERRITORY_ID
INNER JOIN DIST_DISC_BRAND_LIST DDBL ON DR.DISTRIBUTOR_ID = DDBL.DISTRIBUTOR_ID 
INNER JOIN BRND_DISC_HEADER BDH ON BDH.IDApp = DDBL.FKApp
INNER JOIN BRND_DISC_LIST_BRAND BDLB ON BDLB.FKApp = BDH.IDApp
INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BDLB.BRAND_ID
LEFT OUTER JOIN(SELECT BR1.BRAND_ID, BDLP.BRANDPACK_ID,BP.BRANDPACK_NAME,BDLP.FKApp FROM BRND_BRANDPACK BP INNER JOIN BRND_DISC_LIST_BRANDPACK BDLP ON BDLP.BRANDPACK_ID = BP.BRANDPACK_ID
 INNER JOIN BRND_BRAND BR1 ON BR1.BRAND_ID = BP.BRAND_ID)LB
ON LB.FKApp = BDH.IDApp AND LB.BRAND_ID = BDLB.BRAND_ID
LEFT OUTER JOIN(SELECT FKApp,MoreThanQty,Disc,TypeApp,BRANDPACK_ID FROM BRND_DISC_PROG WHERE BRANDPACK_ID IS NOT NULL)PROG1
ON PROG1.BRANDPACK_ID = LB.BRANDPACK_ID AND PROG1.FKApp = BDH.IDApp
LEFT OUTER JOIN (SELECT FkApp,MoreThanQty,Disc,TypeApp,BRAND_ID FROM BRND_DISC_PROG WHERE BRAND_ID IS NOT NULL)PROG2
 ON PROG2.FKApp=BDH.IDApp AND PROG2.BRAND_ID = BDLB.BRAND_ID
LEFT OUTER JOIN (SELECT FkApp,MoreThanQty,Disc,TypeApp FROM BRND_DISC_PROG WHERE (BRAND_ID IS NULL AND BRANDPACK_ID IS NULL))PROG
 ON PROG.FKApp = BDH.IDApp 
 WHERE DDBL.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND BDH.APPLY_TO = 'CD'
 UNION
 SELECT REGIONAL_AREA = 'ALL_REGIONALS',TERRITORY_AREA = 'ALL_TERRITORIES',PROGRAM_ID = CASE WHEN (BDH.PROGRAM_ID IS NOT NULL) THEN BDH.PROGRAM_ID
ELSE CONVERT(VARCHAR(100),BDH.IDApp) END,
BDH.PROGRAM_DESC,BDH.APPlY_DATE,BDH.END_DATE,
APPLY_TO = 'ALL_DISTRIBUTORS',DISTRIBUTORS = '',
BR.BRAND_NAME,ISNULL(LB.BRANDPACK_NAME,'') AS BRANDPACK_NAME,
APPLY_TARGET_TO =  CASE WHEN (PROG1.BRANDPACK_ID IS NOT NULL) THEN 'CURRENT PACK SIZE' 
						WHEN (PROG2.BRAND_ID IS NOT NULL) THEN 'ALL PACK SIZE OF CURRENT BRAND'
						ELSE 'ALL PRODUCT(S)' 
						END,
TARGET_PO = CASE WHEN (PROG1.BRANDPACK_ID IS NOT NULL) THEN PROG1.MoreThanQty 
						WHEN (PROG2.BRAND_ID IS NOT NULL) THEN PROG2.MoreThanQty
						ELSE PROG.MoreThanQty 
						END,
DISC = CASE WHEN (PROG1.BRANDPACK_ID IS NOT NULL) THEN PROG1.Disc/100 
						WHEN (PROG2.BRAND_ID IS NOT NULL) THEN PROG2.Disc/100
						ELSE PROG.Disc/100 
						END,
DISC_TYPE = CASE WHEN (PROG1.BRANDPACK_ID IS NOT NULL) THEN PROG1.TypeApp 
						WHEN (PROG2.BRAND_ID IS NOT NULL) THEN PROG2.TypeApp
						ELSE PROG.TypeApp 
						END

FROM BRND_DISC_HEADER BDH INNER JOIN BRND_DISC_LIST_BRAND BDLB ON BDLB.FKApp = BDH.IDApp
INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BDLB.BRAND_ID
LEFT OUTER JOIN(SELECT BR1.BRAND_ID, BDLP.BRANDPACK_ID,BP.BRANDPACK_NAME,BDLP.FKApp FROM BRND_BRANDPACK BP INNER JOIN BRND_DISC_LIST_BRANDPACK BDLP ON BDLP.BRANDPACK_ID = BP.BRANDPACK_ID
 INNER JOIN BRND_BRAND BR1 ON BR1.BRAND_ID = BP.BRAND_ID)LB
ON LB.FKApp = BDH.IDApp AND LB.BRAND_ID = BDLB.BRAND_ID
LEFT OUTER JOIN(SELECT FKApp,MoreThanQty,Disc,TypeApp,BRANDPACK_ID FROM BRND_DISC_PROG WHERE BRANDPACK_ID IS NOT NULL)PROG1
ON PROG1.BRANDPACK_ID = LB.BRANDPACK_ID AND PROG1.FKApp = BDH.IDApp
LEFT OUTER JOIN (SELECT FkApp,MoreThanQty,Disc,TypeApp,BRAND_ID FROM BRND_DISC_PROG WHERE BRAND_ID IS NOT NULL)PROG2
 ON PROG2.FKApp=BDH.IDApp AND PROG2.BRAND_ID = BDLB.BRAND_ID
LEFT OUTER JOIN (SELECT FkApp,MoreThanQty,Disc,TypeApp FROM BRND_DISC_PROG WHERE (BRAND_ID IS NULL AND BRANDPACK_ID IS NULL))PROG
 ON PROG.FKApp = BDH.IDApp
 WHERE BDH.APPLY_TO = 'AL'
GO

IF EXISTS(SELECT NAME FROM [DBO].SYSOBJECTS WHERE NAME = 'Usp_Check_Availability_Disc_Other' AND TYPE = 'P')
DROP PROCEDURE Usp_Check_Availability_Disc_Other
GO
CREATE PROCEDURE Usp_Check_Availability_Disc_Other
@DISTRIBUTOR_ID VARCHAR(10),
@BRANDPACK_ID VARCHAR(14),
@O_DEVIDED_QTY DECIMAL(18,3) OUTPUT,
@O_DEVIDE_FACTOR DECIMAL(18,3) OUTPUT,
@PO_DATE SMALLDATETIME,
@O_UNIT VARCHAR(15) OUTPUT,
@O_DD BIT OUTPUT,
@O_DR BIT OUTPUT,
@O_CBD BIT OUTPUT,
@IDApp INT
AS 
--SET NOCOUNT ON
DECLARE @V_BRAND_ID VARCHAR(7),@V_ApplyTo VARCHAR(5),@V_ApplyDate SMALLDATETIME,@V_START_DATE_PKD SMALLDATETIME,@V_IsDiscByBrandPack BIT,@V_IsDiscByBrandPackForAll BIT,
@V_IsByBrand bit,@V_END_DATE_PKD SMALLDATETIME;
SELECT @O_DEVIDED_QTY = (SELECT DEVIDED_QUANTITY FROM BRND_BRANDPACK WHERE BRANDPACK_ID = @BRANDPACK_ID );
SELECT @O_DEVIDE_FACTOR = (SELECT TOP 1 DEVIDE_FACTOR FROM BRND_PACK WHERE PACK_ID = (SELECT TOP 1 PACK_ID FROM BRND_BRANDPACK 
						   WHERE BRANDPACK_ID = @BRANDPACK_ID));
SELECT @O_UNIT = (SELECT UNIT FROM BRND_BRANDPACK WHERE BRANDPACK_ID = @BRANDPACK_ID );
SELECT TOP 1 @V_ApplyTo = APPLY_TO,@V_ApplyDate = APPLY_DATE FROM BRND_DISC_HEADER WHERE IDApp = @IDApp 
IF @IDApp > 0
	BEGIN 
		 SET @V_BRAND_ID = (SELECT BRAND_ID FROM BRND_BRANDPACK WHERE BRANDPACK_ID = @BRANDPACK_ID);
		 --check apakah discount by brandpack/by brand
		 IF (SELECT COUNT(*) FROM BRND_DISC_LIST_BRANDPACK WHERE FKApp = @IDApp) > 0
			--DISCOUNT BY BRANDPACK BERARTI
			BEGIN 
			--CHECK APAKAH BrandPack nya sama 
				SET @V_IsDiscByBrandPack = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT IDApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND BRANDPACK_ID = @BRANDPACK_ID)),0));
				SET @V_IsDiscByBrandPackForAll = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT IDApp FROM BRND_DISC_LIST_BRANDPACK WHERE FKApp = @IDApp AND BRANDPACK_ID =@BRANDPACK_ID)),0));
				IF @V_IsDiscByBrandPackForAll = 0 
					RETURN 0;	 
				
			END
		 ELSE IF EXISTS(SELECT BDLB.BRAND_ID FROM BRND_DISC_LIST_BRAND BDLB INNER JOIN BRND_DISC_PROG BDP ON BDLB.BRAND_ID = BDP.BRAND_ID
						WHERE BDlB.BRAND_ID = @V_BRAND_ID AND BDP.FKApp = @IDApp)
				SET @V_IsByBrand = 1;
		 ELSE IF NOT EXISTS(SELECT BRAND_ID FROM BRND_DISC_LIST_BRAND WHERE BRAND_ID = @V_BRAND_ID AND FKApp = @IDApp)
			RETURN 0;				
		IF @V_IsDiscByBrandPack > 0
			BEGIN
				SELECT @O_DD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DD' AND BRANDPACK_ID = @BRANDPACK_ID)),0));
				SELECT @O_DR =  CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DR' AND BRANDPACK_ID = @BRANDPACK_ID)),0));
				SELECT @O_CBD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'CBD' AND BRANDPACK_ID = @BRANDPACK_ID)),0));	
			END
		ELSE IF @V_IsDiscByBrandPackForAll > 0
			BEGIN
				SELECT @O_DD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DD')),0));
				SELECT @O_DR =  CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DR')),0));
				SELECT @O_CBD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'CBD')),0));	
			END
		ELSE IF @V_IsByBrand > 0
			BEGIN
				SELECT @O_DD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DD' AND BRAND_ID = @V_BRAND_ID)),0));
				SELECT @O_DR =  CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DR' AND BRAND_ID = @V_BRAND_ID)),0));
				SELECT @O_CBD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'CBD' AND BRAND_ID = @V_BRAND_ID)),0));
			END
		ELSE
			BEGIN
				SELECT @O_DD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DD')),0));
				SELECT @O_DR =  CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DR')),0));
				SELECT @O_CBD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'CBD')),0));	
			END	
		IF @V_ApplyTo = 'AL'
			RETURN 1
		 IF @V_ApplyTo = 'CD'
			BEGIN
                SELECT TOP 1 @V_START_DATE_PKD = AA.START_DATE,@V_END_DATE_PKD = AA.END_DATE FROM AGREE_AGREEMENT AA  
                INNER JOIN DISTRIBUTOR_AGREEMENT DA ON DA.AGREEMENT_NO = AA.AGREEMENT_NO INNER JOIN AGREE_BRANDPACK_INCLUDE ABP ON ABP.AGREEMENT_NO = AA.AGREEMENT_NO  
                WHERE AA.END_DATE >= @PO_DATE AND AA.START_DATE <= @PO_DATE AND DA.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND ABP.BRANDPACK_ID = @BRANDPACK_ID ; 
                IF (@V_ApplyDate >=@V_START_DATE_PKD) AND (@V_ApplyDate <=@V_END_DATE_PKD)  
                BEGIN 				
				  RETURN(SELECT 1 WHERE EXISTS(SELECT DISTRIBUTOR_ID FROM DIST_DISC_BRAND_LIST WHERE DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND FKApp = @IDApp));  
                END 
			END
		 ELSE IF @V_ApplyTo = 'GD'
			BEGIN
				SELECT TOP 1 @V_START_DATE_PKD = AA.START_DATE,@V_END_DATE_PKD = AA.END_DATE FROM AGREE_AGREEMENT AA 
                INNER JOIN DISTRIBUTOR_AGREEMENT DA ON DA.AGREEMENT_NO = AA.AGREEMENT_NO INNER JOIN AGREE_BRANDPACK_INCLUDE ABP ON ABP.AGREEMENT_NO = AA.AGREEMENT_NO 
                WHERE AA.END_DATE >= @PO_DATE AND AA.START_DATE <= @PO_DATE AND DA.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND ABP.BRANDPACK_ID = @BRANDPACK_ID ;
                IF (@V_ApplyDate >=@V_START_DATE_PKD) AND (@V_ApplyDate <=@V_END_DATE_PKD)   
				BEGIN 
					RETURN (SELECT 1 WHERE EXISTS(SELECT DGL.DISTRIBUTOR_ID FROM DIST_GROUP_LIST DGL INNER JOIN DIST_GROUP_BRND_LIST GBL ON GBL.FKGroup = DGL.GRP_ID 
                    WHERE GBL.FKDisc = @IDApp AND DGL.DISTRIBUTOR_ID = @DISTRIBUTOR_ID));
				END
			END
	END
ELSE
	RETURN 0
GO
Use Nufarm;
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BRND_DISC_HEADER]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[BRND_DISC_HEADER](
	[IDApp] [int] IDENTITY(1,1) NOT NULL,
	[APPLY_DATE] [smalldatetime] NOT NULL,
	[APPLY_TO] [char](2) NOT NULL,
	[PROGRAM_DESC] [varchar](200) NULL,
	[DISC_PROG_DESC] [varchar](500) NULL,
	[CreatedDate] [smalldatetime] NOT NULL,
	[CreatedBy] [varchar](50) NOT NULL,
	[ModifiedDate] [smalldatetime] NULL,
	[ModifiedBy] [varchar](50) NULL,
 CONSTRAINT [PK_BRND_PRICE_DISC] PRIMARY KEY CLUSTERED 
(
	[IDApp] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[BRND_DISC_LIST_BRAND]    Script Date: 4/24/2019 10:58:24 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BRND_DISC_LIST_BRAND]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[BRND_DISC_LIST_BRAND](
	[IDApp] [int] IDENTITY(1,1) NOT NULL,
	[BRAND_ID] [varchar](7) NOT NULL,
	[FKApp] [int] NOT NULL,
	[CreatedBy] [varchar](100) NOT NULL,
	[CreatedDate] [smalldatetime] NOT NULL,
 CONSTRAINT [PK_BRND_DISC_LIST_BRAND] PRIMARY KEY CLUSTERED 
(
	[IDApp] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[BRND_DISC_PROG]    Script Date: 4/24/2019 10:58:24 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[BRND_DISC_PROG]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[BRND_DISC_PROG](
	[IDApp] [int] IDENTITY(1,1) NOT NULL,
	[MoreThanQty] [decimal](18, 3) NOT NULL,
	[Disc] [decimal](18, 4) NOT NULL,
	[TypeApp] [varchar](5) NOT NULL,
	[FKApp] [int] NULL,
	[CreatedBy] [varchar](100) NOT NULL,
	[CreatedDate] [smalldatetime] NOT NULL,
	[ModifiedBy] [varchar](100) NULL,
	[ModifiedDate] [smalldatetime] NULL,
 CONSTRAINT [PK_BRND_PRICE_DISC_PROG] PRIMARY KEY CLUSTERED 
(
	[IDApp] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DIST_DISC_BRAND_LIST]    Script Date: 4/24/2019 10:58:24 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DIST_DISC_BRAND_LIST]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[DIST_DISC_BRAND_LIST](
	[IDApp] [int] IDENTITY(1,1) NOT NULL,
	[DISTRIBUTOR_ID] [varchar](10) NOT NULL,
	[FKApp] [int] NOT NULL,
	[CreatedBy] [varchar](100) NULL,
	[CreatedDate] [smalldatetime] NULL,
 CONSTRAINT [PK_DIST_DISC_PRICE_FM] PRIMARY KEY CLUSTERED 
(
	[IDApp] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DIST_GROUP]    Script Date: 4/24/2019 10:58:24 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DIST_GROUP]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[DIST_GROUP](
	[IDApp] [int] IDENTITY(1,1) NOT NULL,
	[GRP_ID] [varchar](10) NOT NULL,
	[GRP_NAME] [varchar](100) NOT NULL,
	[GROUP_DESC] [varchar](150) NULL,
	[INActive] [bit] NOT NULL,
	[CreatedBy] [varchar](100) NULL,
	[CreatedDate] [smalldatetime] NULL,
	[ModifiedBy] [varchar](100) NULL,
	[ModifiedDate] [smalldatetime] NULL,
 CONSTRAINT [PK_DIST_GROUP] PRIMARY KEY CLUSTERED 
(
	[IDApp] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DIST_GROUP_BRND_LIST]    Script Date: 4/24/2019 10:58:24 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DIST_GROUP_BRND_LIST]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[DIST_GROUP_BRND_LIST](
	[IDApp] [int] IDENTITY(1,1) NOT NULL,
	[FKGroup] [varchar](10) NOT NULL,
	[FKDisc] [int] NOT NULL,
	[CreatedBy] [varchar](100) NULL,
	[CreatedDate] [smalldatetime] NULL,
 CONSTRAINT [PK_DIST_GROUP_BRND_LIST] PRIMARY KEY CLUSTERED 
(
	[IDApp] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_PADDING OFF
GO
/****** Object:  Table [dbo].[DIST_GROUP_LIST]    Script Date: 4/24/2019 10:58:24 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
SET ANSI_PADDING ON
GO
IF NOT EXISTS (SELECT * FROM sys.objects WHERE object_id = OBJECT_ID(N'[dbo].[DIST_GROUP_LIST]') AND type in (N'U'))
BEGIN
CREATE TABLE [dbo].[DIST_GROUP_LIST](
	[IDApp] [int] IDENTITY(1,1) NOT NULL,
	[GRP_ID] [varchar](10) NULL,
	[DISTRIBUTOR_ID] [varchar](10) NULL,
	[INActive] [bit] NOT NULL,
	[CreatedBy] [varchar](100) NULL,
	[CreatedDate] [smalldatetime] NULL,
 CONSTRAINT [PK_DIST_DISC_GROUP_LIST] PRIMARY KEY CLUSTERED 
(
	[IDApp] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
SET ANSI_PADDING OFF
GO
IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[DF_DIST_GROUP_INActive]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[DIST_GROUP] ADD  CONSTRAINT [DF_DIST_GROUP_INActive]  DEFAULT ((0)) FOR [INActive]
END

GO
IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[DF_DIST_GROUP_LIST_INActive]') AND type = 'D')
BEGIN
ALTER TABLE [dbo].[DIST_GROUP_LIST] ADD  CONSTRAINT [DF_DIST_GROUP_LIST_INActive]  DEFAULT ((0)) FOR [INActive]
END

GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'BRND_DISC_LIST_BRAND', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Tabel yang merecor brand yang diikutkan dalam program discount distributor atau retailer' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'BRND_DISC_LIST_BRAND'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'BRND_DISC_PROG', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Tabel yang merecord schema discount' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'BRND_DISC_PROG'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'DIST_DISC_BRAND_LIST', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Tabel untuk merecord distributor mana saja saja yang ikut program discount Type Discount ya Certain Distributor' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'DIST_DISC_BRAND_LIST'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'DIST_GROUP_BRND_LIST', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Tabel yang mercord group distributor mana saja yang ikut program discount' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'DIST_GROUP_BRND_LIST'
GO
IF NOT EXISTS (SELECT * FROM ::fn_listextendedproperty(N'MS_Description' , N'SCHEMA',N'dbo', N'TABLE',N'DIST_GROUP_LIST', NULL,NULL))
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Tabel yang mercord nama nama group distributor' , @level0type=N'SCHEMA',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'DIST_GROUP_LIST'
GO


--=========================TAMBAHKAN Column RefOther Referensi ke tabel lain tidak tau tablenya  ================================

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE [COLUMN_NAME] = 'RefOther' AND [TABLE_NAME] = 'ORDR_OA_REMAINDING')
BEGIN
ALTER TABLE ORDR_OA_REMAINDING ADD RefOther INT NULL---UNTUK sekarang ke tabel BRND_DISC_HEADER saja
END
GO

IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE [COLUMN_NAME] = 'RefOther' AND [TABLE_NAME] = 'ORDR_OA_BRANDPACK_DISC')
BEGIN
ALTER TABLE ORDR_OA_BRANDPACK_DISC ADD RefOther INT NULL---UNTUK sekarang ke tabel BRND_DISC_HEADER saja
END
GO

--EXEC Usp_GetReference_Schema_Disc @IDApp = 2;
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Insert_OA_Remainding' AND TYPE = 'P')
DROP PROCEDURE Usp_Insert_OA_Remainding
GO

IF EXISTS(SELECT NAME FROM [DBO].SYSOBJECTS WHERE NAME = 'Usp_Check_Availability_Disc_Other' AND TYPE = 'P')
DROP PROCEDURE Usp_Check_Availability_Disc_Other
GO
CREATE PROCEDURE Usp_Check_Availability_Disc_Other
@DISTRIBUTOR_ID VARCHAR(10),
@BRANDPACK_ID VARCHAR(14),
@O_DEVIDED_QTY DECIMAL(18,3) OUTPUT,
@O_DEVIDE_FACTOR DECIMAL(18,3) OUTPUT,
@PO_DATE SMALLDATETIME,
@O_UNIT VARCHAR(15) OUTPUT,
@O_DD BIT OUTPUT,
@O_DR BIT OUTPUT,
@O_CBD BIT OUTPUT,
@IDApp INT
AS 
--SET NOCOUNT ON
DECLARE @V_BRAND_ID VARCHAR(7),@V_ApplyTo VARCHAR(5),@V_ApplyDate SMALLDATETIME,@V_START_DATE_PKD SMALLDATETIME,@V_IsDiscByBrandPack BIT,
@V_IsByBrand bit,@V_END_DATE_PKD SMALLDATETIME;
SELECT @O_DEVIDED_QTY = (SELECT DEVIDED_QUANTITY FROM BRND_BRANDPACK WHERE BRANDPACK_ID = @BRANDPACK_ID );
SELECT @O_DEVIDE_FACTOR = (SELECT TOP 1 DEVIDE_FACTOR FROM BRND_PACK WHERE PACK_ID = (SELECT TOP 1 PACK_ID FROM BRND_BRANDPACK 
						   WHERE BRANDPACK_ID = @BRANDPACK_ID));
SELECT @O_UNIT = (SELECT UNIT FROM BRND_BRANDPACK WHERE BRANDPACK_ID = @BRANDPACK_ID );
SELECT TOP 1 @V_ApplyTo = APPLY_TO,@V_ApplyDate = APPLY_DATE FROM BRND_DISC_HEADER WHERE IDApp = @IDApp 
IF @IDApp > 0
	BEGIN 
		 SET @V_BRAND_ID = (SELECT BRAND_ID FROM BRND_BRANDPACK WHERE BRANDPACK_ID = @BRANDPACK_ID);
		 --check apakah discount by brandpack/by brand
		 IF (SELECT COUNT(*) FROM BRND_DISC_LIST_BRANDPACK WHERE FKApp = @IDApp) > 0
			--DISCOUNT BY BRANDPACK BERARTI
			BEGIN 
			--CHECK APAKAH BrandPack nya sama 
				SET @V_IsDiscByBrandPack = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT IDApp FROM BRND_DISC_LIST_BRANDPACK WHERE FKApp = @IDApp AND BRANDPACK_ID =@BRANDPACK_ID)),0));
				IF @V_IsDiscByBrandPack = 0 
					RETURN 0;
			END
		 ELSE IF EXISTS(SELECT BDLB.BRAND_ID FROM BRND_DISC_LIST_BRAND BDLB INNER JOIN BRND_DISC_PROG BDP ON BDLB.BRAND_ID = BDP.BRAND_ID
						WHERE BDlB.BRAND_ID = @V_BRAND_ID AND BDP.FKApp = @IDApp)
				SET @V_IsByBrand = 1;
		 ELSE IF NOT EXISTS(SELECT BRAND_ID FROM BRND_DISC_LIST_BRAND WHERE BRAND_ID = @V_BRAND_ID AND FKApp = @IDApp)
			RETURN 0;				
		IF @V_IsDiscByBrandPack > 0
			BEGIN
				SELECT @O_DD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DD' AND BRANDPACK_ID = @BRANDPACK_ID)),0));
				SELECT @O_DR =  CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DR' AND BRANDPACK_ID = @BRANDPACK_ID)),0));
				SELECT @O_CBD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'CBD' AND BRANDPACK_ID = @BRANDPACK_ID)),0));	
			END
		ELSE IF @V_IsByBrand > 0
			BEGIN
				SELECT @O_DD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DD' AND BRAND_ID = @V_BRAND_ID)),0));
				SELECT @O_DR =  CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DR' AND BRAND_ID = @V_BRAND_ID)),0));
				SELECT @O_CBD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'CBD' AND BRAND_ID = @V_BRAND_ID)),0));
			END
		ELSE
			BEGIN
				SELECT @O_DD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DD')),0));
				SELECT @O_DR =  CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'DR')),0));
				SELECT @O_CBD = CONVERT(BIT,ISNULL((SELECT 1 WHERE EXISTS(SELECT TypeApp FROM BRND_DISC_PROG WHERE FKApp = @IDApp AND TypeApp = 'CBD')),0));	
			END	
		IF @V_ApplyTo = 'AL'
			RETURN 1
		 IF @V_ApplyTo = 'CD'
			BEGIN
                SELECT TOP 1 @V_START_DATE_PKD = AA.START_DATE,@V_END_DATE_PKD = AA.END_DATE FROM AGREE_AGREEMENT AA  
                INNER JOIN DISTRIBUTOR_AGREEMENT DA ON DA.AGREEMENT_NO = AA.AGREEMENT_NO INNER JOIN AGREE_BRANDPACK_INCLUDE ABP ON ABP.AGREEMENT_NO = AA.AGREEMENT_NO  
                WHERE AA.END_DATE >= @PO_DATE AND AA.START_DATE <= @PO_DATE AND DA.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND ABP.BRANDPACK_ID = @BRANDPACK_ID ; 
                IF (@V_ApplyDate >=@V_START_DATE_PKD) AND (@V_ApplyDate <=@V_END_DATE_PKD)  
                BEGIN 				
				  RETURN(SELECT 1 WHERE EXISTS(SELECT DISTRIBUTOR_ID FROM DIST_DISC_BRAND_LIST WHERE DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND FKApp = @IDApp));  
                END 
			END
		 ELSE IF @V_ApplyTo = 'GD'
			BEGIN
				SELECT TOP 1 @V_START_DATE_PKD = AA.START_DATE,@V_END_DATE_PKD = AA.END_DATE FROM AGREE_AGREEMENT AA 
                INNER JOIN DISTRIBUTOR_AGREEMENT DA ON DA.AGREEMENT_NO = AA.AGREEMENT_NO INNER JOIN AGREE_BRANDPACK_INCLUDE ABP ON ABP.AGREEMENT_NO = AA.AGREEMENT_NO 
                WHERE AA.END_DATE >= @PO_DATE AND AA.START_DATE <= @PO_DATE AND DA.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND ABP.BRANDPACK_ID = @BRANDPACK_ID ;
                IF (@V_ApplyDate >=@V_START_DATE_PKD) AND (@V_ApplyDate <=@V_END_DATE_PKD)   
				BEGIN 
					RETURN (SELECT 1 WHERE EXISTS(SELECT DGL.DISTRIBUTOR_ID FROM DIST_GROUP_LIST DGL INNER JOIN DIST_GROUP_BRND_LIST GBL ON GBL.FKGroup = DGL.GRP_ID 
                    WHERE GBL.FKDisc = @IDApp AND DGL.DISTRIBUTOR_ID = @DISTRIBUTOR_ID));
				END
			END
	END
ELSE
	RETURN 0
GO

--declare @P1 DECIMAL(18,3)
--set @P1=0
--declare @P2 DECIMAL(18,3)
--set @P2=0
--declare @P3 VARCHAR(15)
--set @P3=''--UNIT
--declare @P4 BIT
--set @P4='' --DD
--declare @P5 BIT
--set @P5='' --DR
--declare @P6 BIT
--set @P6='' --CBD
--declare @Retval INT
--exec @Retval = Usp_Check_Availability_Disc_Other @IDApp = 11, @DISTRIBUTOR_ID = 'TAN010IDR', @BRANDPACK_ID = '00540004LD', @PO_DATE = '2019-05-24 00:00:00'
--, @O_DEVIDED_QTY = @P1 output, @O_DEVIDE_FACTOR = @P2 output,@O_UNIT = @P3 OUTPUT,@O_DD = @P4 OUTPUT,@O_DR = @P5 OUTPUT,@O_CBD = @P6 OUTPUT
--select DEVIDED_QTY = @P1 , DEVIDE_FACTOR = @P2 , UNIT = @P3,DD = @P4 ,DR = @P5, CBD = @P6
--select retval = @Retval

	 --SET @V_BRAND_ID = (SELECT BRAND_ID FROM BRND_BRANDPACK WHERE BRANDPACK_ID = @BRANDPACK_ID);
		 --check apakah discount by brandpack/by brand


IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Check_Sum_Mathching_Disc_Qty'
 AND TYPE = 'P')
DROP PROCEDURE Usp_Check_Sum_Mathching_Disc_Qty
GO
CREATE PROCEDURE Usp_Check_Sum_Mathching_Disc_Qty
@OA_BRANDPACK_ID VARCHAR(75),
@DISCOUNT_TYPE VARCHAR(50)
AS
EXECUTE sp_executesql
N'SET NOCOUNT ON;
IF (@V_DISCOUNT_TYPE = ''Sales_Discount'')
   BEGIN
 	DECLARE @SUM_PROG_DISC_QTY DECIMAL(18,3),@PROG_DISC_QTY DECIMAL(18,3);
	SET @PROG_DISC_QTY =  (SELECT PROG_DISC_QTY FROM ORDR_OA_BRANDPACK WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID);-- AS DECIMAL(18,3))
	SET @SUM_PROG_DISC_QTY = (SELECT ISNULL(SUM(DISC_QTY),0) FROM ORDR_OA_BRANDPACK_DISC
	                         WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID AND GQSY_SGT_P_FLAG IN(''MG'',''KP'',''CR'',''CP'',''MS'',''DK'',''CS'',''TD'',''TS'',''CD'',''CT'',''DN'',''CA''));
        UPDATE ORDR_OA_BRANDPACK SET PROG_DISC_QTY = @SUM_PROG_DISC_QTY
		WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID;
		
   END
ELSE IF (@V_DISCOUNT_TYPE = ''Agreement_Discount'')
     BEGIN
	  DECLARE @SUM_AGREE_DISC_QTY DECIMAL(18,3),@AGREE_DISC_QTY DECIMAL(18,3)
	    SET @AGREE_DISC_QTY = (SELECT AGREE_DISC_QTY FROM ORDR_OA_BRANDPACK WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID);-- AS DECIMAL(18,3));
	    SET @SUM_AGREE_DISC_QTY = (SELECT ISNULL(SUM(DISC_QTY),0) FROM ORDR_OA_BRANDPACK_DISC
            WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID AND GQSY_SGT_P_FLAG IN(''G'',''Q1'',''Q2'',''Q3'',''Q4'',''S1'',''S2'',''Y''));
	    
            UPDATE ORDR_OA_BRANDPACK SET AGREE_DISC_QTY = @SUM_AGREE_DISC_QTY
	    WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID;
     END
ELSE IF (@V_DISCOUNT_TYPE = ''Other_Discount'')
      BEGIN
	   DECLARE @SUM_OTHER_DISC_QTY DECIMAL(18,3),@OTHER_DISC_QTY DECIMAL(18,3);
	     SET @OTHER_DISC_QTY = CAST((SELECT OTHER_DISC_QTY FROM ORDR_OA_BRANDPACK WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID) AS DECIMAL(18,3));
	     SET @SUM_OTHER_DISC_QTY = (SELECT ISNULL(SUM(DISC_QTY),0) FROM ORDR_OA_BRANDPACK_DISC
	     WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID AND GQSY_SGT_P_FLAG IN(''O'',''OCBD'',''ODD'',''ODR''));   
	    
             UPDATE ORDR_OA_BRANDPACK SET OTHER_DISC_QTY = @SUM_OTHER_DISC_QTY
		   WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID;
      END
ELSE IF (@V_DISCOUNT_TYPE = ''Project_Discount'')
     BEGIN
	  DECLARE @SUM_PROJ_DISC_QTY DECIMAL(18,3),@PROJ_DISC_QTY DECIMAL(18,3);
	     SET @PROJ_DISC_QTY = CAST((SELECT PROJ_DISC_QTY FROM ORDR_OA_BRANDPACK WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID) AS DECIMAL(18,3));
             SET @SUM_PROJ_DISC_QTY = CAST((SELECT ISNULL(SUM(DISC_QTY),0)
	        FROM ORDR_OA_BRANDPACK_DISC WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID AND
	        GQSY_SGT_P_FLAG = ''P'')AS DECIMAL(18,3));
	     UPDATE ORDR_OA_BRANDPACK SET PROJ_DISC_QTY = @SUM_PROJ_DISC_QTY 
		   WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID;	
      END',N'@V_OA_BRANDPACK_ID VARCHAR(70),@V_DISCOUNT_TYPE VARCHAR(50)',
     @V_OA_BRANDPACK_ID = @OA_BRANDPACK_ID,@V_DISCOUNT_TYPE = @DISCOUNT_TYPE;         	
GO

IF EXISTS(SELECT NAME FROM SYS.OBJECTS WHERE NAME = 'Usp_Get_DOC' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_DOC
GO
CREATE PROCEDURE Usp_Get_DOC
@OA_REF_NO VARCHAR(32)
AS
SELECT PO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,PO.PO_REF_NO,PO.PO_REF_DATE,
OA.OA_ID AS OA_REF_NO,OA.OA_DATE,BP.BRANDPACK_NAME,OB.OA_ORIGINAL_QTY,OB.QTY_EVEN,
OB.OA_PRICE_PERQTY AS PRICE,OB.UNIT,OB.REMARK,(OB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OB.OA_PRICE_PERQTY AS OA_AMOUNT,
T_DISC.TOTAL_DISC,(T_DISC.TOTAL_DISC  * OB.OA_PRICE_PERQTY) AS TOTAL_DISC_AMOUNT,
(OB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0) + ISNULL(T_DISC.TOTAL_DISC,0)) AS TOTAL_DELIVERY,
(OB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0) + ISNULL(T_DISC.TOTAL_DISC,0)) * OB.OA_PRICE_PERQTY AS TOTAL_DELIVERY_AMOUNT,
((OB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OB.OA_PRICE_PERQTY)/(OB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0) + ISNULL(T_DISC.TOTAL_DISC,0)) AS NET_PRICE
FROM ORDR_PURCHASE_ORDER PO INNER JOIN DIST_DISTRIBUTOR DR ON PO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
INNER JOIN ORDR_PO_BRANDPACK PB ON PB.PO_REF_NO = PO.PO_REF_NO INNER JOIN ORDR_ORDER_ACCEPTANCE OA
ON OA.PO_REF_NO = PB.PO_REF_NO AND OA.PO_REF_NO = PO.PO_REF_NO
INNER JOIN ORDR_OA_BRANDPACK OB ON OB.OA_ID = OA.OA_ID AND OB.PO_BRANDPACK_ID = PB.PO_BRANDPACK_ID
INNER JOIN BRND_BRANDPACK BP ON PB.BRANDPACK_ID = BP.BRANDPACK_ID 
LEFT OUTER JOIN(
                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
                 WHERE GQSY_SGT_P_FLAG != 'RMOA'
                 GROUP BY OA_BRANDPACK_ID
                )T_DISC ON OB.OA_BRANDPACK_ID = T_DISC.OA_BRANDPACK_ID
LEFT OUTER JOIN( 
                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
                 WHERE GQSY_SGT_P_FLAG = 'RMOA'
                 GROUP BY OA_BRANDPACK_ID
                )OA_LEFT ON OA_LEFT.OA_BRANDPACK_ID = OB.OA_BRANDPACK_ID 
WHERE OA.OA_ID = @OA_REF_NO
GO

IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Sp_GetView_OTHER_DISC_HISTORY' AND TYPE = 'P')
DROP PROCEDURE Sp_GetView_OTHER_DISC_HISTORY
GO
CREATE PROCEDURE Sp_GetView_OTHER_DISC_HISTORY
@DISTRIBUTOR_ID VARCHAR(10),
@START_DATE SMALLDATETIME,
@END_DATE SMALLDATETIME,
@FLAG VARCHAR(5)
AS
SET NOCOUNT ON;
SELECT OOB.OA_BRANDPACK_ID,OOBD.DISC_QTY,OOBD.PRICE_PRQTY,OOBD.DISC_QTY * OOBD.PRICE_PRQTY AS AMOUNT_DISC_PRICE,
[TYPE] = CASE OOBD.GQSY_SGT_P_FLAG WHEN 'O' THEN 'OTHER DISCOUNT' WHEN 'ODD' THEN 'OTHER DISCOUNT(DD)' WHEN 'ODR' THEN 'OTHER DISCOUNT(DR)'
WHEN 'OCBD' THEN 'OTHER DISCOUNT(CBD)' END
FROM ORDR_OA_BRANDPACK OOB INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD 
ON OOB.OA_BRANDPACK_ID = OOBD.OA_BRANDPACK_ID 
INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_BRANDPACK_ID = OOB.PO_BRANDPACK_ID
INNER JOIN ORDR_PURCHASE_ORDER PO ON OPB.PO_REF_NO = PO.PO_REF_NO
WHERE OOBD.GQSY_SGT_P_FLAG =@FLAG
AND PO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND PO.PO_REF_DATE >= @START_DATE AND PO.PO_REF_DATE <= @END_DATE;
GO

IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Create_View_Distributor_Report_1' AND TYPE = 'P')
DROP PROCEDURE Usp_Create_View_Distributor_Report_1
GO
CREATE PROCEDURE Usp_Create_View_Distributor_Report_1
@StartDate DateTime,
@EndDate DateTime
AS 
SET NOCOUNT ON;
IF (@StartDate IS NOT NULL AND @EndDate IS NOT NULL)
BEGIN
	 SELECT DG.REGIONAL_AREA,TER.TERRITORY_AREA,OPO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,OPO.PO_REF_NO,OPO.PO_REF_DATE,
	OOA.OA_ID AS OA_REF_NO,OOA.OA_DATE,BR.BRAND_ID,BR.BRAND_NAME,BB.BRANDPACK_ID,BB.BRANDPACK_NAME,OPB.PO_ORIGINAL_QTY AS PO_QTY,OOB.QTY_EVEN,
	OPB.PO_PRICE_PERQTY AS PRICE,OOB.UNIT,OOB.REMARK,OPB.DESCRIPTIONS2 AS CSE_REMARK,ISNULL(OA_DISC.REMAIND_QTY,0)AS REMAIND_QTY,OA_DISC.GIVEN_AGREEMENT,OA_DISC.[QUARTER],
	OA_DISC.[SEMESTER],OA_DISC.YEARLY,OA_DISC.RPK,OA_DISC.DK,OA_DISC.CP_D,OA_DISC.CP_D_S,OA_DISC.CP_RMT,OA_DISC.PKPP,OA_DISC.CP_R,
	OA_DISC.CP_D_AUTO,OA_DISC.OTHER,OA_DISC.OTHER_DD,OA_DISC.OTHER_DR,OA_DISC.OTHER_CBD,
	ISNULL(T_DISC.TOTAL_DISC,0)AS TOTAL_DISC,
	--ISNULL(T_DISC.TOTAL_DISC,0) * OOB.OA_PRICE_PERQTY AS TOTAL_DISC_AMOUNT,
	OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_DELIVERY,
	--(OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_DELIVERY,
	OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_SALES
	--(OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_SALES         
	FROM ORDR_PURCHASE_ORDER OPO INNER JOIN DIST_DISTRIBUTOR DR ON OPO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
	 INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = OPO.PO_REF_NO LEFT OUTER JOIN ORDR_ORDER_ACCEPTANCE OOA
	ON OOA.PO_REF_NO = OPB.PO_REF_NO --INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
	LEFT OUTER JOIN ORDR_OA_BRANDPACK OOB ON OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID AND OOB.OA_ID = OOA.OA_ID
	INNER JOIN BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID --INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD ON OOBD.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
	LEFT OUTER JOIN
	               (
	                 SELECT OA_BRANDPACK_ID,
	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'RMOA' THEN DISC_QTY ELSE 0 END)AS REMAIND_QTY,
	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'G' THEN DISC_QTY ELSE 0 END)AS GIVEN_AGREEMENT, 
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Q1' THEN DISC_QTY WHEN 'Q2' THEN DISC_QTY WHEN 'Q3' THEN DISC_QTY
	                                     	  WHEN 'Q4' THEN DISC_QTY ELSE 0 END)AS [QUARTER],
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'S1' THEN DISC_QTY WHEN 'S2' THEN DISC_QTY ELSE 0 END)AS [SEMESTER], 
	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Y' THEN DISC_QTY ELSE 0 END)AS YEARLY, 
	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'MG' THEN DISC_QTY ELSE 0 END)AS RPK,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'DK' THEN DISC_QTY WHEN 'DN' THEN DISC_QTY ELSE 0 END)AS DK,
	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CP' THEN DISC_QTY WHEN 'TD' THEN DISC_QTY ELSE 0 END)AS CP_D,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CS' THEN DISC_QTY WHEN 'TS' THEN DISC_QTY WHEN 'SC' THEN DISC_QTY ELSE 0 END)AS CP_D_S,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CD' THEN DISC_QTY WHEN 'CT' THEN DISC_QTY ELSE 0 END)AS CP_RMT,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'KP' THEN DISC_QTY ELSE 0 END)AS PKPP,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CR' THEN DISC_QTY ELSE 0 END) AS CP_R,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CA' THEN DISC_QTY ELSE 0 END) AS CP_D_AUTO,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'O'  THEN DISC_QTY ELSE 0 END) AS OTHER,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'ODD' THEN DISC_QTY ELSE 0 END) AS OTHER_DD,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'ODR' THEN DISC_QTY ELSE 0 END) AS OTHER_DR,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'OCBD' THEN DISC_QTY ELSE 0 END) AS OTHER_CBD
					 FROM ORDR_OA_BRANDPACK_DISC GROUP BY OA_BRANDPACK_ID
	           	)OA_DISC ON OA_DISC.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
	LEFT OUTER JOIN(
	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
	                 WHERE GQSY_SGT_P_FLAG != 'RMOA'
	                 GROUP BY OA_BRANDPACK_ID
	                )T_DISC ON OOB.OA_BRANDPACK_ID = T_DISC.OA_BRANDPACK_ID
	LEFT OUTER JOIN( 
	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
	                 WHERE GQSY_SGT_P_FLAG = 'RMOA'
	                 GROUP BY OA_BRANDPACK_ID
	                )OA_LEFT ON OA_LEFT.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID 
	INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
	INNER JOIN DIST_REGIONAL DG ON DG.REGIONAL_ID = TER.REGIONAL_ID 
	INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
	WHERE OPO.PO_REF_DATE >= @StartDate AND OPO.PO_REF_DATE <= @EndDate
END
ELSE IF (@StartDate IS NOT NULL)
BEGIN
	 SELECT DG.REGIONAL_AREA,TER.TERRITORY_AREA,OPO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,OPO.PO_REF_NO,OPO.PO_REF_DATE,
	OOA.OA_ID AS OA_REF_NO,OOA.OA_DATE,BR.BRAND_ID,BR.BRAND_NAME,BB.BRANDPACK_ID,BB.BRANDPACK_NAME,OPB.PO_ORIGINAL_QTY AS PO_QTY,OOB.QTY_EVEN,
	OPB.PO_PRICE_PERQTY AS PRICE,OOB.UNIT,OOB.REMARK,OPB.DESCRIPTIONS2 AS CSE_REMARK,ISNULL(OA_DISC.REMAIND_QTY,0)AS REMAIND_QTY,OA_DISC.GIVEN_AGREEMENT,OA_DISC.[QUARTER],
	OA_DISC.[SEMESTER],OA_DISC.YEARLY,OA_DISC.RPK,OA_DISC.DK,OA_DISC.CP_D,OA_DISC.CP_D_S,OA_DISC.CP_RMT,OA_DISC.PKPP,OA_DISC.CP_R,
	OA_DISC.CP_D_AUTO,OA_DISC.OTHER,OA_DISC.OTHER_DD,OA_DISC.OTHER_DR,OA_DISC.OTHER_CBD,
	ISNULL(T_DISC.TOTAL_DISC,0)AS TOTAL_DISC,
	--ISNULL(T_DISC.TOTAL_DISC,0) * OOB.OA_PRICE_PERQTY AS TOTAL_DISC_AMOUNT,
	OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_DELIVERY,
	--(OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_DELIVERY,
	OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_SALES
	--(OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_SALES              
	FROM ORDR_PURCHASE_ORDER OPO INNER JOIN DIST_DISTRIBUTOR DR ON OPO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
	 INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = OPO.PO_REF_NO LEFT OUTER JOIN ORDR_ORDER_ACCEPTANCE OOA
	ON OOA.PO_REF_NO = OPB.PO_REF_NO --INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
	LEFT OUTER JOIN ORDR_OA_BRANDPACK OOB ON OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID AND OOB.OA_ID = OOA.OA_ID
	INNER JOIN BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID --INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD ON OOBD.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
	LEFT OUTER JOIN
	               (
	                 SELECT OA_BRANDPACK_ID,
	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'RMOA' THEN DISC_QTY ELSE 0 END)AS REMAIND_QTY,
	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'G' THEN DISC_QTY ELSE 0 END)AS GIVEN_AGREEMENT, 
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Q1' THEN DISC_QTY WHEN 'Q2' THEN DISC_QTY WHEN 'Q3' THEN DISC_QTY
	                                     	  WHEN 'Q4' THEN DISC_QTY ELSE 0 END)AS [QUARTER],
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'S1' THEN DISC_QTY WHEN 'S2' THEN DISC_QTY ELSE 0 END)AS [SEMESTER], 
	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Y' THEN DISC_QTY ELSE 0 END)AS YEARLY, 
	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'MG' THEN DISC_QTY ELSE 0 END)AS RPK,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'DK' THEN DISC_QTY WHEN 'DN' THEN DISC_QTY ELSE 0 END)AS DK,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CP' THEN DISC_QTY WHEN 'TD' THEN DISC_QTY ELSE 0 END)AS CP_D,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CS' THEN DISC_QTY WHEN 'TS' THEN DISC_QTY WHEN 'SC' THEN DISC_QTY ELSE 0 END)AS CP_D_S,
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CD' THEN DISC_QTY WHEN 'CT' THEN DISC_QTY ELSE 0 END)AS CP_RMT,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'KP' THEN DISC_QTY ELSE 0 END)AS PKPP,
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CR' THEN DISC_QTY ELSE 0 END) AS CP_R,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CA' THEN DISC_QTY ELSE 0 END) AS CP_D_AUTO,
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'O'  THEN DISC_QTY ELSE 0 END)AS OTHER,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'ODD' THEN DISC_QTY ELSE 0 END) AS OTHER_DD,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'ODR' THEN DISC_QTY ELSE 0 END) AS OTHER_DR,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'OCBD' THEN DISC_QTY ELSE 0 END) AS OTHER_CBD
	            	 FROM ORDR_OA_BRANDPACK_DISC GROUP BY OA_BRANDPACK_ID
	           	)OA_DISC ON OA_DISC.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
	LEFT OUTER JOIN(
	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
	                 WHERE GQSY_SGT_P_FLAG != 'RMOA'
	                 GROUP BY OA_BRANDPACK_ID
	                )T_DISC ON OOB.OA_BRANDPACK_ID = T_DISC.OA_BRANDPACK_ID
	LEFT OUTER JOIN( 
	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
	                 WHERE GQSY_SGT_P_FLAG = 'RMOA'
	                 GROUP BY OA_BRANDPACK_ID
	                )OA_LEFT ON OA_LEFT.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID 
	INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
	INNER JOIN DIST_REGIONAL DG ON DG.REGIONAL_ID = TER.REGIONAL_ID 
	INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
	WHERE OPO.PO_REF_DATE >= @StartDate
END
ELSE IF (@EndDate IS NOT NULL)
BEGIN
   SELECT DG.REGIONAL_AREA,TER.TERRITORY_AREA,OPO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,OPO.PO_REF_NO,OPO.PO_REF_DATE,
	OOA.OA_ID AS OA_REF_NO,OOA.OA_DATE,BR.BRAND_ID,BR.BRAND_NAME,BB.BRANDPACK_ID,BB.BRANDPACK_NAME,OPB.PO_ORIGINAL_QTY AS PO_QTY,OOB.QTY_EVEN,
	OPB.PO_PRICE_PERQTY AS PRICE,OOB.UNIT,OOB.REMARK,OPB.DESCRIPTIONS2 AS CSE_REMARK,ISNULL(OA_DISC.REMAIND_QTY,0)AS REMAIND_QTY,OA_DISC.GIVEN_AGREEMENT,OA_DISC.[QUARTER],
	OA_DISC.[SEMESTER],OA_DISC.YEARLY,OA_DISC.RPK,OA_DISC.DK,OA_DISC.CP_D,OA_DISC.CP_D_S,OA_DISC.CP_RMT,OA_DISC.PKPP,OA_DISC.CP_R,
	OA_DISC.CP_D_AUTO,OA_DISC.OTHER,OA_DISC.OTHER_DD,OA_DISC.OTHER_DR,OA_DISC.OTHER_CBD,
	ISNULL(T_DISC.TOTAL_DISC,0)AS TOTAL_DISC,
	--ISNULL(T_DISC.TOTAL_DISC,0) * OOB.OA_PRICE_PERQTY AS TOTAL_DISC_AMOUNT,
	OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_DELIVERY,
	--(OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_DELIVERY,
	OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_SALES
	--(OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_SALES       
	FROM ORDR_PURCHASE_ORDER OPO INNER JOIN DIST_DISTRIBUTOR DR ON OPO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
	 INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = OPO.PO_REF_NO LEFT OUTER JOIN ORDR_ORDER_ACCEPTANCE OOA
	ON OOA.PO_REF_NO = OPB.PO_REF_NO --INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
	LEFT OUTER JOIN ORDR_OA_BRANDPACK OOB ON OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID AND OOB.OA_ID = OOA.OA_ID
	INNER JOIN BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID --INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD ON OOBD.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
	LEFT OUTER JOIN
	               (
	                 SELECT OA_BRANDPACK_ID,
	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'RMOA' THEN DISC_QTY ELSE 0 END)AS REMAIND_QTY,
	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'G' THEN DISC_QTY ELSE 0 END)AS GIVEN_AGREEMENT, 
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Q1' THEN DISC_QTY WHEN 'Q2' THEN DISC_QTY WHEN 'Q3' THEN DISC_QTY
	                                     	  WHEN 'Q4' THEN DISC_QTY ELSE 0 END)AS [QUARTER],
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'S1' THEN DISC_QTY WHEN 'S2' THEN DISC_QTY ELSE 0 END)AS [SEMESTER], 
	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Y' THEN DISC_QTY ELSE 0 END)AS YEARLY, 
	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'MG' THEN DISC_QTY ELSE 0 END)AS RPK,
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'DK' THEN DISC_QTY WHEN 'DN' THEN DISC_QTY ELSE 0 END)AS DK,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CP' THEN DISC_QTY WHEN 'TD' THEN DISC_QTY ELSE 0 END)AS CP_D,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CS' THEN DISC_QTY WHEN 'TS' THEN DISC_QTY WHEN 'SC' THEN DISC_QTY ELSE 0 END)AS CP_D_S,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CD' THEN DISC_QTY WHEN 'CT' THEN DISC_QTY ELSE 0 END)AS CP_RMT,
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'KP' THEN DISC_QTY ELSE 0 END)AS PKPP,
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CR' THEN DISC_QTY ELSE 0 END) AS CP_R,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CA' THEN DISC_QTY ELSE 0 END) AS CP_D_AUTO,
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'O'  THEN DISC_QTY ELSE 0 END) AS OTHER,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'ODD' THEN DISC_QTY ELSE 0 END) AS OTHER_DD,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'ODR' THEN DISC_QTY ELSE 0 END) AS OTHER_DR,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'OCBD' THEN DISC_QTY ELSE 0 END) AS OTHER_CBD
	            	 FROM ORDR_OA_BRANDPACK_DISC GROUP BY OA_BRANDPACK_ID
	           	)OA_DISC ON OA_DISC.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
	LEFT OUTER JOIN(
	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
	                 WHERE GQSY_SGT_P_FLAG != 'RMOA'
	                 GROUP BY OA_BRANDPACK_ID
	                )T_DISC ON OOB.OA_BRANDPACK_ID = T_DISC.OA_BRANDPACK_ID
	LEFT OUTER JOIN( 
	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
	                 WHERE GQSY_SGT_P_FLAG = 'RMOA'
	                 GROUP BY OA_BRANDPACK_ID
	                )OA_LEFT ON OA_LEFT.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID 
	INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
	INNER JOIN DIST_REGIONAL DG ON DG.REGIONAL_ID = TER.REGIONAL_ID 
	INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
	WHERE OPO.PO_REF_DATE <= @EndDate
END
GO

IF EXISTS(SELECT NAME FROM SYS.OBJECTS WHERE NAME = 'Usp_Create_View_Report_Per_OA_Ref_No' AND TYPE = 'P')
DROP PROCEDURE Usp_Create_View_Report_Per_OA_Ref_No
GO
CREATE PROCEDURE Usp_Create_View_Report_Per_OA_Ref_No
@OA_REF_NO VARCHAR(32)
AS
SET NOCOUNT ON;
EXECUTE sp_executesql  N'SELECT OPO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,OPO.PO_REF_NO,OPO.PO_REF_DATE,
OOA.OA_ID AS OA_REF_NO,OOA.OA_DATE,BB.BRANDPACK_NAME,OOB.OA_ORIGINAL_QTY ,OOB.QTY_EVEN,
OOB.OA_PRICE_PERQTY AS PRICE,OOB.UNIT,OOB.REMARK,OA_DISC.REMAIND_QTY,OA_DISC.GIVEN_AGREEMENT,OA_DISC.[QUARTER],
OA_DISC.[SEMESTER],OA_DISC.YEARLY,OA_DISC.RPK,OA_DISC.CP_MRT,OA_DISC.DK,OA_DISC.CP_D,OA_DISC.CP_DK,OA_DISC.PKPP,OA_DISC.CP_R,
OA_DISC.OTHER,(OA_DISC.GIVEN_AGREEMENT * OOB.OA_PRICE_PERQTY) AS GIVEN_AMOUNT,
(OA_DISC.[QUARTER]* OOB.OA_PRICE_PERQTY) AS QUARTER_AMOUNT,
(OA_DISC.[SEMESTER] * OOB.OA_PRICE_PERQTY) AS SEMESTER_AMOUNT,
(OA_DISC.[YEARLY] * OOB.OA_PRICE_PERQTY) AS YEARLY_AMOUNT,
(OA_DISC.RPK * OOB.OA_PRICE_PERQTY) AS RPK_AMOUNT,
(OA_DISC.DK * OOB.OA_PRICE_PERQTY) AS DK_AMOUNT,
(OA_DISC.CP_D * OOB.OA_PRICE_PERQTY) AS CP_D_AMOUNT,
(OA_DISC.CP_DK * OOB.OA_PRICE_PERQTY) AS CP_DK_AMOUNT,
(OA_DISC.PKPP * OOB.OA_PRICE_PERQTY) AS PKPP_AMOUNT,
(OA_DISC.CP_R * OOB.OA_PRICE_PERQTY) AS CP_R_AMOUNT,
(OA_DISC.OTHER * OOB.OA_PRICE_PERQTY) AS OTHER_AMOUNT,
(OA_DISC.CP_MRT * OOB.OA_PRICE_PERQTY) AS CP_MRT_AMOUNT, 
(OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS OA_AMOUNT,
((T_DISC.TOTAL_DISC - ISNULL(ADJUST.ADJUST_QTY,0)) * OOB.OA_PRICE_PERQTY) AS TOTAL_DISC_AMOUNT,
ISNULL(ADJUST.ADJUST_QTY,0) AS ADJUST_QTY, ISNULL(ADJUST.ADJUST_QTY,0) * OOB.OA_PRICE_PERQTY AS ADJUST_AMOUNT
FROM ORDR_PURCHASE_ORDER OPO INNER JOIN DIST_DISTRIBUTOR DR ON OPO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
 INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = OPO.PO_REF_NO INNER JOIN ORDR_ORDER_ACCEPTANCE OOA
ON OOA.PO_REF_NO = OPB.PO_REF_NO
INNER JOIN ORDR_OA_BRANDPACK OOB ON OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID AND OOB.OA_ID = OOA.OA_ID
INNER JOIN BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID --INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD ON OOBD.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
LEFT OUTER JOIN
               (
                 SELECT OA_BRANDPACK_ID,
                 SUM(CASE GQSY_SGT_P_FLAG WHEN ''RMOA'' THEN DISC_QTY ELSE 0 END)AS REMAIND_QTY,
                 SUM(CASE GQSY_SGT_P_FLAG WHEN ''G''  THEN DISC_QTY ELSE 0 END)AS GIVEN_AGREEMENT, 
            	 SUM(CASE GQSY_SGT_P_FLAG WHEN ''Q1'' THEN DISC_QTY WHEN ''Q2'' THEN DISC_QTY WHEN ''Q3'' THEN DISC_QTY
                                     	  WHEN ''Q4'' THEN DISC_QTY ELSE 0 END)AS [QUARTER],
				 SUM(CASE GQSY_SGT_P_FLAG WHEN ''S1'' THEN DISC_QTY WHEN ''S2'' THEN DISC_QTY ELSE 0 END)AS [SEMESTER], 
           		 SUM(CASE GQSY_SGT_P_FLAG WHEN ''Y''  THEN DISC_QTY ELSE 0 END)AS YEARLY, 
           		 SUM(CASE GQSY_SGT_P_FLAG WHEN ''MG'' THEN DISC_QTY ELSE 0 END)AS RPK,
				 SUM(CASE GQSY_SGT_P_FLAG WHEN ''DK'' THEN DISC_QTY WHEN ''DN'' THEN DISC_QTY ELSE 0 END)AS DK,
           		 SUM(CASE GQSY_SGT_P_FLAG WHEN ''CP'' THEN DISC_QTY  WHEN ''TD'' THEN DISC_QTY WHEN ''CA'' THEN DISC_QTY ELSE 0 END)AS CP_D,
				 SUM(CASE GQSY_SGT_P_FLAG WHEN ''CS'' THEN DISC_QTY  WHEN ''TS'' THEN DISC_QTY ELSE 0 END)AS CP_DK,
				 SUM(CASE GQSY_SGT_P_FLAG WHEN ''CT'' THEN DISC_QTY WHEN ''CD'' THEN DISC_QTY ELSE 0 END)AS CP_MRT,
				 SUM(CASE GQSY_SGT_P_FLAG WHEN ''KP'' THEN DISC_QTY ELSE 0 END)AS PKPP,
				 SUM(CASE GQSY_SGT_P_FLAG WHEN ''CR'' THEN DISC_QTY ELSE 0 END) AS CP_R,
				 SUM(CASE GQSY_SGT_P_FLAG WHEN ''O''  THEN DISC_QTY WHEN ''ODD''  THEN DISC_QTY WHEN ''ODR''  THEN DISC_QTY WHEN ''OCBD'' THEN DISC_QTY ELSE 0 END)AS OTHER
				 FROM ORDR_OA_BRANDPACK_DISC GROUP BY OA_BRANDPACK_ID
           	)OA_DISC ON OA_DISC.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
LEFT OUTER JOIN(
                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
                 WHERE GQSY_SGT_P_FLAG != ''RMOA''
                 GROUP BY OA_BRANDPACK_ID
                )T_DISC ON OOB.OA_BRANDPACK_ID = T_DISC.OA_BRANDPACK_ID
LEFT OUTER JOIN( 
                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
                 WHERE GQSY_SGT_P_FLAG = ''RMOA''
                 GROUP BY OA_BRANDPACK_ID
                )OA_LEFT ON OA_LEFT.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID 
LEFT OUTER JOIN (
				SELECT OOBD.OA_BRANDPACK_ID,ISNULL(SUM(AT.ADJ_DISC_QTY),0) AS ADJUST_QTY FROM ORDR_OA_BRANDPACK_DISC OOBD INNER JOIN ADJUSTMENT_TRANS AT 
				ON AT.OA_BRANDPACK_DISC_ID = OOBD.OA_BRANDPACK_DISC_ID WHERE OOBD.OA_BRANDPACK_ID = ANY(SELECT OA_BRANDPACK_ID FROM ORDR_OA_BRANDPACK WHERE OA_ID = @V_OA_REF_NO)
				GROUP BY OOBD.OA_BRANDPACK_ID
				)ADJUST
ON ADJUST.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID				
WHERE OOA.OA_ID = @V_OA_REF_NO OPTION(KEEP PLAN)',N'@V_OA_REF_NO VARCHAR(32)',@V_OA_REF_NO = @OA_REF_NO
GO

IF EXISTS(SELECT NAME FROM SYS.OBJECTS WHERE NAME = 'Usp_Get_Schem_Distributor_History_Other' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Schem_Distributor_History_Other
GO
CREATE PROCEDURE Usp_Get_Schem_Distributor_History_Other
@DISTRIBUTOR_ID VARCHAR(10)
AS
SET NOCOUNT ON;
	SELECT CDBL.BRAND_ID,CDBL.BRAND_NAME,ISNULL(C.BRANDPACK_NAME,'All Packs')AS BRANDPACK_NAME,CDBL.APPLY_DATE,CDBL.END_DATE,CDBL.APPLY_TO,
	CDBL.PROGRAM_DESC,CDBL.DISC_PROG_DESC FROM(
	SELECT BD.IDApp,BDL.BRAND_ID,BR.BRAND_NAME,BD.APPLY_DATE,END_DATE,APPLY_TO = 'ALL DISTRIBUTOR',BD.PROGRAM_DESC,BD.DISC_PROG_DESC
	FROM BRND_DISC_HEADER BD INNER JOIN BRND_DISC_LIST_BRAND BDL ON BDL.FKApp = BD.IDApp 
	INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BDL.BRAND_ID
	WHERE BD.APPLY_TO = 'AL' 
	UNION

	SELECT BD.IDApp,BDL.BRAND_ID,BR.BRAND_NAME,BD.APPLY_DATE,END_DATE,APPLY_TO = 'CERTAIN DISTRIBUTOR',BD.PROGRAM_DESC,BD.DISC_PROG_DESC
	FROM BRND_DISC_HEADER BD INNER JOIN BRND_DISC_LIST_BRAND BDL ON BDL.FKApp = BD.IDApp 
	INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BDL.BRAND_ID INNER JOIN DIST_DISC_BRAND_LIST DDBL
	ON DDBL.FKApp = BD.IDApp
	WHERE BD.APPLY_TO = 'CD' AND DDBL.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
	)CDBL 
	LEFT OUTER JOIN(
	SELECT BDLB.FkApp,BB.BRANDPACK_NAME FROM BRND_BRANDPACK BB INNER JOIN BRND_DISC_LIST_BRANDPACK BDLB ON BDLB.BRANDPACK_ID = BB.BRANDPACK_ID 
	INNER JOIN DIST_DISC_BRAND_LIST DDBL ON DDBL.FKApp  = BDLB.FkApp 	INNER JOIN BRND_DISC_PROG BDP ON BDP.BRANDPACK_ID = BDLB.BRANDPACK_ID AND BDLB.FKApp = BDP.FKApp
	WHERE DDBL.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
	)C
	ON C.FkApp = cdbl.IDApp 

GO

IF EXISTS(SELECT NAME FROM SYS.OBJECTS WHERE NAME = 'Usp_Get_Schema_Distributor_History_Other_Detail' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Schema_Distributor_History_Other_Detail
GO
CREATE PROCEDURE Usp_Get_Schema_Distributor_History_Other_Detail
@DISTRIBUTOR_ID VARCHAR(10)
AS
SET NOCOUNT ON;
SELECT BD.PROGRAM_DESC,BD.APPLY_DATE,END_DATE,APPLY_TO = 'ALL DISTRIBUTOR',BDL.BRAND_ID,BR.BRAND_NAME,BDP.BRANDPACK_ID,
BP.BRANDPACK_NAME,BDP.MoreThanQty AS TARGET_PO,BDP.Disc/100 AS DISCOUNT
FROM BRND_DISC_HEADER BD INNER JOIN BRND_DISC_LIST_BRAND BDL ON BD.IDApp = BDL.FKApp
LEFT OUTER JOIN BRND_DISC_LIST_BRANDPACK BDLP ON BDLP.FKApp = BD.IDApp
LEFT OUTER JOIN BRND_BRANDPACK BP ON BP.BRANDPACK_ID = BDLP.BRANDPACK_ID
LEFT OUTER JOIN BRND_DISC_PROG BDP ON BDP.FKApp = BD.IDApp AND BDP.BRANDPACK_ID = BDLP.BRANDPACK_ID
INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BDL.BRAND_ID  
WHERE BD.APPLY_TO = 'AL' 
UNION
SELECT BD.PROGRAM_DESC,BD.APPLY_DATE,END_DATE,APPLY_TO = 'CERTAIN DISTRIBUTOR',BDL.BRAND_ID,BR.BRAND_NAME,BDP.BRANDPACK_ID,
BP.BRANDPACK_NAME,BDP.MoreThanQty AS TARGET_PO,BDP.Disc/100 AS DISCOUNT
FROM BRND_DISC_HEADER BD INNER JOIN BRND_DISC_LIST_BRAND BDL ON BD.IDApp = BDL.FKApp
LEFT OUTER JOIN BRND_DISC_LIST_BRANDPACK BDLP ON BDLP.FKApp = BD.IDApp
LEFT OUTER JOIN BRND_BRANDPACK BP ON BP.BRANDPACK_ID = BDLP.BRANDPACK_ID
LEFT OUTER JOIN BRND_DISC_PROG BDP ON BDP.FKApp = BD.IDApp AND BDP.BRANDPACK_ID = BDLP.BRANDPACK_ID
INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BDL.BRAND_ID
INNER JOIN DIST_DISC_BRAND_LIST DDBL ON DDBL.FKApp = BD.IDApp 
WHERE BD.APPLY_TO = 'CD'  AND DDBL.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
GO

/****** Object:  Table [dbo].[BRND_DISC_LIST_BRANDPACK]    Script Date: 5/27/2019 11:16:56 AM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

SET ANSI_PADDING ON
GO

CREATE TABLE [dbo].[BRND_DISC_LIST_BRANDPACK](
	[IDApp] [int] IDENTITY(1,1) NOT NULL,
	[BRANDPACK_ID] [varchar](14) NULL,
	[FKApp] [int] NULL,
	[CreatedBy] [varchar](100) NULL,
	[CreatedDate] [smalldatetime] NULL,
 CONSTRAINT [PK_BRND_DISC_LIST_BRANDPACK] PRIMARY KEY CLUSTERED 
(
	[IDApp] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

SET ANSI_PADDING OFF
GO


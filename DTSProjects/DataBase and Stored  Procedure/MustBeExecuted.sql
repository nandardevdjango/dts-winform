--IF EXISTS(SELECT NAME FROM Nufarm.Sys.Objects WHERE NAME = 'Usp_Get_Total_Qty_Brand_By_Invoice' AND TYPE = 'P')
--DROP PROCEDURE Usp_Get_Total_Qty_Brand_By_Invoice
--GO
--CREATE PROCEDURE Usp_Get_Total_Qty_Brand_By_Invoice---TANGGAL DI CONVERSI JADI DECIMAL TAHUN BULAN TANGGAL
--@AGREEMENT_NO VARCHAR(32),
--@START_DATE SMALLDATETIME,
--@END_DATE SMALLDATETIME,
--@COMPUTERNAME VARCHAR(100)
--AS
----PRT003 Setting referer invoice ke referencePO di InvoiceHeader ReferencePO = 1,NomorPO = 0
--SET DEADLOCK_PRIORITY NORMAL;SET NOCOUNT ON; SET ARITHABORT OFF ; SET ANSI_WARNINGS OFF ;
--DECLARE @Statement NVARCHAR(3000);
--IF (SELECT AllowRules FROM RefBussinesRules WHERE CodeApp = 'RPT003') = 1
--BEGIN
--   SET @Statement = 'SELECT DISTRIBUTOR_ID,BRAND_ID,SUM(QTY)AS TOTAL_INVOICE
--  		   FROM( SELECT PO.DISTRIBUTOR_ID,PO.BRAND_ID,PO.BRANDPACK_ID,(ISNULL(INVOICE.QTY,0)/ISNULL(PO.SPPB_QTY,0)) * PO.PO_ORIGINAL_QTY AS QTY
--			 FROM tempdb..##T_MASTER_PO_' + @COMPUTERNAME + ' PO
--			 INNER JOIN (SELECT INV.PONUMBER,INV.REFERENCE,Tmbp.BRANDPACK_ID_DTS AS BRANDPACK_ID,INV.QTY 
--				      FROM ##T_SELECT_INVOICE_' + @COMPUTERNAME + ' INV INNER JOIN COMPARE_ITEM Tmbp 
--				      ON INV.BRANDPACK_ID =  Tmbp.BRANDPACK_ID_ACCPAC AND INV.QTY > 0
--    			       	     )INVOICE
--			 ON PO.BRANDPACK_ID = INVOICE.BRANDPACK_ID
--			 AND ((PO.PO_REF_NO = INVOICE.PONUMBER)OR(PO.RUN_NUMBER = INVOICE.REFERENCE))
--			 WHERE PO.DISTRIBUTOR_ID = SOME( SELECT DISTRIBUTOR_ID FROM Nufarm.DBO.DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @V_AGREEMENT_NO )
--			 AND PO.PO_REF_DATE >= @V_START_DATE AND PO.PO_REF_DATE <= @V_END_DATE AND PO.IncludeDPD = ''YESS''
--		       )INV
--		   GROUP BY DISTRIBUTOR_ID,BRAND_ID
--		   OPTION(KEEP PLAN);'
--EXECUTE Sp_Executesql @Statement,N'@V_START_DATE SMALLDATETIME,@V_END_DATE SMALLDATETIME,@V_AGREEMENT_NO VARCHAR(100)',
--		      @START_DATE,@END_DATE,@AGREEMENT_NO 
--END 
--GO
------------------------------------------------------------------
--IF NOT EXISTS(SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME = 'PRICE_TAG'
--AND TABLE_NAME = 'ORDR_PO_BRANDPACK')
--BEGIN
--ALTER TABLE ORDR_PO_BRANDPACK ADD PRICE_TAG VARCHAR(150) NULL;
--END
--GO
-------------------------------------------------------
--IF EXISTS(SELECT NAME FROM Nufarm.Sys.Objects WHERE NAME = 'Usp_Select_LEFT_GIVEN_MARKETING' AND TYPE = 'P')
--DROP PROCEDURE Usp_Select_LEFT_GIVEN_MARKETING
--GO
--CREATE PROCEDURE Usp_Select_LEFT_GIVEN_MARKETING
--@BRANDPACK_ID VARCHAR(14),
--@DISTRIBUTOR_ID VARCHAR(10),
--@SGT_FLAG varchar(2),
--@OA_ID VARCHAR(32)
--AS
--SET NOCOUNT ON ;
--DECLARE @V_OA_DATE SMALLDATETIME;
--SET @V_OA_DATE = (SELECT OA_DATE FROM ORDR_ORDER_ACCEPTANCE WHERE OA_ID = @OA_ID);
--IF NOT EXISTS(SELECT [NAME] FROM TEMPDB..SYSOBJECTS WHERE [NAME] = '##T_SHIP_TO_M' AND TYPE = 'U')
--BEGIN
--SELECT ST.SHIP_TO_ID,TM.MANAGER INTO TEMPDB..##T_SHIP_TO_M FROM SHIP_TO ST INNER JOIN TERRITORY_MANAGER TM
--ON TM.TM_ID = ST.TM_ID WHERE TM.INACTIVE = 0 AND TM.INACTIVE IS NOT NULL;
--CREATE CLUSTERED INDEX IX_T_SHIP_TO_M ON TEMPDB..##T_SHIP_TO_M(SHIP_TO_ID)
--END
--
--SELECT MDH.MRKT_DISC_HIST_ID,ISNULL(ST.MANAGER,'')AS PROPOSED_BY,MP.PROGRAM_ID,OPB.BRANDPACK_ID,BB.BRANDPACK_NAME,OPB.PO_REF_NO,OPO.PO_REF_DATE,
--MDH.OA_BRANDPACK_ID,MDH.PROG_BRANDPACK_DIST_ID,MDH.MRKT_OA_QTY,MDH.MRKT_DISC_PCT,
--MDH.MRKT_DISC_QTY,MDH.MRKT_RELEASE_QTY,MDH.MRKT_LEFT_QTY,MDH.SGT_FLAG
--FROM MRKT_DISC_HISTORY MDH INNER JOIN ORDR_OA_BRANDPACK OOA ON OOA.OA_BRANDPACK_ID = MDH.OA_BRANDPACK_ID
--INNER JOIN ORDR_PO_BRANDPACK OPB ON OOA.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID
--INNER JOIN BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID
--INNER JOIN ORDR_PURCHASE_ORDER OPO ON OPB.PO_REF_NO = OPO.PO_REF_NO INNER JOIN ORDR_ORDER_ACCEPTANCE OOC
--ON OOC.PO_REF_NO = OPO.PO_REF_NO 
--AND OOA.OA_ID = OOC.OA_ID
--INNER JOIN MRKT_BRANDPACK_DISTRIBUTOR MBD ON MBD.PROG_BRANDPACK_DIST_ID = MDH.PROG_BRANDPACK_DIST_ID
--INNER JOIN MRKT_BRANDPACK MB ON MBD.PROG_BRANDPACK_ID = MB.PROG_BRANDPACK_ID
--INNER JOIN MRKT_MARKETING_PROGRAM MP ON MB.PROGRAM_ID = MP.PROGRAM_ID
--LEFT OUTER JOIN TEMPDB..##T_SHIP_TO_M ST ON ST.SHIP_TO_ID = MBD.SHIP_TO_ID
--WHERE OPB.BRANDPACK_ID = @BRANDPACK_ID AND OPO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
--AND MBD.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
--AND MDH.SGT_FLAG = @SGT_FLAG AND OOC.OA_DATE <= @V_OA_DATE
-- AND MDH.MRKT_LEFT_QTY > 0
--AND YEAR(OOC.OA_DATE) >= YEAR(GETDATE()) -1;
--
--IF EXISTS(SELECT [NAME] FROM TEMPDB..SYSOBJECTS WHERE [NAME] = '##T_SHIP_TO_M' AND TYPE = 'U')
--BEGIN
--DROP TABLE ##T_SHIP_TO_M;
--END
--GO
--
-----------------------------------------------------------------------------------------------
--
--IF EXISTS(SELECT NAME FROM Nufarm.Sys.Objects WHERE NAME = 'Usp_Changed_Actual_Accrue_By_Year' AND TYPE = 'P')
--	DROP PROCEDURE Usp_Changed_Actual_Accrue_By_Year
--GO
--CREATE PROCEDURE Usp_Changed_Actual_Accrue_By_Year
--@AGREEMENT_NO VARCHAR(32),
--@CURRENT_FLAG VARCHAR(2)
--AS
--SET DEADLOCK_PRIORITY NORMAL; SET NOCOUNT ON;
--DECLARE @V_QS_TREATMENT_FLAG CHAR(1),@V_IsTargetGroup BIT;
--SET @V_QS_TREATMENT_FLAG = (SELECT TOP 1 QS_TREATMENT_FLAG FROM AGREE_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO);
--IF (SELECT COUNT(AGREEMENT_NO) FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO) > 1
--    BEGIN SET @V_IsTargetGroup = 1; END
--ELSE 
--    BEGIN SET @V_IsTargetGroup = 0; END
--
--IF @V_QS_TREATMENT_FLAG = 'Q'
--   BEGIN 
--	SELECT ABI.DISTRIBUTOR_ID,ABI.AGREEMENT_NO,ABI.[ID] AS AGREE_BRAND_ID,ABI.BRAND_ID,ABI.TARGET_YEAR,
--       'TOTAL_ACTUAL' = CASE @CURRENT_FLAG 
--			 WHEN 'Q1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4
--			 WHEN 'Q2' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q3 + ABI.TARGET_Q4
--			 WHEN 'Q3' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q4
--			 ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
--       			 END,
--	ISNULL(ACRH.TOTAL_PO_ORIGINAL,0)AS TOTAL_PO_ORIGINAL,ISNULL(ACRH.TOTAL_PO_DISTRIBUTOR,0) AS TOTAL_PO_DISTRIBUTOR,
--	'ACTUAL_YEAR_DISTRIBUTOR' = CASE @V_IsTargetGroup
--				    WHEN 0 THEN CASE @CURRENT_FLAG 
--					        WHEN 'Q1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4
--					        WHEN 'Q2' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q3 + ABI.TARGET_Q4
--					        WHEN 'Q3' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q4
--					        ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) END
--                                    ELSE  ISNULL(ACRH.ACTUAL_YEAR_DISTRIBUTOR,0)
--                                    END,           		
--        ABI.COMBINED_BRAND FROM VIEW_AGREE_BRAND_INCLUDE ABI
--	INNER JOIN( 
--                   SELECT ACRHA.AGREE_BRAND_ID,ISNULL(ACRHA.ACTUAL_Q1,0) + ISNULL(ACRHA.ACTUAL_Q2,0) + ISNULL(ACRHA.ACTUAL_Q3,0) + ISNULL(ACRHA.ACTUAL_Q4,0)  + ISNULL(ACRHA.TOTAL_JOIN_CP,0) AS TOTAL_ACTUAL,
--		   ISNULL(ACRHA.TOTAL_PO_Q1,0) + ISNULL(ACRHA.TOTAL_PO_Q2,0) + ISNULL(ACRHA.TOTAL_PO_Q3,0) + ISNULL(ACRHA.TOTAL_PO_Q4,0) AS TOTAL_PO_ORIGINAL,	
--		   ISNULL(ACRHA1.ACTUAL_Y,0)AS ACTUAL_Y,ACRHD.DISTRIBUTOR_ID,
--		   ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q1,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q2,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q3,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q4,0)  + ISNULL(ACRHD.TOTAL_CP,0) AS ACTUAL_YEAR_DISTRIBUTOR,
--		   ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_Q1,0) + ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_Q2,0) + ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_Q3,0) + ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_Q4,0) AS TOTAL_PO_DISTRIBUTOR
--                   FROM
--                     (
--                      	 SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
--				 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_DISTRIBUTOR END),0)  AS ACTUAL_Q1,
--			 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q1,
--				 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_Q2,
--			 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q2, 
--				 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_DISTRIBUTOR END),0)  AS ACTUAL_Q3,
--			 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q3,
--				 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_Q4,
--			 ISNULL(SUM(CASE FLAG when 'Q4' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q4,
--			     ISNULL(SUM(TOTAL_CPQ1),0) + ISNULL(SUM(TOTAL_CPQ2),0) + ISNULL(SUM(TOTAL_CPQ3),0) AS TOTAL_JOIN_CP
--			 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO 
--			 GROUP BY AGREEMENT_NO + BRAND_ID
--            	      )ACRHA
--		    INNER JOIN
--                            (SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,TOTAL_ACTUAL AS ACTUAL_Y
--	  	             FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO AND FLAG = 'Y'	
--            		     )ACRHA1
--		    ON ACRHA.AGREE_BRAND_ID = ACRHA1.AGREE_BRAND_ID
--                    INNER JOIN 
--                            (SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
--				 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q1,
--				 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_Q1,
--				     ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q2,
--				 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_Q2,
--				     ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q3,
--				 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_Q3,
--					 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q4,
--				 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_Q4,
--			      ISNULL(SUM(TOTAL_CPQ1),0) + ISNULL(SUM(TOTAL_CPQ2),0) + ISNULL(SUM(TOTAL_CPQ3),0) AS TOTAL_CP
--					 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO
--				 GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID 
--            	 	     )ACRHD
--		    ON ACRHD.AGREE_BRAND_ID = ACRHA.AGREE_BRAND_ID
--                   )ACRH
--         ON ACRH.AGREE_BRAND_ID = ABI.[ID] AND ACRH.DISTRIBUTOR_ID = ABI.DISTRIBUTOR_ID
--	WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO
-- 	AND ACRH.ACTUAL_Y <> ACRH.TOTAL_ACTUAL OPTION(KEEP PLAN);
--    END
-- ELSE
--     BEGIN
-- 	 SELECT ABI.DISTRIBUTOR_ID,ABI.AGREEMENT_NO,ABI.[ID] AS AGREE_BRAND_ID,ABI.BRAND_ID,ABI.TARGET_YEAR,
--        'TOTAL_ACTUAL' = CASE @CURRENT_FLAG 
--			 WHEN 'S1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_S2
--			 ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
--        		 END,
--	ISNULL(ACRH.TOTAL_PO_ORIGINAL,0) AS TOTAL_PO_ORIGINAL,ISNULL(ACRH.TOTAL_PO_DISTRIBUTOR,0) AS TOTAL_PO_DISTRIBUTOR,
--	'ACTUAL_YEAR_DISTRIBUTOR' = CASE @V_IsTargetGroup
--				    WHEN 0 THEN CASE @CURRENT_FLAG 
--					       WHEN 'S1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_S2
--			 		       ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
--        		 		       END
--                                    ELSE  ISNULL(ACRH.ACTUAL_YEAR_DISTRIBUTOR,0)
--                                    END,           		
--        ABI.COMBINED_BRAND FROM VIEW_AGREE_BRAND_INCLUDE ABI
--	INNER JOIN ( 
--                        SELECT ACRHA.AGREE_BRAND_ID,ISNULL(ACRHA.ACTUAL_S1,0) + ISNULL(ACRHA.ACTUAL_S2,0) + ISNULL(ACRHA.TOTAL_JOIN_CP,0) AS TOTAL_ACTUAL,
--			ISNULL(ACRHA1.ACTUAL_Y,0)AS ACTUAL_Y,ACRHD.DISTRIBUTOR_ID,
--			ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_S1,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_S2,0)  + ISNULL(ACRHD.TOTAL_CP,0) AS ACTUAL_YEAR_DISTRIBUTOR,
--			 ISNULL(ACRHA.TOTAL_PO_S1,0) + ISNULL(ACRHA.TOTAL_PO_S2,0) AS TOTAL_PO_ORIGINAL,
--			 ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_S1,0) +  ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_S2,0) AS TOTAL_PO_DISTRIBUTOR
--                         FROM
--                             (
--                         	SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
--		    		ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_S1,
--				  ISNULL(SUM(CASE FLAG WHEN 'S1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_S1,
--				  ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_S2,
--				  ISNULL(SUM(CASE FLAG WHEN 'S2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_S2,
--				 ISNULL(SUM(TOTAL_CPS1),0) AS TOTAL_JOIN_CP
--				  FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO
--				  GROUP BY AGREEMENT_NO + BRAND_ID 
--                    	      )ACRHA
-- 			INNER JOIN
--                                 (SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,TOTAL_ACTUAL AS ACTUAL_Y
--	  	                  FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO AND FLAG = 'Y'	
--		   	          )ACRHA1
--			ON ACRHA.AGREE_BRAND_ID = ACRHA1.AGREE_BRAND_ID
--                        INNER JOIN 
--                                 (SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
--						ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_S1,
--				ISNULL(SUM(CASE FLAG WHEN 'S1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_S1,
--					ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_S2,
--				ISNULL(SUM(CASE FLAG WHEN 'S2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_S2,
--    	 				    ISNULL(SUM(TOTAL_CPS1),0) AS TOTAL_CP
--					FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO 
--				GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID
--                    	 	  )ACRHD
--   			ON ACRHD.AGREE_BRAND_ID = ACRHA.AGREE_BRAND_ID
--                     )ACRH
--        ON ACRH.AGREE_BRAND_ID = ABI.[ID] AND ACRH.DISTRIBUTOR_ID = ABI.DISTRIBUTOR_ID
--	WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO
-- 	AND ACRH.ACTUAL_Y <> ACRH.TOTAL_ACTUAL OPTION(KEEP PLAN);
--   END
--GO
-------------------------------------------------------
--IF EXISTS(SELECT NAME FROM Nufarm.Sys.Objects WHERE NAME = 'Usp_Get_Total_Acrue_By_Year' AND TYPE = 'P')
--DROP PROCEDURE Usp_Get_Total_Acrue_By_Year
--GO
--CREATE PROCEDURE Usp_Get_Total_Acrue_By_Year
--@AGREEMENT_NO VARCHAR(32),
--@CURRENT_FLAG VARCHAR(2)
--AS
--SET DEADLOCK_PRIORITY NORMAL; SET NOCOUNT ON;
--DECLARE @V_QS_TREATMENT_FLAG CHAR(1),@V_IsTargetGroup BIT;
--SET @V_QS_TREATMENT_FLAG = (SELECT TOP 1 QS_TREATMENT_FLAG FROM AGREE_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO);
--IF (SELECT COUNT(AGREEMENT_NO) FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO) > 1
--    BEGIN SET @V_IsTargetGroup = 1; END
--ELSE 
--    BEGIN SET @V_IsTargetGroup = 0; END
--IF @V_QS_TREATMENT_FLAG = 'Q'
--   BEGIN 
--	SELECT ABI.DISTRIBUTOR_ID,ABI.AGREEMENT_NO,ABI.[ID] AS AGREE_BRAND_ID,ABI.BRAND_ID,ABI.TARGET_YEAR,
--       'TOTAL_ACTUAL' = CASE @CURRENT_FLAG 
--			 WHEN 'Q1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4
--			 WHEN 'Q2' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q3 + ABI.TARGET_Q4
--			 WHEN 'Q3' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q4
--			 ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
--       			 END,
--	ISNULL(ACRH.TOTAL_PO_ORIGINAL,0)AS TOTAL_PO_ORIGINAL,ISNULL(ACRH.TOTAL_PO_DISTRIBUTOR,0) AS TOTAL_PO_DISTRIBUTOR,
--	'ACTUAL_YEAR_DISTRIBUTOR' = CASE @V_IsTargetGroup
--				    WHEN 0 THEN CASE @CURRENT_FLAG 
--					        WHEN 'Q1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4
--					        WHEN 'Q2' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q3 + ABI.TARGET_Q4
--					        WHEN 'Q3' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q4
--					        ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) END
--                                    ELSE  ISNULL(ACRH.ACTUAL_YEAR_DISTRIBUTOR,0)
--                                    END,           		
--        ABI.COMBINED_BRAND FROM VIEW_AGREE_BRAND_INCLUDE ABI
--	LEFT OUTER JOIN( 
--                   SELECT ACRHA.AGREE_BRAND_ID,ISNULL(ACRHA.ACTUAL_Q1,0) + ISNULL(ACRHA.ACTUAL_Q2,0) + ISNULL(ACRHA.ACTUAL_Q3,0) + ISNULL(ACRHA.ACTUAL_Q4,0)  + ISNULL(ACRHA.TOTAL_JOIN_CP,0) AS TOTAL_ACTUAL,
--		   ISNULL(ACRHA.TOTAL_PO_Q1,0) + ISNULL(ACRHA.TOTAL_PO_Q2,0) + ISNULL(ACRHA.TOTAL_PO_Q3,0) + ISNULL(ACRHA.TOTAL_PO_Q4,0) AS TOTAL_PO_ORIGINAL,	
--		   ISNULL(ACRHA1.ACTUAL_Y,0)AS ACTUAL_Y,ACRHD.DISTRIBUTOR_ID,
--		   ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q1,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q2,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q3,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q4,0)  + ISNULL(ACRHD.TOTAL_CP,0) AS ACTUAL_YEAR_DISTRIBUTOR,
--		   ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_Q1,0) + ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_Q2,0) + ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_Q3,0) + ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_Q4,0) AS TOTAL_PO_DISTRIBUTOR
--                   FROM
--                     (
--                      	 SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
--				 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_DISTRIBUTOR END),0)  AS ACTUAL_Q1,
--			 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q1,
--				 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_Q2,
--			 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q2, 
--				 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_DISTRIBUTOR END),0)  AS ACTUAL_Q3,
--			 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q3,
--				 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_Q4,
--			 ISNULL(SUM(CASE FLAG when 'Q4' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q4,
--			     ISNULL(SUM(TOTAL_CPQ1),0) + ISNULL(SUM(TOTAL_CPQ2),0) + ISNULL(SUM(TOTAL_CPQ3),0) AS TOTAL_JOIN_CP
--			 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO 
--			 GROUP BY AGREEMENT_NO + BRAND_ID
--            	      )ACRHA
--		    INNER JOIN
--                            (SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,TOTAL_ACTUAL AS ACTUAL_Y
--	  	             FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO AND FLAG = 'Y'	
--            		     )ACRHA1
--		    ON ACRHA.AGREE_BRAND_ID = ACRHA1.AGREE_BRAND_ID
--                    INNER JOIN 
--                            (SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
--				 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q1,
--				 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_Q1,
--				     ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q2,
--				 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_Q2,
--				     ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q3,
--				 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_Q3,
--					 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q4,
--				 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_Q4,
--			      ISNULL(SUM(TOTAL_CPQ1),0) + ISNULL(SUM(TOTAL_CPQ2),0) + ISNULL(SUM(TOTAL_CPQ3),0) AS TOTAL_CP
--					 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO
--				 GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID 
--            	 	     )ACRHD
--		    ON ACRHD.AGREE_BRAND_ID = ACRHA.AGREE_BRAND_ID
--                   )ACRH
--         ON ACRH.AGREE_BRAND_ID = ABI.[ID] AND ACRH.DISTRIBUTOR_ID = ABI.DISTRIBUTOR_ID
--	WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO
-- 	OPTION(KEEP PLAN);
--    END
-- ELSE
--     BEGIN
-- 	 SELECT ABI.DISTRIBUTOR_ID,ABI.AGREEMENT_NO,ABI.[ID] AS AGREE_BRAND_ID,ABI.BRAND_ID,ABI.TARGET_YEAR,
--        'TOTAL_ACTUAL' = CASE @CURRENT_FLAG 
--			 WHEN 'S1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_S2
--			 ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
--        		 END,
--	ISNULL(ACRH.TOTAL_PO_ORIGINAL,0) AS TOTAL_PO_ORIGINAL,ISNULL(ACRH.TOTAL_PO_DISTRIBUTOR,0) AS TOTAL_PO_DISTRIBUTOR,
--	'ACTUAL_YEAR_DISTRIBUTOR' = CASE @V_IsTargetGroup
--				    WHEN 0 THEN CASE @CURRENT_FLAG 
--					       WHEN 'S1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_S2
--			 		       ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
--        		 		       END
--                                    ELSE  ISNULL(ACRH.ACTUAL_YEAR_DISTRIBUTOR,0)
--                                    END,           		
--        ABI.COMBINED_BRAND FROM VIEW_AGREE_BRAND_INCLUDE ABI
--	LEFT OUTER JOIN ( 
--                        SELECT ACRHA.AGREE_BRAND_ID,ISNULL(ACRHA.ACTUAL_S1,0) + ISNULL(ACRHA.ACTUAL_S2,0) + ISNULL(ACRHA.TOTAL_JOIN_CP,0) AS TOTAL_ACTUAL,
--			ISNULL(ACRHA1.ACTUAL_Y,0)AS ACTUAL_Y,ACRHD.DISTRIBUTOR_ID,
--			ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_S1,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_S2,0)  + ISNULL(ACRHD.TOTAL_CP,0) AS ACTUAL_YEAR_DISTRIBUTOR,
--			 ISNULL(ACRHA.TOTAL_PO_S1,0) + ISNULL(ACRHA.TOTAL_PO_S2,0) AS TOTAL_PO_ORIGINAL,
--			 ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_S1,0) +  ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_S2,0) AS TOTAL_PO_DISTRIBUTOR
--                         FROM
--                             (
--                         	SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
--		    		ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_S1,
--				  ISNULL(SUM(CASE FLAG WHEN 'S1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_S1,
--				  ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_S2,
--				  ISNULL(SUM(CASE FLAG WHEN 'S2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_S2,
--				 ISNULL(SUM(TOTAL_CPS1),0) AS TOTAL_JOIN_CP
--				  FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO
--				  GROUP BY AGREEMENT_NO + BRAND_ID 
--                    	      )ACRHA
-- 			INNER JOIN
--                                 (SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,TOTAL_ACTUAL AS ACTUAL_Y
--	  	                  FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO AND FLAG = 'Y'	
--		   	          )ACRHA1
--			ON ACRHA.AGREE_BRAND_ID = ACRHA1.AGREE_BRAND_ID
--                        INNER JOIN 
--                                 (SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
--						ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_S1,
--				ISNULL(SUM(CASE FLAG WHEN 'S1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_S1,
--					ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_S2,
--				ISNULL(SUM(CASE FLAG WHEN 'S2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_S2,
--    	 				    ISNULL(SUM(TOTAL_CPS1),0) AS TOTAL_CP
--					FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO 
--				GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID
--                    	 	  )ACRHD
--   			ON ACRHD.AGREE_BRAND_ID = ACRHA.AGREE_BRAND_ID
--                     )ACRH
--        ON ACRH.AGREE_BRAND_ID = ABI.[ID] AND ACRH.DISTRIBUTOR_ID = ABI.DISTRIBUTOR_ID
--	WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO
-- 	OPTION(KEEP PLAN);
--   END
--GO
---------------------------------------------
------------------------------SPPB HEADER-----------------------

--------------SPPB BRANPACK AND GON_DETAIL TRANSFER FROM SPPB_BRANDPACK TO GON_DETAIL AND UPDATE Status SPPB
-- WHOSE TOTAL_GON == SPPB_qty -----
--IF EXISTS(SELECT ColumnName FROM (
--			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
--               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
--			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
--			   WHERE t.[TABLE_NAME] = 'SPPB_BRANDPACK')C WHERE ColumnName = 'REMARK')
--ALTER TABLE SPPB_BRANDPACK ALTER COLUMN REMARK VARCHAR(200) ;
--GO
--
--IF EXISTS(SELECT ColumnName FROM (
--			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
--               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
--			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
--			   WHERE t.[TABLE_NAME] = 'SPPB_BRANDPACK')C WHERE ColumnName = 'CREATE_BY')
--ALTER TABLE SPPB_BRANDPACK ALTER COLUMN CREATE_BY VARCHAR(50) ;
--GO
--IF EXISTS(SELECT ColumnName FROM (
--			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
--               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
--			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
--			   WHERE t.[TABLE_NAME] = 'SPPB_BRANDPACK')C WHERE ColumnName = 'MODIFY_BY')
--ALTER TABLE SPPB_BRANDPACK ALTER COLUMN MODIFY_BY VARCHAR(50) ;
--GO
--
--IF EXISTS(SELECT ColumnName FROM (
--			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
--               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
--			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
--			   WHERE t.[TABLE_NAME] = 'SPPB_BRANDPACK')C WHERE ColumnName = 'STATUS')
--ALTER TABLE SPPB_BRANDPACK ALTER COLUMN STATUS VARCHAR(100) ;
--GO
--
--IF NOT EXISTS(SELECT ColumnName FROM (
--			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
--               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
--			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
--			   WHERE t.[TABLE_NAME] = 'SPPB_BRANDPACK')C WHERE ColumnName = 'IsUpdatedBySystem')
--ALTER TABLE SPPB_BRANDPACK ADD IsUpdatedBySystem BIT ;
--GO

/****** Object:  Table [dbo].[LOG_ERR]    Script Date: 02/24/2014 19:29:22 ******/
--SET ANSI_NULLS ON
--GO
--SET QUOTED_IDENTIFIER ON
--GO
--IF NOT EXISTS (SELECT * FROM Nufarm.Sys.Objects WHERE id = OBJECT_ID(N'[dbo].[LOG_ERR]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
--BEGIN
--CREATE TABLE [dbo].[LOG_ERR](
--	[LOG_ID] [varchar](100) NOT NULL,
--	[ERROR_DESC] [varchar](300) NULL,
--	[EVENT_NAME] [varchar](100) NULL,
--	[CreatedBy] [varchar](100) NULL,
--	[CreatedDate] [smalldatetime] NULL,
--	[ModifiedBy] [varchar](100) NULL,
--	[ModifiedDate] [smalldatetime] NULL,
-- CONSTRAINT [PK_LOG_ERR] PRIMARY KEY NONCLUSTERED 
--(
--	[LOG_ID] ASC
--) ON [PRIMARY]
--) ON [PRIMARY]
--END
--GO

/****** Object:  Index [IX_LOG_ERR]    Script Date: 02/24/2014 19:29:22 ******/
--IF NOT EXISTS (SELECT * FROM dbo.sysindexes WHERE id = OBJECT_ID(N'[dbo].[LOG_ERR]') AND name = N'IX_LOG_ERR')
--CREATE CLUSTERED INDEX [IX_LOG_ERR] ON [dbo].[LOG_ERR] 
--(
--	[EVENT_NAME] ASC,
--	[CreatedBy] ASC
--) ON [PRIMARY]
--GO


/****** Object:  Table [dbo].[GON_HEADER]    Script Date: 03/02/2014 06:20:12 ******/
--SET ANSI_NULLS ON
--GO
--SET QUOTED_IDENTIFIER ON
--GO
--CREATE TABLE [dbo].[GON_HEADER](
--	[GON_HEADER_ID] [varchar](50) NOT NULL,	
--	[SPPB_NO] [varchar](16)  NULL,
--	[GON_NO] [varchar](25) NULL,
--	[GON_DATE] [smalldatetime] NULL,
--	[GT_ID] [nchar](10) NULL,
--	[GON_ID_AREA] [nchar](10) NULL,
--	[REMARK] [varchar](200)  NULL,
--	[CreatedBy] [varchar](100)  NULL,
--	[CreatedDate] [smalldatetime] NULL,
--	[ModifiedBy] [varchar](50)NULL,
--	[ModifiedDate] [smalldatetime] NULL
--
-- CONSTRAINT [PK_GON_HEADER_1] PRIMARY KEY NONCLUSTERED 
--(
--	[GON_HEADER_ID] ASC
--) ON [PRIMARY]
--) ON [PRIMARY]
--GO

--EXEC dbo.sp_addextendedproperty @name=N'MS_Description', @value=N'SPPB_NO + | + GON_NO' , @level0type=N'USER',@level0name=N'dbo', @level1type=N'TABLE',@level1name=N'GON_HEADER', @level2type=N'COLUMN',@level2name=N'GON_HEADER_ID'
--GO
--
--/****** Object:  Index [IX_GON_HEADER]    Script Date: 03/02/2014 06:20:12 ******/
--IF NOT EXISTS (SELECT * FROM dbo.sysindexes WHERE id = OBJECT_ID(N'[dbo].[GON_HEADER]') AND name = N'IX_GON_HEADER')
--CREATE CLUSTERED INDEX [IX_GON_HEADER] ON [dbo].[GON_HEADER] 
--(
--	[GON_DATE] ASC,
--	[GON_NO] ASC,
--	[SPPB_NO] ASC,
--	[GT_ID] ASC
--) ON [PRIMARY]
--GO
--/****** Object:  Table [dbo].[GON_DETAIL]    Script Date: 03/02/2014 06:20:12 ******/
--SET ANSI_NULLS ON
--GO
--SET QUOTED_IDENTIFIER ON
--GO
--IF NOT EXISTS (SELECT * FROM Nufarm.Sys.Objects WHERE id = OBJECT_ID(N'[dbo].[GON_DETAIL]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
--BEGIN
--CREATE TABLE [dbo].[GON_DETAIL](
--	[GON_DETAIL_ID] [varchar](150) NOT NULL,
--	[GON_HEADER_ID] [varchar](50) NULL,
--	[SPPB_BRANDPACK_ID] [varchar](90) NULL,
--	[GON_QTY] [decimal](18, 3) NULL,
--	[IsCompleted] [bit] NULL,
--	[IsOpen] [bit] NULL,
--	[CreatedBy] [varchar](100) NULL,
--	[CreatedDate] [smalldatetime] NULL,
--	[ModifiedBy] [varchar](100) NULL,
--	[ModifiedDate] [smalldatetime] NULL,
--	[IsUpdatedBySystem] [bit] NULL,
--	[BRANDPACK_ID] [varchar](14) NULL,
-- CONSTRAINT [PK_GON_DETAIL] PRIMARY KEY NONCLUSTERED 
--(
--	[GON_DETAIL_ID] ASC
--) ON [PRIMARY]
--) ON [PRIMARY]
--END
--GO
--
--/****** Object:  Index [IX_GON_DETAIL]    Script Date: 03/02/2014 06:20:12 ******/
--IF NOT EXISTS (SELECT * FROM dbo.sysindexes WHERE id = OBJECT_ID(N'[dbo].[GON_DETAIL]') AND name = N'IX_GON_DETAIL')
--CREATE NONCLUSTERED INDEX [IX_GON_DETAIL] ON [dbo].[GON_DETAIL] 
--(
--	[GON_HEADER_ID] ASC,
--	[SPPB_BRANDPACK_ID] ASC,
--	[BRANDPACK_ID] ASC
--) ON [PRIMARY]
--GO
--/****** Object:  Table [dbo].[GON_AREA]    Script Date: 02/24/2014 19:29:22 ******/
--SET ANSI_NULLS ON
--GO
--SET QUOTED_IDENTIFIER ON
--GO
--IF NOT EXISTS (SELECT * FROM Nufarm.Sys.Objects WHERE id = OBJECT_ID(N'[dbo].[GON_AREA]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
--BEGIN
--CREATE TABLE [dbo].[GON_AREA](
--	[GON_ID_AREA] [varchar](20) NOT NULL,
--	[AREA] [varchar](100) NULL,
--	[DAYS_RECEIPT] [smallint] NULL,
--	[TRANSPORTATION_BY] [varchar](50) NULL,
--	[CreatedDate] [smalldatetime] NULL,
--	[CreatedBy] [varchar](50) NULL,
--	[ModifiedDate] [smalldatetime] NULL,
--	[ModifiedBy] [varchar](50) NULL,
-- CONSTRAINT [PK_GON_AREA] PRIMARY KEY NONCLUSTERED 
--(
--	[GON_ID_AREA] ASC
--) ON [PRIMARY]
--) ON [PRIMARY]
--END
--GO
--
--/****** Object:  Index [IX_GON_AREA]    Script Date: 02/24/2014 19:29:22 ******/
--IF NOT EXISTS (SELECT * FROM dbo.sysindexes WHERE id = OBJECT_ID(N'[dbo].[GON_AREA]') AND name = N'IX_GON_AREA')
--CREATE NONCLUSTERED INDEX [IX_GON_AREA] ON [dbo].[GON_AREA] 
--(
--	[AREA] ASC,
--	[TRANSPORTATION_BY] ASC
--) ON [PRIMARY]
--GO
--/****** Object:  Table [dbo].[GON_TRANSPORTER]    Script Date: 02/24/2014 19:29:22 ******/
--SET ANSI_NULLS ON
--GO
--SET QUOTED_IDENTIFIER ON
--GO
--IF NOT EXISTS (SELECT * FROM Nufarm.Sys.Objects WHERE id = OBJECT_ID(N'[dbo].[GON_TRANSPORTER]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
--BEGIN
--CREATE TABLE [dbo].[GON_TRANSPORTER](
--	[GT_ID] [varchar](16) NOT NULL,
--	[TRANSPORTER_NAME] [varchar](100) NOT NULL,
--	[CONTACT_PERSON] [varchar](100) NULL,
--	[PHONE] [varchar](20) NULL,
--	[RESPONSIBLE_PERSON] [varchar](100) NULL,
--	[MOBILE] [varchar](20) NULL,
--	[FAX] [varchar](20) NULL,
--	[ADDRESS] [varchar](150) NULL,
--	[NPWP] [varchar](100) NULL,
--	[EMAIL] [varchar](50) NULL,
--	[POSTAL_CODE] [varchar](5) NULL,
--	[DESCRIPTION] [varchar](150) NULL,
--	[CREATE_BY] [varchar](50) NOT NULL,
--	[CREATE_DATE] [smalldatetime] NOT NULL,
--	[MODIFY_BY] [varchar](50) NULL,
--	[MODIFY_DATE] [smalldatetime] NULL,
--	[SPPB_BRANDPACK_ID] [varchar](90) NULL,
--	[BIRTHDATE] [smalldatetime] NULL,
-- CONSTRAINT [PK_GON_TRANSPORTER] PRIMARY KEY CLUSTERED 
--(
--	[GT_ID] ASC
--) ON [PRIMARY]
--) ON [PRIMARY]
--END
--GO
--
--/****** Object:  Index [IX_GON_TRANSPORTER]    Script Date: 02/24/2014 19:29:22 ******/
--IF NOT EXISTS (SELECT * FROM dbo.sysindexes WHERE id = OBJECT_ID(N'[dbo].[GON_TRANSPORTER]') AND name = N'IX_GON_TRANSPORTER')
--CREATE NONCLUSTERED INDEX [IX_GON_TRANSPORTER] ON [dbo].[GON_TRANSPORTER] 
--(
--	[TRANSPORTER_NAME] ASC
--) ON [PRIMARY]
--GO
--IF NOT EXISTS(SELECT ColumnName FROM (
--			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
--               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
--			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
--			   WHERE t.[TABLE_NAME] = 'GON_TRANSPORTER')C WHERE ColumnName = 'ADDRESS')
--ALTER TABLE GON_TRANSPORTER ADD ADDRESS VARCHAR(150) NULL ;
--GO
----------------------------------------------------------------------------------
--IF NOT EXISTS(SELECT ColumnName FROM (
--			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
--               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
--			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
--			   WHERE t.[TABLE_NAME] = 'GON_TRANSPORTER')C WHERE ColumnName = 'EMAIL')
--ALTER TABLE GON_TRANSPORTER ADD EMAIL VARCHAR(100) NULL ;
--GO
--IF NOT EXISTS(SELECT ColumnName FROM (
--			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
--               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
--			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
--			   WHERE t.[TABLE_NAME] = 'GON_TRANSPORTER')C WHERE ColumnName = 'NPWP')
--ALTER TABLE GON_TRANSPORTER ADD NPWP VARCHAR(100) NULL ;
--GO
--IF NOT EXISTS(SELECT ColumnName FROM (
--			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
--               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
--			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
--			   WHERE t.[TABLE_NAME] = 'GON_TRANSPORTER')C WHERE ColumnName = 'CONTACT_PERSON')
--ALTER TABLE GON_TRANSPORTER ADD CONTACT_PERSON VARCHAR(100) NULL ;
--GO
--
--IF NOT EXISTS(SELECT ColumnName FROM (
--			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
--               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
--			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
--			   WHERE t.[TABLE_NAME] = 'GON_TRANSPORTER')C WHERE ColumnName = 'PHONE')
--ALTER TABLE GON_TRANSPORTER ADD PHONE VARCHAR(20) NULL ;
--GO
--
--IF NOT EXISTS(SELECT ColumnName FROM (
--			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
--               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
--			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
--			   WHERE t.[TABLE_NAME] = 'GON_TRANSPORTER')C WHERE ColumnName = 'FAX')
--ALTER TABLE GON_TRANSPORTER ADD FAX VARCHAR(20) NULL ;
--GO
--
--IF NOT EXISTS(SELECT ColumnName FROM (
--			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
--               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
--			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
--			   WHERE t.[TABLE_NAME] = 'GON_TRANSPORTER')C WHERE ColumnName = 'RESPONSIBLE_PERSON')
--ALTER TABLE GON_TRANSPORTER ADD RESPONSIBLE_PERSON VARCHAR(100) NULL ;
--GO
--
--IF NOT EXISTS(SELECT ColumnName FROM (
--			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
--               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
--			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
--			   WHERE t.[TABLE_NAME] = 'GON_TRANSPORTER')C WHERE ColumnName = 'MOBILE')
--ALTER TABLE GON_TRANSPORTER ADD MOBILE VARCHAR(20) NULL ;
--GO
--IF NOT EXISTS(SELECT ColumnName FROM (
--			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
--               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
--			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
--			   WHERE t.[TABLE_NAME] = 'GON_TRANSPORTER')C WHERE ColumnName = 'BIRTHDATE')
--ALTER TABLE GON_TRANSPORTER ADD BIRTHDATE SMALLDATETIME NULL ;
--GO
--
--IF NOT EXISTS(SELECT ColumnName FROM (
--			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
--               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
--			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
--			   WHERE t.[TABLE_NAME] = 'GON_TRANSPORTER')C WHERE ColumnName = 'POSTAL_CODE')
--ALTER TABLE GON_TRANSPORTER ADD POSTAL_CODE VARCHAR(5) NULL ;
--GO
--IF NOT EXISTS(SELECT ColumnName FROM (
--			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
--               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
--			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
--			   WHERE t.[TABLE_NAME] = 'GON_TRANSPORTER')C WHERE ColumnName = 'MODIFY_BY')
--ALTER TABLE GON_TRANSPORTER ADD MODIFY_BY VARCHAR(100) NULL ;
--GO
--IF NOT EXISTS(SELECT ColumnName FROM (
--			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
--               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
--			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
--			   WHERE t.[TABLE_NAME] = 'GON_TRANSPORTER')C WHERE ColumnName = 'MODIFY_DATE')
--ALTER TABLE GON_TRANSPORTER ADD MODIFY_DATE SMALLDATETIME NULL ;
--GO
--
--IF NOT EXISTS(SELECT ColumnName FROM (
--			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
--               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
--			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
--			   WHERE t.[TABLE_NAME] = 'GON_TRANSPORTER')C WHERE ColumnName = 'INACTIVE')
--ALTER TABLE GON_TRANSPORTER ADD INACTIVE BIT NULL ;
--GO
--UPDATE GON_TRANSPORTER SET INACTIVE = 0 WHERE INACTIVE IS NULL;
--GO
----------======= GON RECEIVED BACK==============
----IF NOT EXISTS(SELECT ColumnName FROM (
----			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
----               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
----			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
----			   WHERE t.[TABLE_NAME] = 'GON_RECEIVED_BACK')C WHERE ColumnName = 'SPPB_BRANDPACK_ID')
----ALTER TABLE GON_RECEIVED_BACK ADD SPPB_BRANDPACK_ID VARCHAR(90) NULL ;
----GO
--
--IF NOT EXISTS(SELECT ColumnName FROM (
--			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
--               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
--			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
--			   WHERE t.[TABLE_NAME] = 'SPPB_BRANDPACK')C WHERE ColumnName = 'STATUS')
--ALTER TABLE SPPB_BRANDPACK ALTER COLUMN STATUS VARCHAR(50) NULL ;
--GO
--IF NOT EXISTS(SELECT ColumnName FROM (
--			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
--               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
--			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
--			   WHERE t.[TABLE_NAME] = 'SPPB_BRANDPACK')C WHERE ColumnName = 'BRANDPACK_ID')
--ALTER TABLE SPPB_BRANDPACK ADD BRANDPACK_ID VARCHAR(14) NULL ;
--GO
---- ''TAMBAHKAN COLUMN Brandpack ID DI database agar tidak terlalu nyelek data joinnya
--IF NOT EXISTS(SELECT ColumnName FROM (
--			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
--               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
--			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
--			   WHERE t.[TABLE_NAME] = 'GON_DETAIL')C WHERE ColumnName = 'BRANDPACK_ID')
--ALTER TABLE GON_DETAIL ADD BRANDPACK_ID VARCHAR(14) NULL ;
--GO
--
------------------------------------INSERT GON HEADER & DETAIL----------------------------------------
----TRUNCATE TABLE GON_HEADER;
----TRUNCATE TABLE GON_DETAIL;
----GO
--BEGIN TRANSACTION ;
--DECLARE @V_SPPB_NO VARCHAR(15),@V_SPPB_BRANDPACK_ID VARCHAR(90),@V_GON_NO VARCHAR(25),@V_GON_QTY DECIMAL(18,3),@V_GON_DATE SMALLDATETIME,
--@V_GT_ID VARCHAR(16),@V_GON_ID_AREA VARCHAR(20),@V_IsCompleted  BIT,@V_GON_DETAIL_ID VARCHAR(115),@V_GON_HEADER_ID VARCHAR(40);
--
--DECLARE CurGON CURSOR FOR
--SELECT * FROM(
--SELECT SPPB_NO,SPPB_BRANDPACK_ID,GON_1_NO AS GON_NO,GON_1_DATE AS GON_DATE,GON_1_QTY AS GON_QTY,GON_1_GT_ID AS GT_ID
--FROM SPPB_BRANDPACK WHERE GON_1_NO IS NOT NULL AND GON_1_NO != '' AND GON_1_QTY > 0
--UNION 
--SELECT SPPB_NO,SPPB_BRANDPACK_ID,GON_2_NO AS GON_NO,GON_2_DATE AS GON_DATE,GON_2_QTY AS GON_QTY,GON_2_GT_ID AS GT_ID
--FROM SPPB_BRANDPACK WHERE GON_2_NO IS NOT NULL AND GON_2_NO != ''  AND GON_2_QTY > 0
--UNION
--SELECT SPPB_NO,SPPB_BRANDPACK_ID,GON_3_NO AS GON_NO,GON_3_DATE AS GON_DATE,GON_3_QTY AS GON_QTY,GON_3_GT_ID AS GT_ID
--FROM SPPB_BRANDPACK WHERE GON_3_NO IS NOT NULL AND GON_3_NO != ''  AND GON_3_QTY > 0
--UNION
--SELECT SPPB_NO,SPPB_BRANDPACK_ID,GON_4_NO AS GON_NO,GON_4_DATE AS GON_DATE,GON_4_QTY AS GON_QTY,GON_4_GT_ID AS GT_ID
--FROM SPPB_BRANDPACK WHERE GON_4_NO IS NOT NULL AND GON_4_NO != ''  AND GON_4_QTY > 0
--UNION 
--SELECT SPPB_NO,SPPB_BRANDPACK_ID,GON_5_NO AS GON_NO,GON_5_DATE AS GON_DATE,GON_5_QTY AS GON_QTY,GON_5_GT_ID AS GT_ID
--FROM SPPB_BRANDPACK WHERE GON_5_NO IS NOT NULL AND GON_5_NO != ''  AND GON_5_QTY > 0
--UNION
--SELECT SPPB_NO,SPPB_BRANDPACK_ID,GON_6_NO AS GON_NO,GON_6_DATE AS GON_DATE,GON_6_QTY AS GON_QTY,GON_6_GT_ID AS GT_ID
--FROM SPPB_BRANDPACK WHERE GON_6_NO IS NOT NULL AND GON_6_NO != ''  AND GON_6_QTY > 0 )C
--OPEN CurGON ;
--
--FETCH NEXT FROM CurGON INTO @V_SPPB_NO,@V_SPPB_BRANDPACK_ID,@V_GON_NO,@V_GON_DATE,@V_GON_QTY,@V_GT_ID ;
--
--WHILE (@@FETCH_STATUS = 0)
--BEGIN 
--	SET @V_GON_HEADER_ID = @V_SPPB_NO + '|' + @V_GON_NO
--	IF NOT EXISTS(SELECT GON_HEADER_ID FROM GON_HEADER WHERE GON_HEADER_ID =  @V_GON_HEADER_ID)
--	BEGIN  
--			INSERT INTO GON_HEADER(GON_HEADER_ID,SPPB_NO,GON_NO,GON_DATE,GON_ID_AREA,GT_ID,REMARK,CreatedBy,CreatedDate)
--			VALUES(@V_GON_HEADER_ID,@V_SPPB_NO,@V_GON_NO,@V_GON_DATE,NULL,@V_GT_ID,
--			'Automatically inserted by system at ' + (CAST(DAY(GETDATE()) AS VARCHAR(2)) + ' ' + DATENAME(MM, GETDATE()) + ' ' + RIGHT(CAST(YEAR(GETDATE()) AS VARCHAR(4)), 2)),'System', 
--			CONVERT(VARCHAR(100), GETDATE(),101));
--	END
--	SET @V_GON_DETAIL_ID = @V_GON_HEADER_ID + '|' + @V_SPPB_BRANDPACK_ID ;
--
--	IF NOT EXISTS(SELECT GON_DETAIL_ID FROM GON_DETAIL WHERE GON_DETAIL_ID = @V_GON_DETAIL_ID)
--	BEGIN 
--		--CHECK COMPLETENESS
--		IF EXISTS(SELECT GRB_ID FROM GON_RECEIVED_BACK WHERE GON_NO = @V_GON_NO AND SPPB_NO = @V_SPPB_NO)
--		BEGIN SET @V_IsCompleted = 1 ;END 
--		ELSE 
--		BEGIN SET @V_IsCompleted = 0 ; END 
--	
--		INSERT INTO GON_DETAIL(GON_DETAIL_ID,GON_HEADER_ID,SPPB_BRANDPACK_ID,GON_QTY,IsOpen,IsCompleted,CreatedDate,CreatedBy)
--		VALUES(@V_GON_DETAIL_ID,@V_GON_HEADER_ID,@V_SPPB_BRANDPACK_ID,@V_GON_QTY,1,@V_IsCompleted, CONVERT(VARCHAR(100), GETDATE(),101),'System');
--	END
--FETCH NEXT FROM CurGON INTO @V_SPPB_NO,@V_SPPB_BRANDPACK_ID,@V_GON_NO,@V_GON_DATE,@V_GON_QTY,@V_GT_ID ;
--END 
--CLOSE CurGON ;
--DEALLOCATE CurGON ;
--
--IF @@ERROR > 0 
--   ROLLBACK TRANSACTION ;
--COMMIT TRANSACTION ;
--GO
--
----======================UNCOMMENT THI AFTER EXECUTING QUERY========================
----SELECT * FROM GON_DETAIL
----=============================STATUS SPPB============================================
--BEGIN TRANSACTION ;
--DECLARE @V_TOTAL_GON DECIMAL(18,3),@V_SPPB_QTY DECIMAL(18,3),@V_SPPB_BRANDPACK_ID VARCHAR(90),@V_BRANDPACK_ID VARCHAR(14)
--,@V_DESCRIPTION VARCHAR(250),@V_IsCompleted BIT;
--DECLARE CurSPPB CURSOR FOR
--SELECT PB.BRANDPACK_ID,SB.SPPB_BRANDPACK_ID,SB.SPPB_QTY,ISNULL(T_Gon.TotalGonQty,0)AS TotalGonQty,SB.REMARK FROM SPPB_BRANDPACK SB
--INNER JOIN ORDR_OA_BRANDPACK OOAB ON OOAB.OA_BRANDPACK_ID = SB.OA_BRANDPACK_ID INNER JOIN ORDR_PO_BRANDPACK PB ON PB.PO_BRANDPACK_ID
--= OOAB.PO_BRANDPACK_ID
--LEFT OUTER JOIN(
--				SELECT SPPB_BRANDPACK_ID,ISNULL(SUM(GON_QTY),0) AS TotalGonQty
--				FROM GON_DETAIL GROUP BY SPPB_BRANDPACK_ID)T_Gon 
--ON T_Gon.SPPB_BRANDPACK_ID = SB.SPPB_BRANDPACK_ID WHERE SB.SPPB_QTY > 0;
--
--OPEN CurSPPB 
--FETCH NEXT FROM CurSPPB INTO @V_BRANDPACK_ID,@V_SPPB_BRANDPACK_ID,@V_SPPB_QTY,@V_TOTAL_GON,@V_DESCRIPTION ;
--WHILE (@@FETCH_STATUS = 0)
--BEGIN
----	SET @V_BRANDPACK_ID = (SELECT TOP 1 PB.BRANDPACK_ID FROM ORDR_PO_BRANDPACK PB INNER JOIN ORDR_OA_BRANDPACK OOAB 
----         ON OOAB.PO_BRANDPACK_ID = PB.PO_BRANDPACK_ID INNER JOIN SPPB_BRANDPACK SB ON SB.OA_BRANDPACK_ID = OOAB.OA_BRANDPACK_ID
----		 WHERE SB.SPPB_BRANDPACK_ID = @V_SPPB_BRANDPACK_ID);
--	---------UPDATE SPPB_BRANDPACK----------------
--	IF(@V_TOTAL_GON >= @V_SPPB_QTY ) 
--	 BEGIN
--		
--		UPDATE SPPB_BRANDPACK SET STATUS = 'SHIPPED',BRANDPACK_ID = @V_BRANDPACK_ID,MODIFY_DATE =  CONVERT(VARCHAR(100), GETDATE(),101),MODIFY_BY = 'System'
--		WHERE SPPB_BRANDPACK_ID = @V_SPPB_BRANDPACK_ID ;
--	 END 
--	 ELSE IF(@V_TOTAL_GON = 0 AND @V_SPPB_QTY > 0)
--		BEGIN
--			--=== fill here=====
--		UPDATE SPPB_BRANDPACK SET STATUS = '--New SPPB--',BRANDPACK_ID = @V_BRANDPACK_ID,MODIFY_DATE =  CONVERT(VARCHAR(100), GETDATE(),101),MODIFY_BY = 'System'
--		WHERE SPPB_BRANDPACK_ID = @V_SPPB_BRANDPACK_ID ;
--		END
--	ELSE IF (@V_TOTAL_GON = 0 AND @V_SPPB_QTY = 0)
--      BEGIN
--			--=== fill here=====
--		UPDATE SPPB_BRANDPACK SET STATUS = 'CANCELED',BRANDPACK_ID = @V_BRANDPACK_ID,MODIFY_DATE =  CONVERT(VARCHAR(100), GETDATE(),101),MODIFY_BY = 'System'
--		WHERE SPPB_BRANDPACK_ID = @V_SPPB_BRANDPACK_ID ;
--	  END
--	ELSE 
--		BEGIN
--			--=== fill here=====
--		UPDATE SPPB_BRANDPACK SET STATUS = 'UNKNOWN',BRANDPACK_ID = @V_BRANDPACK_ID,MODIFY_DATE =  CONVERT(VARCHAR(100), GETDATE(),101),MODIFY_BY = 'System'
--		WHERE SPPB_BRANDPACK_ID = @V_SPPB_BRANDPACK_ID ;
--	  END
------------------------------------------------------
--	UPDATE GON_DETAIL SET BRANDPACK_ID = @V_BRANDPACK_ID WHERE SPPB_BRANDPACK_ID = @V_SPPB_BRANDPACK_ID ;
--FETCH NEXT FROM CurSPPB INTO  @V_BRANDPACK_ID,@V_SPPB_BRANDPACK_ID,@V_SPPB_QTY,@V_TOTAL_GON,@V_DESCRIPTION ;
--END 
--CLOSE CurSPPB ;
--DEALLOCATE CurSPPB ;
--IF @@ERROR > 0 
--   ROLLBACK TRANSACTION ;
--COMMIT TRANSACTION ;
--GO
--========================== GON RECEIVED_BACK ID==================================------------
--UPDATE GON_RECEIVED_BACK SET GRB_ID = SPPB_NO + '|' + GON_NO
--GO
--INSERT BRANDPACK_ID USING cursor brandpack id ON sppbBrandPack_ID AND GON_DETAIL
--BEGIN TRANSACTION ;
--DECLARE @V_BRANDPACK_ID VARCHAR(14),@V_SPPB_BRANDPACK_ID VARCHAR(90) ;
--DECLARE CurBrandPack CURSOR FOR
--SELECT PB.BRANDPACK_ID,SB.SPPB_BRANDPACK_ID FROM ORDR_PO_BRANDPACK PB INNER JOIN ORDR_OA_BRANDPACK OOAB
--ON PB.PO_BRANDPACK_ID = OOAB.PO_BRANDPACK_ID INNER JOIN SPPB_BRANDPACK SB ON SB.OA_BRANDPACK_ID = OOAB.OA_BRANDPACK_ID;
--
--OPEN CurBrandPack ;
--FETCH NEXT FROM CurBrandPack INTO @V_BRANDPACK_ID,@V_SPPB_BRANDPACK_ID 
--WHILE (@@FETCH_STATUS = 0)
--BEGIN
---------------------INSERT BRANDPACK ON SPPB_BRANDPACK TABLE-----------------------------
--	IF NOT EXISTS(SELECT BRANDPACK_ID FROM SPPB_BRANDPACK WHERE SPPB_BRANDPACK_ID = @V_SPPB_BRANDPACK_ID)
--		BEGIN
--			UPDATE SPPB_BRANDPACK SET BRANDPACK_ID = @V_BRANDPACK_ID WHERE SPPB_BRANDPACK_ID = @V_SPPB_BRANDPACK_ID ;
--		END 
--    ELSE IF (SELECT BRANDPACK_ID FROM SPPB_BRANDPACK WHERE SPPB_BRANDPACK_ID = @V_SPPB_BRANDPACK_ID) IS NULL
--		BEGIN 
--			UPDATE SPPB_BRANDPACK SET BRANDPACK_ID = @V_BRANDPACK_ID WHERE SPPB_BRANDPACK_ID = @V_SPPB_BRANDPACK_ID ;
--		END 
-- -------------------------------------------------------------------------------------------------
--
---------------------INSERT BRANDPACK ON GON_DETAIL TABLE-------------------------------------
--	IF NOT EXISTS(SELECT BRANDPACK_ID FROM GON_DETAIL WHERE SPPB_BRANDPACK_ID = @V_SPPB_BRANDPACK_ID)
--		BEGIN
--			UPDATE GON_DETAIL SET BRANDPACK_ID = @V_BRANDPACK_ID WHERE SPPB_BRANDPACK_ID = @V_SPPB_BRANDPACK_ID ;
--		END 
--    ELSE IF (SELECT BRANDPACK_ID FROM GON_DETAIL WHERE SPPB_BRANDPACK_ID = @V_SPPB_BRANDPACK_ID) IS NULL
--		BEGIN 
--			UPDATE GON_DETAIL SET BRANDPACK_ID = @V_BRANDPACK_ID WHERE SPPB_BRANDPACK_ID = @V_SPPB_BRANDPACK_ID ;
--		END 
---------------------------------------------------------------------
--FETCH NEXT FROM CurBrandPack INTO @V_BRANDPACK_ID,@V_SPPB_BRANDPACK_ID ;
--END
--CLOSE CurBrandPack ;
--DEALLOCATE CurBrandPack ;
--IF @@ERROR > 0 
--   ROLLBACK TRANSACTION ;
--COMMIT TRANSACTION ;
--GO
--UPDATE SPPB_BRANDPACK SET BRANDPACK_ID = (SELECT TOP 1 PB.BRANDPACK_ID FROM ORDR_PO_BRANDPACK PB INNER JOIN ORDR_OA_BRANDPACK OOAB 
--         ON OOAB.PO_BRANDPACK_ID = PB.PO_BRANDPACK_ID INNER JOIN SPPB_BRANDPACK SB ON SB.OA_BRANDPACK_ID = OOAB.OA_BRANDPACK_ID
--		 WHERE SB.SPPB_BRANDPACK_ID = SPPB_BRANDPACK_ID)



---------------------------------------------------------------------------
--if exists (select * from Nufarm.Sys.Objects where id = object_id(N'[dbo].[PRODUCT_CLASS]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
--drop table [dbo].[PRODUCT_CLASS]
--GO
--
--CREATE TABLE [dbo].[PRODUCT_CLASS] (
--	[BRAND_CLASS_ID] [varchar] (20) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
--	[BRAND_ID] [varchar] (7) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
--	[CLASS_ID] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
--	[CLASS_NAME] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
--	[INACTIVE] [bit] NOT NULL ,
--	[CREATE_BY] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
--	[CREATE_DATE] [smalldatetime] NOT NULL ,
--	[MODIFY_BY] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
--	[MODIFY_DATE] [smalldatetime] NULL 
--) ON [PRIMARY]
--GO
--
--ALTER TABLE [dbo].[PRODUCT_CLASS] ADD 
--	CONSTRAINT [PK_PRODUCT_CLASS] PRIMARY KEY  NONCLUSTERED 
--	(
--		[BRAND_CLASS_ID]
--	)  ON [PRIMARY] 
--GO

-- CREATE  INDEX [IX_PRODUCT_CLASS] ON [dbo].[PRODUCT_CLASS]([BRAND_ID], [CLASS_ID]) ON [PRIMARY]
--GO
--
--if exists (select * from Nufarm.Sys.Objects where id = object_id(N'[dbo].[T_CLASS]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
--drop table [dbo].[T_CLASS]
--GO
--
--CREATE TABLE [dbo].[T_CLASS] (
--	[CLASS_ID] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
--	[CLASS_NAME] [varchar] (100) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
--	[INACTIVE] [bit] NOT NULL ,
--	[CREATE_BY] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
--	[CREATE_DATE] [smalldatetime] NOT NULL ,
--	[MODIFY_BY] [varchar] (50) COLLATE SQL_Latin1_General_CP1_CI_AS NULL ,
--	[MODIFY_DATE] [smalldatetime] NULL 
--) ON [PRIMARY]
--GO
--
--ALTER TABLE [dbo].[T_CLASS] WITH NOCHECK ADD 
--	CONSTRAINT [PK_T_CLASS] PRIMARY KEY  CLUSTERED 
--	(
--		[CLASS_ID]
--	)  ON [PRIMARY] 
--GO

--IF NOT EXISTS(SELECT ColumnName FROM (
--			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
--               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
--			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
--			   WHERE t.[TABLE_NAME] = 'MRKT_BRANDPACK_DISTRIBUTOR')C WHERE ColumnName = 'ISCPMRT')
--ALTER TABLE MRKT_BRANDPACK_DISTRIBUTOR ADD ISCPMRT BIT NULL ;
--GO
------------------------------------------------
--IF NOT EXISTS(SELECT ColumnName FROM (
--			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
--               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
--			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
--			   WHERE t.[TABLE_NAME] = 'MRKT_BRANDPACK_DISTRIBUTOR')C WHERE ColumnName = 'GIVEN_CPMRT')
--ALTER TABLE MRKT_BRANDPACK_DISTRIBUTOR ADD GIVEN_CPMRT DECIMAL(18,2) ;
--GO
----------------------------------------------------------------------------
--IF NOT EXISTS(SELECT ColumnName FROM (
--			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
--               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
--			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
--			   WHERE t.[TABLE_NAME] = 'MRKT_BRANDPACK_DISTRIBUTOR')C WHERE ColumnName = 'TARGET_CPMRT')
--ALTER TABLE MRKT_BRANDPACK_DISTRIBUTOR ADD TARGET_CPMRT DECIMAL(18,3);
--GO
----add default value for decimal dan bit
--
--UPDATE MRKT_BRANDPACK_DISTRIBUTOR SET ISCPMRT = 0,GIVEN_CPMRT = 0,TARGET_CPMRT = 0
--WHERE ISCPMRT IS NULL;
--GO

------------------------------------------------
--IF EXISTS(SELECT NAME FROM Nufarm.Sys.Objects WHERE NAME = 'Usp_Insert_MRKT_BRANDPACK_DISTRIBUTOR' AND TYPE = 'P')
--DROP PROCEDURE Usp_Insert_MRKT_BRANDPACK_DISTRIBUTOR
--GO
--CREATE PROCEDURE Usp_Insert_MRKT_BRANDPACK_DISTRIBUTOR
--@PROG_BRANDPACK_DIST_ID VARCHAR(40),
--@PROG_BRANDPACK_ID VARCHAR(30),
--@AGREE_BRANDPACK_ID VARCHAR(39),
--@DISTRIBUTOR_ID VARCHAR(10),
--@START_DATE DATETIME,
--@END_DATE DATETIME,
--@GIVEN_DISC_PCT DECIMAL(10,2),
--@TARGET_QTY DECIMAL(18,3),
--@TARGET_DISC_PCT DECIMAL(10,2),
--@STEPPING_FLAG BIT,
--@ISRPK BIT,
--@ISPKPP BIT,
--@GIVEN_PKPP DECIMAL(10,2),
--@TARGET_PKPP DECIMAL(18,3),
--@ISCP BIT,
--@GIVEN_CP DECIMAL(10,2),
--@TARGET_CP DECIMAL(18,3),
--@ISSCPD BIT,
--@ISCPMRT BIT,
--@GIVEN_CPMRT DECIMAL(18,3),
--@TARGET_CPMRT DECIMAL(18,3),
--@IS_T_TM_DIST BIT,
--@SHIP_TO_ID VARCHAR(25),
--@ISCPR BIT,
--@GIVEN_CPR DECIMAL(10,3),
--@TARGET_CPR DECIMAL(18,3),
--@ISDK BIT,
--@GIVEN_DK DECIMAL(10,2),
--@TARGET_DK DECIMAL(18,3),
--@ISHK BIT,
--@TARGET_HK DECIMAL(18,3),
--@PRICE_HK DECIMAL(10,2),
--@BONUS_VALUE DECIMAL(18,2),
--@DESCRIPTIONS VARCHAR(200),
--@CREATE_BY VARCHAR(30)
--AS
--SET NOCOUNT ON;
--IF NOT EXISTS(SELECT PROG_BRANDPACK_DIST_ID FROM MRKT_BRANDPACK_DISTRIBUTOR WHERE PROG_BRANDPACK_DIST_ID = @PROG_BRANDPACK_DIST_ID)
--BEGIN
--INSERT INTO MRKT_BRANDPACK_DISTRIBUTOR(PROG_BRANDPACK_DIST_ID,PROG_BRANDPACK_ID,AGREE_BRANDPACK_ID,
--DISTRIBUTOR_ID,START_DATE,END_DATE,ISRPK,GIVEN_DISC_PCT,TARGET_QTY,TARGET_DISC_PCT,STEPPING_FLAG,
--ISPKPP,GIVEN_PKPP,TARGET_PKPP,BONUS_VALUE,ISCP,GIVEN_CP,TARGET_CP,ISSCPD,ISCPMRT,GIVEN_CPMRT,TARGET_CPMRT,IS_T_TM_DIST,SHIP_TO_ID,ISCPR,GIVEN_CPR,TARGET_CPR,ISDK,GIVEN_DK,TARGET_DK,ISHK,TARGET_HK,PRICE_HK,DESCRIPTIONS,CREATE_BY,CREATE_DATE)
--VALUES(@PROG_BRANDPACK_DIST_ID,@PROG_BRANDPACK_ID,@AGREE_BRANDPACK_ID,
--@DISTRIBUTOR_ID,@START_DATE,@END_DATE,@ISRPK,@GIVEN_DISC_PCT,@TARGET_QTY,@TARGET_DISC_PCT,@STEPPING_FLAG,
--@ISPKPP,@GIVEN_PKPP,@TARGET_PKPP,@BONUS_VALUE,@ISCP,@GIVEN_CP,@TARGET_CP,@ISSCPD,@ISCPMRT,@GIVEN_CPMRT,@TARGET_CPMRT,@IS_T_TM_DIST,@SHIP_TO_ID,@ISCPR,@GIVEN_CPR,@TARGET_CPR,@ISDK,@GIVEN_DK,@TARGET_DK,@ISHK,@TARGET_HK,@PRICE_HK,@DESCRIPTIONS,@CREATE_BY,GETDATE())
--END
--GO
--------------------------------------------------------------------------------------

--PROCEDURE UNTUK MENGUPDATE MRKT_BRANDPACK_DISTR
--IF EXISTS(SELECT NAME FROM Nufarm.Sys.Objects WHERE NAME = 'Usp_Update_MRKT_BRANDPACK_DISTRIBUTOR' AND TYPE = 'P')
--DROP PROCEDURE Usp_Update_MRKT_BRANDPACK_DISTRIBUTOR
--GO
--CREATE PROCEDURE Usp_Update_MRKT_BRANDPACK_DISTRIBUTOR
--@PROG_BRANDPACK_DIST_ID VARCHAR(40),
--@PROG_BRANDPACK_ID VARCHAR(30),
--@AGREE_BRANDPACK_ID VARCHAR(39),
--@DISTRIBUTOR_ID VARCHAR(10),
--@START_DATE DATETIME,
--@END_DATE DATETIME,
--@GIVEN_DISC_PCT DECIMAL(10,2),
--@TARGET_QTY DECIMAL(18,3),
--@TARGET_DISC_PCT DECIMAL(10,2),
--@STEPPING_FLAG BIT,
--@ISRPK BIT,
--@ISPKPP BIT,
--@GIVEN_PKPP DECIMAL(10,2),
--@TARGET_PKPP DECIMAL(18,3),
--@ISCP BIT,
--@GIVEN_CP DECIMAL(10,2),
--@TARGET_CP DECIMAL(18,3),
--@ISSCPD BIT,
--@ISCPMRT BIT,
--@GIVEN_CPMRT DECIMAL(18,3),
--@TARGET_CPMRT DECIMAL(18,3),
--
--@IS_T_TM_DIST BIT,
--@SHIP_TO_ID VARCHAR(25),
--@ISCPR BIT,
--@GIVEN_CPR DECIMAL(10,3),
--@TARGET_CPR DECIMAL(18,3),
--@ISDK BIT,
--@GIVEN_DK DECIMAL(10,2),
--@TARGET_DK DECIMAL(18,3),
--@ISHK BIT,
--@TARGET_HK DECIMAL(18,3),
--@PRICE_HK DECIMAL(10,2),
--@BONUS_VALUE DECIMAL(18,2),
--@DESCRIPTIONS VARCHAR(200),
--@MODIFY_BY VARCHAR(30)
--AS
--SET NOCOUNT ON;
--IF EXISTS(SELECT PROG_BRANDPACK_DIST_ID FROM MRKT_BRANDPACK_DISTRIBUTOR WHERE PROG_BRANDPACK_DIST_ID = @PROG_BRANDPACK_DIST_ID)
--BEGIN
--UPDATE MRKT_BRANDPACK_DISTRIBUTOR SET PROG_BRANDPACK_ID = @PROG_BRANDPACK_ID,AGREE_BRANDPACK_ID = @AGREE_BRANDPACK_ID,
--DISTRIBUTOR_ID = @DISTRIBUTOR_ID,START_DATE = @START_DATE,END_DATE = @END_DATE,ISRPK = @ISRPK,
--GIVEN_DISC_PCT = @GIVEN_DISC_PCT,TARGET_QTY = @TARGET_QTY,TARGET_DISC_PCT = @TARGET_DISC_PCT,STEPPING_FLAG = @STEPPING_FLAG,
--ISPKPP = @ISPKPP,GIVEN_PKPP = @GIVEN_PKPP,TARGET_PKPP = @TARGET_PKPP,BONUS_VALUE = @BONUS_VALUE,ISCP = @ISCP,GIVEN_CP = @GIVEN_CP,
--TARGET_CP = @TARGET_CP,ISSCPD = @ISSCPD,
--ISCPMRT = @ISCPMRT,GIVEN_CPMRT = @GIVEN_CPMRT ,TARGET_CPMRT = @TARGET_CPMRT,
--SHIP_TO_ID = @SHIP_TO_ID,IS_T_TM_DIST = @IS_T_TM_DIST,ISCPR = @ISCPR,GIVEN_CPR = @GIVEN_CPR,TARGET_CPR = @TARGET_CPR,ISDK = @ISDK,GIVEN_DK = @GIVEN_DK,TARGET_DK = @TARGET_DK,ISHK = @ISHK,
--TARGET_HK = @TARGET_HK,PRICE_HK = @PRICE_HK,DESCRIPTIONS = @DESCRIPTIONS,MODIFY_BY = @MODIFY_BY,MODIFY_DATE = GETDATE() WHERE PROG_BRANDPACK_DIST_ID = @PROG_BRANDPACK_DIST_ID
--END
--GO


----------------------------------------------------------------------------------------
IF EXISTS(SELECT NAME FROM Nufarm.Sys.Objects WHERE NAME = 'Usp_Create_View_Distributor_Report_1' AND TYPE = 'P')
DROP PROCEDURE Usp_Create_View_Distributor_Report_1
GO
CREATE PROCEDURE Usp_Create_View_Distributor_Report_1
@StartDate DateTime,
@EndDate DateTime
AS 
SET NOCOUNT ON;
IF (@StartDate IS NOT NULL AND @EndDate IS NOT NULL)
BEGIN
	 SELECT DG.REGIONAL_AREA,TER.TERRITORY_AREA,OPO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,OPO.PO_REF_NO,OPO.PO_REF_DATE,
	OOA.OA_ID AS OA_REF_NO,OOA.OA_DATE,BR.BRAND_ID,BR.BRAND_NAME,BB.BRANDPACK_ID,BB.BRANDPACK_NAME,OPB.PO_ORIGINAL_QTY AS PO_QTY,OOB.QTY_EVEN,
	OPB.PO_PRICE_PERQTY AS PRICE,OOB.UNIT,OOB.REMARK,ISNULL(OA_DISC.REMAIND_QTY,0)AS REMAIND_QTY,OA_DISC.GIVEN_AGREEMENT,OA_DISC.[QUARTER],
	OA_DISC.[SEMESTER],OA_DISC.YEARLY,OA_DISC.RPK,OA_DISC.DK,OA_DISC.CP_D,OA_DISC.CP_D_S,OA_DISC.CP_RMT,OA_DISC.PKPP,OPB.GIVEN_PKPP_VALUE,OA_DISC.CP_R,
	OA_DISC.OTHER,
	ISNULL(T_DISC.TOTAL_DISC,0)AS TOTAL_DISC,
	--ISNULL(T_DISC.TOTAL_DISC,0) * OOB.OA_PRICE_PERQTY AS TOTAL_DISC_AMOUNT,
	OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_DELIVERY,
	--(OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_DELIVERY,
	OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_SALES
	--(OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_SALES         
	FROM ORDR_PURCHASE_ORDER OPO INNER JOIN DIST_DISTRIBUTOR DR ON OPO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
	 INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = OPO.PO_REF_NO LEFT OUTER JOIN ORDR_ORDER_ACCEPTANCE OOA
	ON OOA.PO_REF_NO = OPB.PO_REF_NO --INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
	LEFT OUTER JOIN ORDR_OA_BRANDPACK OOB ON OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID AND OOB.OA_ID = OOA.OA_ID
	INNER JOIN BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID --INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD ON OOBD.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
	LEFT OUTER JOIN
	               (
	                 SELECT OA_BRANDPACK_ID,
	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'RMOA' THEN DISC_QTY ELSE 0 END)AS REMAIND_QTY,
	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'G' THEN DISC_QTY ELSE 0 END)AS GIVEN_AGREEMENT, 
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Q1' THEN DISC_QTY WHEN 'Q2' THEN DISC_QTY WHEN 'Q3' THEN DISC_QTY
	                                     	  WHEN 'Q4' THEN DISC_QTY ELSE 0 END)AS [QUARTER],
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'S1' THEN DISC_QTY WHEN 'S2' THEN DISC_QTY ELSE 0 END)AS [SEMESTER], 
	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Y' THEN DISC_QTY ELSE 0 END)AS YEARLY, 
	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'MG' THEN DISC_QTY ELSE 0 END)AS RPK,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'DK' THEN DISC_QTY WHEN 'DN' THEN DISC_QTY ELSE 0 END)AS DK,
	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CP' THEN DISC_QTY WHEN 'TD' THEN DISC_QTY ELSE 0 END)AS CP_D,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CS' THEN DISC_QTY WHEN 'TS' THEN DISC_QTY WHEN 'SC' THEN DISC_QTY ELSE 0 END)AS CP_D_S,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CD' THEN DISC_QTY WHEN 'CT' THEN DISC_QTY ELSE 0 END)AS CP_RMT,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'KP' THEN DISC_QTY ELSE 0 END)AS PKPP,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CR' THEN DISC_QTY ELSE 0 END) AS CP_R,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'O'  THEN DISC_QTY ELSE 0 END)AS OTHER
					 FROM ORDR_OA_BRANDPACK_DISC GROUP BY OA_BRANDPACK_ID
	           	)OA_DISC ON OA_DISC.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
	LEFT OUTER JOIN(
	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
	                 WHERE GQSY_SGT_P_FLAG != 'RMOA'
	                 GROUP BY OA_BRANDPACK_ID
	                )T_DISC ON OOB.OA_BRANDPACK_ID = T_DISC.OA_BRANDPACK_ID
	LEFT OUTER JOIN( 
	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
	                 WHERE GQSY_SGT_P_FLAG = 'RMOA'
	                 GROUP BY OA_BRANDPACK_ID
	                )OA_LEFT ON OA_LEFT.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID 
	INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
	INNER JOIN DIST_REGIONAL DG ON DG.REGIONAL_ID = TER.REGIONAL_ID 
	INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
	WHERE OPO.PO_REF_DATE >= @StartDate AND OPO.PO_REF_DATE <= @EndDate
END
ELSE IF (@StartDate IS NOT NULL)
BEGIN
	 SELECT DG.REGIONAL_AREA,TER.TERRITORY_AREA,OPO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,OPO.PO_REF_NO,OPO.PO_REF_DATE,
	OOA.OA_ID AS OA_REF_NO,OOA.OA_DATE,BR.BRAND_ID,BR.BRAND_NAME,BB.BRANDPACK_ID,BB.BRANDPACK_NAME,OPB.PO_ORIGINAL_QTY AS PO_QTY,OOB.QTY_EVEN,
	OPB.PO_PRICE_PERQTY AS PRICE,OOB.UNIT,OOB.REMARK,ISNULL(OA_DISC.REMAIND_QTY,0)AS REMAIND_QTY,OA_DISC.GIVEN_AGREEMENT,OA_DISC.[QUARTER],
	OA_DISC.[SEMESTER],OA_DISC.YEARLY,OA_DISC.RPK,OA_DISC.DK,OA_DISC.CP_D,OA_DISC.CP_D_S,OA_DISC.CP_RMT,OA_DISC.PKPP,OPB.GIVEN_PKPP_VALUE,OA_DISC.CP_R,
	OA_DISC.OTHER,
	ISNULL(T_DISC.TOTAL_DISC,0)AS TOTAL_DISC,
	--ISNULL(T_DISC.TOTAL_DISC,0) * OOB.OA_PRICE_PERQTY AS TOTAL_DISC_AMOUNT,
	OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_DELIVERY,
	--(OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_DELIVERY,
	OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_SALES
	--(OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_SALES              
	FROM ORDR_PURCHASE_ORDER OPO INNER JOIN DIST_DISTRIBUTOR DR ON OPO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
	 INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = OPO.PO_REF_NO LEFT OUTER JOIN ORDR_ORDER_ACCEPTANCE OOA
	ON OOA.PO_REF_NO = OPB.PO_REF_NO --INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
	LEFT OUTER JOIN ORDR_OA_BRANDPACK OOB ON OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID AND OOB.OA_ID = OOA.OA_ID
	INNER JOIN BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID --INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD ON OOBD.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
	LEFT OUTER JOIN
	               (
	                 SELECT OA_BRANDPACK_ID,
	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'RMOA' THEN DISC_QTY ELSE 0 END)AS REMAIND_QTY,
	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'G' THEN DISC_QTY ELSE 0 END)AS GIVEN_AGREEMENT, 
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Q1' THEN DISC_QTY WHEN 'Q2' THEN DISC_QTY WHEN 'Q3' THEN DISC_QTY
	                                     	  WHEN 'Q4' THEN DISC_QTY ELSE 0 END)AS [QUARTER],
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'S1' THEN DISC_QTY WHEN 'S2' THEN DISC_QTY ELSE 0 END)AS [SEMESTER], 
	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Y' THEN DISC_QTY ELSE 0 END)AS YEARLY, 
	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'MG' THEN DISC_QTY ELSE 0 END)AS RPK,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'DK' THEN DISC_QTY WHEN 'DN' THEN DISC_QTY ELSE 0 END)AS DK,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CP' THEN DISC_QTY WHEN 'TD' THEN DISC_QTY ELSE 0 END)AS CP_D,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CS' THEN DISC_QTY WHEN 'TS' THEN DISC_QTY WHEN 'SC' THEN DISC_QTY ELSE 0 END)AS CP_D_S,
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CD' THEN DISC_QTY WHEN 'CT' THEN DISC_QTY ELSE 0 END)AS CP_RMT,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'KP' THEN DISC_QTY ELSE 0 END)AS PKPP,
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CR' THEN DISC_QTY ELSE 0 END) AS CP_R,
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'O'  THEN DISC_QTY ELSE 0 END)AS OTHER
	            	 FROM ORDR_OA_BRANDPACK_DISC GROUP BY OA_BRANDPACK_ID
	           	)OA_DISC ON OA_DISC.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
	LEFT OUTER JOIN(
	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
	                 WHERE GQSY_SGT_P_FLAG != 'RMOA'
	                 GROUP BY OA_BRANDPACK_ID
	                )T_DISC ON OOB.OA_BRANDPACK_ID = T_DISC.OA_BRANDPACK_ID
	LEFT OUTER JOIN( 
	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
	                 WHERE GQSY_SGT_P_FLAG = 'RMOA'
	                 GROUP BY OA_BRANDPACK_ID
	                )OA_LEFT ON OA_LEFT.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID 
	INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
	INNER JOIN DIST_REGIONAL DG ON DG.REGIONAL_ID = TER.REGIONAL_ID 
	INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
	WHERE OPO.PO_REF_DATE >= @StartDate
END
ELSE IF (@EndDate IS NOT NULL)
BEGIN
   SELECT DG.REGIONAL_AREA,TER.TERRITORY_AREA,OPO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,OPO.PO_REF_NO,OPO.PO_REF_DATE,
	OOA.OA_ID AS OA_REF_NO,OOA.OA_DATE,BR.BRAND_ID,BR.BRAND_NAME,BB.BRANDPACK_ID,BB.BRANDPACK_NAME,OPB.PO_ORIGINAL_QTY AS PO_QTY,OOB.QTY_EVEN,
	OPB.PO_PRICE_PERQTY AS PRICE,OOB.UNIT,OOB.REMARK,ISNULL(OA_DISC.REMAIND_QTY,0)AS REMAIND_QTY,OA_DISC.GIVEN_AGREEMENT,OA_DISC.[QUARTER],
	OA_DISC.[SEMESTER],OA_DISC.YEARLY,OA_DISC.RPK,OA_DISC.DK,OA_DISC.CP_D,OA_DISC.CP_D_S,OA_DISC.CP_RMT,OA_DISC.PKPP,OPB.GIVEN_PKPP_VALUE,OA_DISC.CP_R,
	OA_DISC.OTHER,
	ISNULL(T_DISC.TOTAL_DISC,0)AS TOTAL_DISC,
	--ISNULL(T_DISC.TOTAL_DISC,0) * OOB.OA_PRICE_PERQTY AS TOTAL_DISC_AMOUNT,
	OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_DELIVERY,
	--(OOB.QTY_EVEN + ISNULL(T_DISC.TOTAL_DISC,0) + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_DELIVERY,
	OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0) AS TOTAL_SALES
	--(OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS TOTAL_AMOUNT_SALES       
	FROM ORDR_PURCHASE_ORDER OPO INNER JOIN DIST_DISTRIBUTOR DR ON OPO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
	 INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = OPO.PO_REF_NO LEFT OUTER JOIN ORDR_ORDER_ACCEPTANCE OOA
	ON OOA.PO_REF_NO = OPB.PO_REF_NO --INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
	LEFT OUTER JOIN ORDR_OA_BRANDPACK OOB ON OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID AND OOB.OA_ID = OOA.OA_ID
	INNER JOIN BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID --INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD ON OOBD.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
	LEFT OUTER JOIN
	               (
	                 SELECT OA_BRANDPACK_ID,
	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'RMOA' THEN DISC_QTY ELSE 0 END)AS REMAIND_QTY,
	                 SUM(CASE GQSY_SGT_P_FLAG WHEN 'G' THEN DISC_QTY ELSE 0 END)AS GIVEN_AGREEMENT, 
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Q1' THEN DISC_QTY WHEN 'Q2' THEN DISC_QTY WHEN 'Q3' THEN DISC_QTY
	                                     	  WHEN 'Q4' THEN DISC_QTY ELSE 0 END)AS [QUARTER],
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'S1' THEN DISC_QTY WHEN 'S2' THEN DISC_QTY ELSE 0 END)AS [SEMESTER], 
	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'Y' THEN DISC_QTY ELSE 0 END)AS YEARLY, 
	           		 SUM(CASE GQSY_SGT_P_FLAG WHEN 'MG' THEN DISC_QTY ELSE 0 END)AS RPK,
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'DK' THEN DISC_QTY WHEN 'DN' THEN DISC_QTY ELSE 0 END)AS DK,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CP' THEN DISC_QTY WHEN 'TD' THEN DISC_QTY ELSE 0 END)AS CP_D,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CS' THEN DISC_QTY WHEN 'TS' THEN DISC_QTY WHEN 'SC' THEN DISC_QTY ELSE 0 END)AS CP_D_S,
					 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CD' THEN DISC_QTY WHEN 'CT' THEN DISC_QTY ELSE 0 END)AS CP_RMT,
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'KP' THEN DISC_QTY ELSE 0 END)AS PKPP,
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'CR' THEN DISC_QTY ELSE 0 END) AS CP_R,
	            	 SUM(CASE GQSY_SGT_P_FLAG WHEN 'O'  THEN DISC_QTY ELSE 0 END)AS OTHER
	            	 FROM ORDR_OA_BRANDPACK_DISC GROUP BY OA_BRANDPACK_ID
	           	)OA_DISC ON OA_DISC.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
	LEFT OUTER JOIN(
	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
	                 WHERE GQSY_SGT_P_FLAG != 'RMOA'
	                 GROUP BY OA_BRANDPACK_ID
	                )T_DISC ON OOB.OA_BRANDPACK_ID = T_DISC.OA_BRANDPACK_ID
	LEFT OUTER JOIN( 
	                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
	                 WHERE GQSY_SGT_P_FLAG = 'RMOA'
	                 GROUP BY OA_BRANDPACK_ID
	                )OA_LEFT ON OA_LEFT.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID 
	INNER JOIN TERRITORY TER ON TER.TERRITORY_ID = DR.TERRITORY_ID
	INNER JOIN DIST_REGIONAL DG ON DG.REGIONAL_ID = TER.REGIONAL_ID 
	INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
	WHERE OPO.PO_REF_DATE <= @EndDate
END
GO
 -----------------------------------------------------------------
--IF EXISTS(SELECT NAME FROM Nufarm.Sys.Objects WHERE NAME = 'Sp_Getview_OA_BRANDPACK' AND TYPE = 'P')
--DROP PROCEDURE Sp_Getview_OA_BRANDPACK
--GO
--CREATE PROCEDURE Sp_Getview_OA_BRANDPACK
--@DISTRIBUTOR_ID VARCHAR(10),--@AGREEMENT_NO VARCHAR(25),
--@GQSY_SGT_P_FLAG VARCHAR(5),
--@START_DATE SMALLDATETIME,
--@END_DATE SMALLDATETIME
--AS
--SET NOCOUNT ON;
--IF (@GQSY_SGT_P_FLAG IS NOT NULL)
--   IF (@GQSY_SGT_P_FLAG = 'CS' OR @GQSY_SGT_P_FLAG = 'TS')
--		BEGIN
--		SELECT PO.PO_REF_NO,OA.OA_ID AS OA_REF_NO,OA.OA_DATE,BB.BRANDPACK_NAME,OOB.OA_BRANDPACK_ID,OOB.QTY_EVEN + ISNULL(OOBD.LEFT_QTY,0) AS QUANTITY,
--		(OOB.QTY_EVEN + ISNULL(OOBD.LEFT_QTY,0)) * OOB.OA_PRICE_PERQTY AS AMOUNT,OOB.AGREE_DISC_QTY,
--		OOB.AGREE_DISC_QTY * OOB.OA_PRICE_PERQTY AS AMOUNT_AGREE_DISC_QTY,OOB.PROG_DISC_QTY,
--		OOB.PROG_DISC_QTY * OOB.OA_PRICE_PERQTY AS AMOUNT_PROG_DISC_QTY,OOB.OTHER_DISC_QTY,
--		OOB.OTHER_DISC_QTY * OOB.OA_PRICE_PERQTY AS AMOUNT_OTHER_DISC_QTY,
--		OOB.AGREE_DISC_QTY + OOB.PROG_DISC_QTY + OOB.OTHER_DISC_QTY AS TOTAL_DISC_QTY,
--		(OOB.AGREE_DISC_QTY + OOB.PROG_DISC_QTY + OOB.OTHER_DISC_QTY) * OOB.OA_PRICE_PERQTY AS TOTAL_DISC_AMOUNT,
--		ISNULL(OOR.LEFT_QTY,0) AS REMAINING,ISNULL(OOR.LEFT_QTY,0) * OOB.OA_PRICE_PERQTY AS AMOUNT_REMAINING
--		FROM ORDR_PURCHASE_ORDER PO INNER JOIN ORDR_PO_BRANDPACK OPB ON PO.PO_REF_NO = OPB.PO_REF_NO
--		INNER JOIN BRND_BRANDPACK BB ON BB.BRANDPACK_ID = OPB.BRANDPACK_ID INNER JOIN 
--		ORDR_ORDER_ACCEPTANCE OA ON PO.PO_REF_NO = OA.PO_REF_NO INNER JOIN ORDR_OA_BRANDPACK OOB
--		ON OOB.OA_ID = OA.OA_ID AND OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID
--		LEFT OUTER JOIN(
--				SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS LEFT_QTY
--					FROM ORDR_OA_BRANDPACK_DISC WHERE GQSY_SGT_P_FLAG = 'RMOA'
--				GROUP BY OA_BRANDPACK_ID
-- 				)OOBD
--		ON OOBD.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
--		LEFT OUTER JOIN(
--				SELECT OA_BRANDPACK_ID,ISNULL(SUM(LEFT_QTY),0)AS LEFT_QTY
--				FROM ORDR_OA_REMAINDING GROUP BY OA_BRANDPACK_ID
--       				)OOR
--		ON OOB.OA_BRANDPACK_ID = OOR.OA_BRANDPACK_ID
--		WHERE PO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND OA.OA_DATE >= @START_DATE AND OA.OA_DATE <= @END_DATE
--			AND EXISTS(SELECT OA_BRANDPACK_ID FROM ORDR_OA_BRANDPACK_DISC WHERE OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
--		   AND GQSY_SGT_P_FLAG IN('TS','CS'))
--		END
--	 ELSE IF (@GQSY_SGT_P_FLAG = 'CP' OR @GQSY_SGT_P_FLAG = 'TD')
--		BEGIN
--			SELECT PO.PO_REF_NO,OA.OA_ID AS OA_REF_NO,OA.OA_DATE,BB.BRANDPACK_NAME,OOB.OA_BRANDPACK_ID,OOB.QTY_EVEN + ISNULL(OOBD.LEFT_QTY,0) AS QUANTITY,
--			(OOB.QTY_EVEN + ISNULL(OOBD.LEFT_QTY,0)) * OOB.OA_PRICE_PERQTY AS AMOUNT,OOB.AGREE_DISC_QTY,
--			OOB.AGREE_DISC_QTY * OOB.OA_PRICE_PERQTY AS AMOUNT_AGREE_DISC_QTY,OOB.PROG_DISC_QTY,
--			OOB.PROG_DISC_QTY * OOB.OA_PRICE_PERQTY AS AMOUNT_PROG_DISC_QTY,OOB.OTHER_DISC_QTY,
--			OOB.OTHER_DISC_QTY * OOB.OA_PRICE_PERQTY AS AMOUNT_OTHER_DISC_QTY,
--			OOB.AGREE_DISC_QTY + OOB.PROG_DISC_QTY + OOB.OTHER_DISC_QTY AS TOTAL_DISC_QTY,
--			(OOB.AGREE_DISC_QTY + OOB.PROG_DISC_QTY + OOB.OTHER_DISC_QTY) * OOB.OA_PRICE_PERQTY AS TOTAL_DISC_AMOUNT,
--			ISNULL(OOR.LEFT_QTY,0) AS REMAINING,ISNULL(OOR.LEFT_QTY,0) * OOB.OA_PRICE_PERQTY AS AMOUNT_REMAINING
--			FROM ORDR_PURCHASE_ORDER PO INNER JOIN ORDR_PO_BRANDPACK OPB ON PO.PO_REF_NO = OPB.PO_REF_NO
--			INNER JOIN BRND_BRANDPACK BB ON BB.BRANDPACK_ID = OPB.BRANDPACK_ID INNER JOIN 
--			ORDR_ORDER_ACCEPTANCE OA ON PO.PO_REF_NO = OA.PO_REF_NO INNER JOIN ORDR_OA_BRANDPACK OOB
--			ON OOB.OA_ID = OA.OA_ID AND OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID
--			LEFT OUTER JOIN(
--					SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS LEFT_QTY
--        					FROM ORDR_OA_BRANDPACK_DISC WHERE GQSY_SGT_P_FLAG = 'RMOA'
--					GROUP BY OA_BRANDPACK_ID
--         				)OOBD
--			ON OOBD.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
--			LEFT OUTER JOIN(
--					SELECT OA_BRANDPACK_ID,ISNULL(SUM(LEFT_QTY),0)AS LEFT_QTY
--					FROM ORDR_OA_REMAINDING GROUP BY OA_BRANDPACK_ID
--               				)OOR
--			ON OOB.OA_BRANDPACK_ID = OOR.OA_BRANDPACK_ID
--			WHERE PO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND OA.OA_DATE >= @START_DATE AND OA.OA_DATE <= @END_DATE
--				AND EXISTS(SELECT OA_BRANDPACK_ID FROM ORDR_OA_BRANDPACK_DISC WHERE OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
--			   AND GQSY_SGT_P_FLAG IN('TD','CP'))
--		END
--	 ELSE IF (@GQSY_SGT_P_FLAG = 'CD' OR @GQSY_SGT_P_FLAG = 'CT')
--		BEGIN
--		SELECT PO.PO_REF_NO,OA.OA_ID AS OA_REF_NO,OA.OA_DATE,BB.BRANDPACK_NAME,OOB.OA_BRANDPACK_ID,OOB.QTY_EVEN + ISNULL(OOBD.LEFT_QTY,0) AS QUANTITY,
--			(OOB.QTY_EVEN + ISNULL(OOBD.LEFT_QTY,0)) * OOB.OA_PRICE_PERQTY AS AMOUNT,OOB.AGREE_DISC_QTY,
--			OOB.AGREE_DISC_QTY * OOB.OA_PRICE_PERQTY AS AMOUNT_AGREE_DISC_QTY,OOB.PROG_DISC_QTY,
--			OOB.PROG_DISC_QTY * OOB.OA_PRICE_PERQTY AS AMOUNT_PROG_DISC_QTY,OOB.OTHER_DISC_QTY,
--			OOB.OTHER_DISC_QTY * OOB.OA_PRICE_PERQTY AS AMOUNT_OTHER_DISC_QTY,
--			OOB.AGREE_DISC_QTY + OOB.PROG_DISC_QTY + OOB.OTHER_DISC_QTY AS TOTAL_DISC_QTY,
--			(OOB.AGREE_DISC_QTY + OOB.PROG_DISC_QTY + OOB.OTHER_DISC_QTY) * OOB.OA_PRICE_PERQTY AS TOTAL_DISC_AMOUNT,
--			ISNULL(OOR.LEFT_QTY,0) AS REMAINING,ISNULL(OOR.LEFT_QTY,0) * OOB.OA_PRICE_PERQTY AS AMOUNT_REMAINING
--			FROM ORDR_PURCHASE_ORDER PO INNER JOIN ORDR_PO_BRANDPACK OPB ON PO.PO_REF_NO = OPB.PO_REF_NO
--			INNER JOIN BRND_BRANDPACK BB ON BB.BRANDPACK_ID = OPB.BRANDPACK_ID INNER JOIN 
--			ORDR_ORDER_ACCEPTANCE OA ON PO.PO_REF_NO = OA.PO_REF_NO INNER JOIN ORDR_OA_BRANDPACK OOB
--			ON OOB.OA_ID = OA.OA_ID AND OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID
--			LEFT OUTER JOIN(
--					SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS LEFT_QTY
--        					FROM ORDR_OA_BRANDPACK_DISC WHERE GQSY_SGT_P_FLAG = 'RMOA'
--					GROUP BY OA_BRANDPACK_ID
--         				)OOBD
--			ON OOBD.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
--			LEFT OUTER JOIN(
--					SELECT OA_BRANDPACK_ID,ISNULL(SUM(LEFT_QTY),0)AS LEFT_QTY
--					FROM ORDR_OA_REMAINDING GROUP BY OA_BRANDPACK_ID
--               				)OOR
--			ON OOB.OA_BRANDPACK_ID = OOR.OA_BRANDPACK_ID
--			WHERE PO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND OA.OA_DATE >= @START_DATE AND OA.OA_DATE <= @END_DATE
--				AND EXISTS(SELECT OA_BRANDPACK_ID FROM ORDR_OA_BRANDPACK_DISC WHERE OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
--			   AND GQSY_SGT_P_FLAG IN('CD','CT'))
--		END
--	ELSE
--		BEGIN
--		SELECT PO.PO_REF_NO,OA.OA_ID AS OA_REF_NO,OA.OA_DATE,BB.BRANDPACK_NAME,OOB.OA_BRANDPACK_ID,OOB.QTY_EVEN + ISNULL(OOBD.LEFT_QTY,0) AS QUANTITY,
--		(OOB.QTY_EVEN + ISNULL(OOBD.LEFT_QTY,0)) * OOB.OA_PRICE_PERQTY AS AMOUNT,OOB.AGREE_DISC_QTY,
--		OOB.AGREE_DISC_QTY * OOB.OA_PRICE_PERQTY AS AMOUNT_AGREE_DISC_QTY,OOB.PROG_DISC_QTY,
--		OOB.PROG_DISC_QTY * OOB.OA_PRICE_PERQTY AS AMOUNT_PROG_DISC_QTY,OOB.OTHER_DISC_QTY,
--		OOB.OTHER_DISC_QTY * OOB.OA_PRICE_PERQTY AS AMOUNT_OTHER_DISC_QTY,
--		OOB.AGREE_DISC_QTY + OOB.PROG_DISC_QTY + OOB.OTHER_DISC_QTY AS TOTAL_DISC_QTY,
--		(OOB.AGREE_DISC_QTY + OOB.PROG_DISC_QTY + OOB.OTHER_DISC_QTY) * OOB.OA_PRICE_PERQTY AS TOTAL_DISC_AMOUNT,
--		ISNULL(OOR.LEFT_QTY,0) AS REMAINING,ISNULL(OOR.LEFT_QTY,0) * OOB.OA_PRICE_PERQTY AS AMOUNT_REMAINING
--		FROM ORDR_PURCHASE_ORDER PO INNER JOIN ORDR_PO_BRANDPACK OPB ON PO.PO_REF_NO = OPB.PO_REF_NO
--		INNER JOIN BRND_BRANDPACK BB ON BB.BRANDPACK_ID = OPB.BRANDPACK_ID INNER JOIN 
--		ORDR_ORDER_ACCEPTANCE OA ON PO.PO_REF_NO = OA.PO_REF_NO INNER JOIN ORDR_OA_BRANDPACK OOB
--		ON OOB.OA_ID = OA.OA_ID AND OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID
--		LEFT OUTER JOIN(
--				SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS LEFT_QTY
--        				FROM ORDR_OA_BRANDPACK_DISC WHERE GQSY_SGT_P_FLAG = 'RMOA'
--				GROUP BY OA_BRANDPACK_ID
--         			)OOBD
--		ON OOBD.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
--		LEFT OUTER JOIN(
--				SELECT OA_BRANDPACK_ID,ISNULL(SUM(LEFT_QTY),0)AS LEFT_QTY
--				FROM ORDR_OA_REMAINDING GROUP BY OA_BRANDPACK_ID
--               			)OOR
--		ON OOB.OA_BRANDPACK_ID = OOR.OA_BRANDPACK_ID
--		WHERE PO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND OA.OA_DATE >= @START_DATE AND OA.OA_DATE <= @END_DATE
--		AND EXISTS(SELECT OA_BRANDPACK_ID FROM ORDR_OA_BRANDPACK_DISC WHERE OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
--			   AND GQSY_SGT_P_FLAG LIKE @GQSY_SGT_P_FLAG + '%')
--	   END
--ELSE
-- BEGIN
--   	SELECT PO.PO_REF_NO,OA.OA_ID AS OA_REF_NO,OA.OA_DATE,BB.BRANDPACK_NAME,OOB.OA_BRANDPACK_ID,OOB.QTY_EVEN + ISNULL(OOBD.LEFT_QTY,0) AS QUANTITY,
--	(OOB.QTY_EVEN + ISNULL(OOBD.LEFT_QTY,0)) * OOB.OA_PRICE_PERQTY AS AMOUNT,OOB.AGREE_DISC_QTY,
--	OOB.AGREE_DISC_QTY * OOB.OA_PRICE_PERQTY AS AMOUNT_AGREE_DISC_QTY,OOB.PROG_DISC_QTY,
--	OOB.PROG_DISC_QTY * OOB.OA_PRICE_PERQTY AS AMOUNT_PROG_DISC_QTY,OOB.OTHER_DISC_QTY,
--	OOB.OTHER_DISC_QTY * OOB.OA_PRICE_PERQTY AS AMOUNT_OTHER_DISC_QTY,
--	OOB.AGREE_DISC_QTY + OOB.PROG_DISC_QTY + OOB.OTHER_DISC_QTY AS TOTAL_DISC_QTY,
--	(OOB.AGREE_DISC_QTY + OOB.PROG_DISC_QTY + OOB.OTHER_DISC_QTY) * OOB.OA_PRICE_PERQTY AS TOTAL_DISC_AMOUNT,
--	ISNULL(OOR.LEFT_QTY,0) AS REMAINING,ISNULL(OOR.LEFT_QTY,0) * OOB.OA_PRICE_PERQTY AS AMOUNT_REMAINING
--	FROM ORDR_PURCHASE_ORDER PO INNER JOIN ORDR_PO_BRANDPACK OPB ON PO.PO_REF_NO = OPB.PO_REF_NO
--	INNER JOIN BRND_BRANDPACK BB ON BB.BRANDPACK_ID = OPB.BRANDPACK_ID INNER JOIN 
--	ORDR_ORDER_ACCEPTANCE OA ON PO.PO_REF_NO = OA.PO_REF_NO INNER JOIN ORDR_OA_BRANDPACK OOB
--	ON OOB.OA_ID = OA.OA_ID AND OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID
--	LEFT OUTER JOIN(
--			SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS LEFT_QTY
--               	        FROM ORDR_OA_BRANDPACK_DISC WHERE GQSY_SGT_P_FLAG = 'RMOA'
--                	GROUP BY OA_BRANDPACK_ID
--                	)OOBD
--	ON OOBD.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
--	LEFT OUTER JOIN(
--			SELECT OA_BRANDPACK_ID,ISNULL(SUM(LEFT_QTY),0)AS LEFT_QTY
--			FROM ORDR_OA_REMAINDING
--			GROUP BY OA_BRANDPACK_ID
--               		)OOR
--	ON OOB.OA_BRANDPACK_ID = OOR.OA_BRANDPACK_ID
--	WHERE PO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND OA.OA_DATE >= @START_DATE AND OA.OA_DATE <= @END_DATE
--
--END
--GO
IF EXISTS(SELECT NAME FROM Nufarm.Sys.Objects WHERE NAME = 'Sp_GetView_ORDR_OA_BRANDPACK_DISC_BY_AGREE' AND TYPE = 'P')
DROP PROCEDURE Sp_GetView_ORDR_OA_BRANDPACK_DISC_BY_AGREE
GO
CREATE PROCEDURE Sp_GetView_ORDR_OA_BRANDPACK_DISC_BY_AGREE
@DISTRIBUTOR_ID VARCHAR(10),
@START_DATE SMALLDATETIME,
@END_DATE SMALLDATETIME,
@GQSY_SGT_P_FLAG VARCHAR(5)
AS
SET NOCOUNT ON;
IF (@GQSY_SGT_P_FLAG IS NULL)
   BEGIN
	SELECT OOB.OA_BRANDPACK_ID,OOBD.DISC_QTY,OOBD.PRICE_PRQTY,OOBD.DISC_QTY * OOBD.PRICE_PRQTY AS AMOUNT_DISC_PRICE,
	[TYPE] = CASE GQSY_SGT_P_FLAG
		WHEN 'Q1' THEN 'QUARTER 1' WHEN 'Q2' THEN 'QUARTER 2' WHEN 'Q3' THEN 'QUARTER 3'
		WHEN 'Q4' THEN 'QUARTER 4' WHEN 'S1' THEN 'SEMESTER 1' WHEN 'S2' THEN 'SEMESTER 2'
		WHEN 'G' THEN 'GIVEN' WHEN 'Y' THEN 'YEARLY' END
	FROM ORDR_OA_BRANDPACK OOB INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD 
	ON OOB.OA_BRANDPACK_ID = OOBD.OA_BRANDPACK_ID 
	INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_BRANDPACK_ID = OOB.PO_BRANDPACK_ID
	INNER JOIN ORDR_PURCHASE_ORDER PO ON OPB.PO_REF_NO = PO.PO_REF_NO
	WHERE OOBD.GQSY_SGT_P_FLAG IN('G','Q1','Q2','Q3','Q4','S1','S2','Y') 
	AND PO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND PO.PO_REF_DATE >= @START_DATE AND PO.PO_REF_DATE <= @END_DATE;
   END
ELSE
   BEGIN
	SELECT OOB.OA_BRANDPACK_ID,OOBD.DISC_QTY,OOBD.PRICE_PRQTY,OOBD.DISC_QTY * OOBD.PRICE_PRQTY AS AMOUNT_DISC_PRICE,
	[TYPE] = CASE @GQSY_SGT_P_FLAG
		WHEN 'Q1' THEN 'QUARTER 1' WHEN 'Q2' THEN 'QUARTER 2' WHEN 'Q3' THEN 'QUARTER 3'
		WHEN 'Q4' THEN 'QUARTER 4' WHEN 'S1' THEN 'SEMESTER 1' WHEN 'S2' THEN 'SEMESTER 2'
		WHEN 'G' THEN 'GIVEN' WHEN 'Y' THEN 'YEARLY' END
	FROM ORDR_OA_BRANDPACK OOB INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD 
	ON OOB.OA_BRANDPACK_ID = OOBD.OA_BRANDPACK_ID 
	INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_BRANDPACK_ID = OOB.PO_BRANDPACK_ID
	INNER JOIN ORDR_PURCHASE_ORDER PO ON OPB.PO_REF_NO = PO.PO_REF_NO
	WHERE OOBD.GQSY_SGT_P_FLAG LIKE  @GQSY_SGT_P_FLAG + '%'
	AND PO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND PO.PO_REF_DATE >= @START_DATE AND PO.PO_REF_DATE <= @END_DATE;
   END
   GO

-------------------------
IF EXISTS(SELECT NAME FROM Nufarm.Sys.Objects WHERE NAME = 'Sp_GetView_ORDR_OA_BRANDPACK_DISC_BY_MRKT' AND TYPE = 'P')
DROP PROCEDURE Sp_GetView_ORDR_OA_BRANDPACK_DISC_BY_MRKT
GO
CREATE PROCEDURE Sp_GetView_ORDR_OA_BRANDPACK_DISC_BY_MRKT
@DISTRIBUTOR_ID VARCHAR(10),
@START_DATE SMALLDATETIME,
@END_DATE SMALLDATETIME,
@GQSY_SGT_P_FLAG VARCHAR(5)
AS
SET NOCOUNT ON;

IF (@GQSY_SGT_P_FLAG IS NULL)
   BEGIN
	SELECT OOB.OA_BRANDPACK_ID,OOBD.DISC_QTY,OOBD.PRICE_PRQTY,OOBD.DISC_QTY * OOBD.PRICE_PRQTY AS AMOUNT_DISC_PRICE,
	[TYPE] = CASE GQSY_SGT_P_FLAG
		WHEN 'MG' THEN 'GIVEN_DPRD' WHEN 'CP' THEN 'GIVEN_CP(D)' WHEN 'CS' THEN 'GIVEN_CP(D)S' WHEN 'CR' THEN 'GIVEN_CP(R)'
		WHEN 'DK' THEN 'GIVEN_DK' WHEN 'KP' THEN 'GIVEN_PKPP' WHEN 'TD' THEN  'GIVEN_CP(D)' WHEN 'TS' THEN 'GIVEN_CP(D)S'
		WHEN 'CT' THEN 'GIVEN_CP(R M/T)' WHEN 'CD' THEN 'GIVEN_CP(R M/T)' WHEN 'DN' THEN 'DK(N)' END
	FROM ORDR_OA_BRANDPACK OOB INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD 
	ON OOB.OA_BRANDPACK_ID = OOBD.OA_BRANDPACK_ID 
	INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_BRANDPACK_ID = OOB.PO_BRANDPACK_ID
	INNER JOIN ORDR_PURCHASE_ORDER PO ON OPB.PO_REF_NO = PO.PO_REF_NO
	WHERE OOBD.GQSY_SGT_P_FLAG IN('MG','CR','CP','DK','KP','CS','TD','TS','CT','CD') 
	AND PO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND PO.PO_REF_DATE >= @START_DATE AND PO.PO_REF_DATE <= @END_DATE;
   END
ELSE
   BEGIN
	IF (@GQSY_SGT_P_FLAG = 'CS' OR @GQSY_SGT_P_FLAG = 'TS')
	BEGIN
		SELECT OOB.OA_BRANDPACK_ID,OOBD.DISC_QTY,OOBD.PRICE_PRQTY,OOBD.DISC_QTY * OOBD.PRICE_PRQTY AS AMOUNT_DISC_PRICE,
		[TYPE] = CASE @GQSY_SGT_P_FLAG
			WHEN 'MG' THEN 'GIVEN_DPRD' WHEN 'CP' THEN 'GIVEN_CP(D)' WHEN 'CS' THEN 'GIVEN_CP(D)S' WHEN 'CR' THEN 'GIVEN_CP(R)'
			WHEN 'DK' THEN 'GIVEN_DK' WHEN 'KP' THEN 'GIVEN_PKPP' WHEN 'TD' THEN  'GIVEN_CP(D)' WHEN 'TS' THEN 'GIVEN_CP(D)S' 
			WHEN 'CT' THEN 'GIVEN_CP(R M/T)' WHEN 'CD' THEN 'GIVEN_CP(R M/T)' WHEN 'DN' THEN 'DK(N)' END
		FROM ORDR_OA_BRANDPACK OOB INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD 
		ON OOB.OA_BRANDPACK_ID = OOBD.OA_BRANDPACK_ID 
		INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_BRANDPACK_ID = OOB.PO_BRANDPACK_ID
		INNER JOIN ORDR_PURCHASE_ORDER PO ON OPB.PO_REF_NO = PO.PO_REF_NO
		WHERE OOBD.GQSY_SGT_P_FLAG IN('CS','TS')
	END
	ELSE IF (@GQSY_SGT_P_FLAG = 'CP' OR @GQSY_SGT_P_FLAG = 'TD')
	BEGIN	
		SELECT OOB.OA_BRANDPACK_ID,OOBD.DISC_QTY,OOBD.PRICE_PRQTY,OOBD.DISC_QTY * OOBD.PRICE_PRQTY AS AMOUNT_DISC_PRICE,
		[TYPE] = CASE @GQSY_SGT_P_FLAG
			WHEN 'MG' THEN 'GIVEN_DPRD' WHEN 'CP' THEN 'GIVEN_CP(D)' WHEN 'CS' THEN 'GIVEN_CP(D)S' WHEN 'CR' THEN 'GIVEN_CP(R)'
			WHEN 'DK' THEN 'GIVEN_DK' WHEN 'KP' THEN 'GIVEN_PKPP' WHEN 'TD' THEN  'GIVEN_CP(D)' WHEN 'TS' THEN 'GIVEN_CP(D)S' 
		WHEN 'CT' THEN 'GIVEN_CP(R M/T)' WHEN 'CD' THEN 'GIVEN_CP(R M/T)' WHEN 'DN' THEN 'DK(N)'  END
		FROM ORDR_OA_BRANDPACK OOB INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD 
		ON OOB.OA_BRANDPACK_ID = OOBD.OA_BRANDPACK_ID 
		INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_BRANDPACK_ID = OOB.PO_BRANDPACK_ID
		INNER JOIN ORDR_PURCHASE_ORDER PO ON OPB.PO_REF_NO = PO.PO_REF_NO
		WHERE OOBD.GQSY_SGT_P_FLAG IN('CP','TD')
	END
	ELSE IF(@GQSY_SGT_P_FLAG = 'CD' OR @GQSY_SGT_P_FLAG = 'CT')
	BEGIN
		SELECT OOB.OA_BRANDPACK_ID,OOBD.DISC_QTY,OOBD.PRICE_PRQTY,OOBD.DISC_QTY * OOBD.PRICE_PRQTY AS AMOUNT_DISC_PRICE,
		[TYPE] = CASE @GQSY_SGT_P_FLAG
			WHEN 'MG' THEN 'GIVEN_DPRD' WHEN 'CP' THEN 'GIVEN_CP(D)' WHEN 'CS' THEN 'GIVEN_CP(D)S' WHEN 'CR' THEN 'GIVEN_CP(R)'
			WHEN 'DK' THEN 'GIVEN_DK' WHEN 'KP' THEN 'GIVEN_PKPP' WHEN 'TD' THEN  'GIVEN_CP(D)' WHEN 'TS' THEN 'GIVEN_CP(D)S' 
			WHEN 'CT' THEN 'GIVEN_CP(R M/T)' WHEN 'CD' THEN 'GIVEN_CP(R M/T)' WHEN 'DN' THEN 'DK(N)'  END
		FROM ORDR_OA_BRANDPACK OOB INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD 
		ON OOB.OA_BRANDPACK_ID = OOBD.OA_BRANDPACK_ID 
		INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_BRANDPACK_ID = OOB.PO_BRANDPACK_ID
		INNER JOIN ORDR_PURCHASE_ORDER PO ON OPB.PO_REF_NO = PO.PO_REF_NO
		WHERE OOBD.GQSY_SGT_P_FLAG IN('CD','CT')
	END
	ELSE
	BEGIN
		SELECT OOB.OA_BRANDPACK_ID,OOBD.DISC_QTY,OOBD.PRICE_PRQTY,OOBD.DISC_QTY * OOBD.PRICE_PRQTY AS AMOUNT_DISC_PRICE,
		[TYPE] = CASE @GQSY_SGT_P_FLAG
			WHEN 'MG' THEN 'GIVEN_DPRD' WHEN 'CP' THEN 'GIVEN_CP(D)' WHEN 'CS' THEN 'GIVEN_CP(D)S' WHEN 'CR' THEN 'GIVEN_CP(R)'
			WHEN 'DK' THEN 'GIVEN_DK' WHEN 'KP' THEN 'GIVEN_PKPP' WHEN 'TD' THEN  'GIVEN_CP(D)' WHEN 'TS' THEN 'GIVEN_CP(D)S' 
			WHEN 'CT' THEN 'GIVEN_CP(R M/T)' WHEN 'CD' THEN 'GIVEN_CP(R M/T)' WHEN 'DN' THEN 'DK(N)' END
		FROM ORDR_OA_BRANDPACK OOB INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD 
		ON OOB.OA_BRANDPACK_ID = OOBD.OA_BRANDPACK_ID 
		INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_BRANDPACK_ID = OOB.PO_BRANDPACK_ID
		INNER JOIN ORDR_PURCHASE_ORDER PO ON OPB.PO_REF_NO = PO.PO_REF_NO
		WHERE OOBD.GQSY_SGT_P_FLAG LIKE  @GQSY_SGT_P_FLAG + '%'
		AND PO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND PO.PO_REF_DATE >= @START_DATE AND PO.PO_REF_DATE <= @END_DATE;
	END   
END
GO
---------------------------------------------------------
ALTER PROCEDURE [dbo].[Sp_GetView_OTHER_DISC_HISTORY]
@DISTRIBUTOR_ID VARCHAR(10),
@START_DATE SMALLDATETIME,
@END_DATE SMALLDATETIME
AS
SET NOCOUNT ON;
SELECT OOB.OA_BRANDPACK_ID,OOBD.DISC_QTY,OOBD.PRICE_PRQTY,OOBD.DISC_QTY * OOBD.PRICE_PRQTY AS AMOUNT_DISC_PRICE,
[TYPE] = 'OTHER DISCOUNT'
FROM ORDR_OA_BRANDPACK OOB INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD 
ON OOB.OA_BRANDPACK_ID = OOBD.OA_BRANDPACK_ID 
INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_BRANDPACK_ID = OOB.PO_BRANDPACK_ID
INNER JOIN ORDR_PURCHASE_ORDER PO ON OPB.PO_REF_NO = PO.PO_REF_NO
WHERE OOBD.GQSY_SGT_P_FLAG ='O'
AND PO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND PO.PO_REF_DATE >= @START_DATE AND PO.PO_REF_DATE <= @END_DATE;
GO
-----------------------------------------------------------------------------------------------
IF EXISTS(SELECT NAME FROM Nufarm.Sys.Objects WHERE NAME = 'Usp_Get_Detail_Qty_Dispro' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Detail_Qty_Dispro                             
GO
CREATE PROCEDURE Usp_Get_Detail_Qty_Dispro
@DISTRIBUTOR_ID VARCHAR(10),
@START_DATE DATETIME,
@END_DATE DATETIME
AS
SET NOCOUNT ON;
IF (@DISTRIBUTOR_ID IS NULL)
  BEGIN
      SELECT DR.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,BR.BRAND_NAME,BB.BRANDPACK_NAME,(OPO.QTY_EVEN + ISNULL(OPO.LEFT_OA_QTY,0)) AS OA_QTY,OPO.RPK,
      OPO.DP,OPO.CP_D,OPO.CP_R,OPO.PKPP,OPO.DK,OPO.OTHERS,(ISNULL(OPO.TOTAL_DISC,0) + OPO.QTY_EVEN) AS TOTAL_DELIVERY,
      BBS.QUARTER_1 ,BBS.QUARTER_2 ,BBS.QUARTER_3,BBS.QUARTER_4,BBS.SEMESTER_1,
      BBS.SEMESTER_2 ,BBS.YEARLY,BBS.RELEASE_Q1 - OPO.REM_Q1 AS RELEASE_Q1,
      BBS.RELEASE_Q2 - OPO.REM_Q2 AS RELEASE_Q2,BBS.RELEASE_Q3 - OPO.REM_Q3 AS RELEASE_Q3,
      BBS.RELEASE_Q4 - OPO.REM_Q4 AS RELEASE_Q4,BBS.RELEASE_S1 - OPO.REM_S1 AS RELEASE_S1,
      BBS.RELEASE_S2 - OPO.REM_S2 AS RELEASE_S2,BBS.RELEASE_Y - OPO.REM_Y AS RELEASE_Y, 
      ISNULL((BBS.RELEASE_Q1 + BBS.RELEASE_Q2 + BBS.RELEASE_Q3 + BBS.RELEASE_Q4 + BBS.RELEASE_S1 + BBS.RELEASE_S2 + BBS.RELEASE_Y),0)
      - ISNULL((OPO.REM_Q1 + OPO.REM_Q2 + OPO.REM_Q3 + OPO.REM_Q4 + OPO.REM_S1 + OPO.REM_S2 + OPO.REM_Y),0)
      AS TOTAL_RELEASE,

      BBS.LEFT_Q1,BBS.LEFT_Q2,BBS.LEFT_Q3,BBS.LEFT_Q4,BBS.LEFT_S1, BBS.LEFT_S2,BBS.LEFT_Y,
      ISNULL((BBS.LEFT_Q1 + BBS.LEFT_Q2 + BBS.LEFT_Q3 + BBS.LEFT_Q4 + BBS.LEFT_S1 +  BBS.LEFT_S2 + BBS.LEFT_Y),0)
      AS TOTAL_LEFT,OPO.REM_Q1, OPO.REM_Q2, OPO.REM_Q3, OPO.REM_Q4, OPO.REM_S1, OPO.REM_S2, OPO.REM_Y,
	  (OPO.REM_Q1 + OPO.REM_Q2 + OPO.REM_Q3 + OPO.REM_Q4 + OPO.REM_S1 + OPO.REM_S2 + OPO.REM_Y) AS TOTAL_REMAIND
      FROM DIST_DISTRIBUTOR DR INNER JOIN
          (
            SELECT OPO.DISTRIBUTOR_ID,OPB.BRANDPACK_ID,ISNULL(SUM(OOB.QTY_EVEN),0) AS QTY_EVEN,ISNULL(SUM(OBD.RPK),0)AS RPK,
            ISNULL(SUM(OBD.OTHERS),0)AS OTHERS,ISNULL(SUM(OBD.LEFT_OA_QTY),0) AS LEFT_OA_QTY,
	    ISNULL(SUM(OBD.DP),0)AS DP,ISNULL(SUM(OBD.CP_D),0) AS CP_D,ISNULL(SUM(OBD.CP_R),0)AS CP_R,
            ISNULL(SUM(OBD.PKPP),0) AS PKPP,ISNULL(SUM(OBD.DK),0) AS DK,
            ISNULL(SUM(REM.REM_Q1),0)AS REM_Q1,ISNULL(SUM(REM.REM_Q2),0)AS REM_Q2,ISNULL(SUM(REM.REM_Q3),0)AS REM_Q3,
            ISNULL(SUM(REM.REM_Q4),0)AS REM_Q4,ISNULL(SUM(REM.REM_S1),0)AS REM_S1,
            ISNULL(SUM(REM.REM_S2),0)AS REM_S2,ISNULL(SUM(REM.REM_Y),0)AS REM_Y,
            ISNULL(SUM(OBD.TOTAL_DISC),0) AS TOTAL_DISC 
            FROM ORDR_PURCHASE_ORDER OPO INNER JOIN ORDR_PO_BRANDPACK OPB ON OPO.PO_REF_NO = OPB.PO_REF_NO
            INNER JOIN ORDR_OA_BRANDPACK OOB ON OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID     
            LEFT OUTER JOIN
                           (
                    	      SELECT OA_BRANDPACK_ID,
			      ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'MG' THEN DISC_QTY ELSE 0 END),0) AS RPK,
			      ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'O' THEN DISC_QTY ELSE 0 END),0)AS OTHERS,
		              ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'RMOA' THEN DISC_QTY ELSE 0 END),0) AS LEFT_OA_QTY,
			      ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'G' THEN DISC_QTY ELSE 0 END),0) AS DP,
			      ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'CP' THEN DISC_QTY ELSE 0 END),0) AS CP_D,
			      ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'SC' THEN DISC_QTY ELSE 0 END),0) AS CP_D_S,
				  ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'CD' THEN DISC_QTY WHEN 'CT' THEN DISC_QTY ELSE 0 END),0) AS CP_RMT,
			      ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'CR' THEN DISC_QTY ELSE 0 END),0) AS CP_R,
        		      ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'KP' THEN DISC_QTY ELSE 0 END),0)AS PKPP,
			      ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'DK' THEN DISC_QTY WHEN 'DN' THEN DISC_QTY ELSE 0 END),0) AS DK,
			      ISNULL(SUM(DISC_QTY),0) AS TOTAL_DISC
			      FROM ORDR_OA_BRANDPACK_DISC
			      GROUP BY OA_BRANDPACK_ID
                    	    )OBD
             ON OOB.OA_BRANDPACK_ID = OBD.OA_BRANDPACK_ID
             LEFT OUTER JOIN (
                               SELECT OA_BRANDPACK_ID,
                               ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN LEFT_QTY ELSE 0 END),0) AS REM_Q1,
			       ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN LEFT_QTY ELSE 0 END),0) AS REM_Q2,
			       ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN LEFT_QTY ELSE 0 END),0) AS REM_Q3,
			       ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN LEFT_QTY ELSE 0 END),0) AS REM_Q4,
			       ISNULL(SUM(CASE FLAG WHEN 'S1' THEN LEFT_QTY ELSE 0 END),0) AS REM_S1,
			       ISNULL(SUM(CASE FLAG WHEN 'S2' THEN LEFT_QTY ELSE 0 END),0) AS REM_S2,
        		       ISNULL(SUM(CASE FLAG WHEN 'Y' THEN  LEFT_QTY ELSE 0 END),0)AS REM_Y
                               FROM ORDR_OA_REMAINDING GROUP BY OA_BRANDPACK_ID
			     )REM
             ON OOB.OA_BRANDPACK_ID = REM.OA_BRANDPACK_ID 
	     WHERE OPO.PO_REF_DATE >= @START_DATE AND OPO.PO_REF_DATE <= @END_DATE
	     GROUP BY OPO.DISTRIBUTOR_ID,OPB.BRANDPACK_ID
          )OPO
     ON OPO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
     INNER JOIN BRND_BRANDPACK BB ON BB.BRANDPACK_ID = OPO.BRANDPACK_ID
     INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID

     LEFT OUTER JOIN(
                      SELECT BBS.DISTRIBUTOR_ID,ABI.BRANDPACK_ID,
      		      SUM(CASE BBS.QSY_FLAG WHEN 'Q1' THEN DISC_QTY ELSE 0 END)AS QUARTER_1,
    		      SUM(CASE BBS.QSY_FLAG WHEN 'Q2' THEN DISC_QTY ELSE 0 END)AS QUARTER_2,
    		      SUM(CASE BBS.QSY_FLAG WHEN 'Q3' THEN DISC_QTY ELSE 0 END)AS QUARTER_3,
    		      SUM(CASE BBS.QSY_FLAG WHEN 'Q4' THEN DISC_QTY ELSE 0 END) AS QUARTER_4,
    		      SUM(CASE BBS.QSY_FLAG WHEN 'S1' THEN DISC_QTY ELSE 0 END)AS SEMESTER_1,
    		      SUM(CASE BBS.QSY_FLAG WHEN 'S2' THEN DISC_QTY ELSE 0 END)AS SEMESTER_2,
    		      SUM(CASE BBS.QSY_FLAG WHEN 'Y' THEN DISC_QTY ELSE 0 END)AS YEARLY,
    		      SUM(CASE BBS.QSY_FLAG WHEN 'Q1' THEN RELEASE_QTY ELSE 0 END)AS RELEASE_Q1,
    		      SUM(CASE BBS.QSY_FLAG WHEN 'Q2' THEN RELEASE_QTY ELSE 0 END)AS RELEASE_Q2,
		      SUM(CASE BBS.QSY_FLAG WHEN 'Q3' THEN RELEASE_QTY ELSE 0 END)AS RELEASE_Q3,
		      SUM(CASE BBS.QSY_FLAG WHEN 'Q4' THEN RELEASE_QTY ELSE 0 END)AS RELEASE_Q4,
		      SUM(CASE BBS.QSY_FLAG WHEN 'S1' THEN RELEASE_QTY ELSE 0 END)AS RELEASE_S1,
		      SUM(CASE BBS.QSY_FLAG WHEN 'S2' THEN RELEASE_QTY ELSE 0 END)AS RELEASE_S2,
		      SUM(CASE BBS.QSY_FLAG WHEN 'Y' THEN RELEASE_QTY ELSE 0 END)AS RELEASE_Y,
		      SUM(CASE BBS.QSY_FLAG WHEN 'Q1' THEN LEFT_QTY ELSE 0 END)AS LEFT_Q1,
		      SUM(CASE BBS.QSY_FLAG WHEN 'Q2' THEN LEFT_QTY ELSE 0 END) AS LEFT_Q2,
		      SUM(CASE BBS.QSY_FLAG WHEN 'Q3'THEN LEFT_QTY ELSE 0 END)AS LEFT_Q3,
		      SUM(CASE BBS.QSY_FLAG WHEN 'Q4' THEN LEFT_QTY ELSE 0 END) AS LEFT_Q4,
		      SUM(CASE BBS.QSY_FLAG WHEN 'S1' THEN LEFT_QTY ELSE 0 END)AS LEFT_S1,
		      SUM(CASE BBS.QSY_FLAG WHEN 'S2' THEN LEFT_QTY ELSE 0 END)AS LEFT_S2,
		      SUM(CASE BBS.QSY_FLAG WHEN 'Y' THEN LEFT_QTY ELSE 0 END)AS LEFT_Y
		   
		      FROM AGREE_BRANDPACK_INCLUDE ABI LEFT OUTER JOIN BRND_BRANDPACK_SAVING BBS
		      ON ABI.AGREE_BRANDPACK_ID = BBS.AGREE_BRANDPACK_ID
		      WHERE ABI.AGREE_BRANDPACK_ID IN(SELECT AGREE_BRANDPACK_ID FROM AGREE_BRANDPACK_INCLUDE
		      WHERE AGREEMENT_NO IN(SELECT DISTINCT AA.AGREEMENT_NO FROM AGREE_AGREEMENT AA
		      INNER JOIN DISTRIBUTOR_AGREEMENT DA ON DA.AGREEMENT_NO = AA.AGREEMENT_NO
		      WHERE DA.DISTRIBUTOR_ID = BBS.DISTRIBUTOR_ID AND AA.START_DATE >= @START_DATE
		      AND AA.END_DATE <= @END_DATE))--YEAR(AA.END_DATE) >= YEAR(GETDATE()) - 1))
		      GROUP BY BBS.DISTRIBUTOR_ID,ABI.BRANDPACK_ID
                     )BBS
     ON OPO.BRANDPACK_ID = BBS.BRANDPACK_ID
     AND BBS.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
  END
ELSE
  BEGIN
      SELECT DR.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,BR.BRAND_NAME,BB.BRANDPACK_NAME,(OPO.QTY_EVEN + ISNULL(OPO.LEFT_OA_QTY,0)) AS OA_QTY,OPO.RPK,
      OPO.DP,OPO.CP_D,OPO.CP_R,OPO.PKPP,OPO.DK,OPO.OTHERS,(ISNULL(OPO.TOTAL_DISC,0) + OPO.QTY_EVEN) AS TOTAL_DELIVERY,
      BBS.QUARTER_1 ,BBS.QUARTER_2 ,BBS.QUARTER_3,BBS.QUARTER_4,BBS.SEMESTER_1,
      BBS.SEMESTER_2 ,BBS.YEARLY,BBS.RELEASE_Q1 - OPO.REM_Q1 AS RELEASE_Q1,
      BBS.RELEASE_Q2 - OPO.REM_Q2 AS RELEASE_Q2,BBS.RELEASE_Q3 - OPO.REM_Q3 AS RELEASE_Q3,
      BBS.RELEASE_Q4 - OPO.REM_Q4 AS RELEASE_Q4,BBS.RELEASE_S1 - OPO.REM_S1 AS RELEASE_S1,
      BBS.RELEASE_S2 - OPO.REM_S2 AS RELEASE_S2,BBS.RELEASE_Y - OPO.REM_Y AS RELEASE_Y, 
      ISNULL((BBS.RELEASE_Q1 + BBS.RELEASE_Q2 + BBS.RELEASE_Q3 + BBS.RELEASE_Q4 + BBS.RELEASE_S1 + BBS.RELEASE_S2 + BBS.RELEASE_Y),0)
      - ISNULL((OPO.REM_Q1 + OPO.REM_Q2 + OPO.REM_Q3 + OPO.REM_Q4 + OPO.REM_S1 + OPO.REM_S2 + OPO.REM_Y),0)
      AS TOTAL_RELEASE,

      BBS.LEFT_Q1,BBS.LEFT_Q2,BBS.LEFT_Q3,BBS.LEFT_Q4,BBS.LEFT_S1, BBS.LEFT_S2,BBS.LEFT_Y,
      ISNULL((BBS.LEFT_Q1 + BBS.LEFT_Q2 + BBS.LEFT_Q3 + BBS.LEFT_Q4 + BBS.LEFT_S1 +  BBS.LEFT_S2 + BBS.LEFT_Y),0)
      AS TOTAL_LEFT,OPO.REM_Q1, OPO.REM_Q2, OPO.REM_Q3, OPO.REM_Q4, OPO.REM_S1, OPO.REM_S2, OPO.REM_Y,
	  (OPO.REM_Q1 + OPO.REM_Q2 + OPO.REM_Q3 + OPO.REM_Q4 + OPO.REM_S1 + OPO.REM_S2 + OPO.REM_Y) AS TOTAL_REMAIND
      FROM DIST_DISTRIBUTOR DR INNER JOIN
       (
          SELECT OPO.DISTRIBUTOR_ID,OPB.BRANDPACK_ID,ISNULL(SUM(OOB.QTY_EVEN),0) AS QTY_EVEN,
          ISNULL(SUM(OBD.RPK),0)AS RPK,ISNULL(SUM(OBD.OTHERS),0)AS OTHERS,ISNULL(SUM(OBD.LEFT_OA_QTY),0) AS LEFT_OA_QTY,
          ISNULL(SUM(OBD.DP),0)AS DP,ISNULL(SUM(OBD.CP_D),0)AS CP_D,ISNULL(SUM(OBD.CP_R),0)AS CP_R,
          ISNULL(SUM(OBD.PKPP),0) AS PKPP,ISNULL(SUM(OBD.DK),0) AS DK,
          ISNULL(SUM(REM.REM_Q1),0)AS REM_Q1,ISNULL(SUM(REM.REM_Q2),0)AS REM_Q2,ISNULL(SUM(REM.REM_Q3),0)AS REM_Q3,
          ISNULL(SUM(REM.REM_Q4),0)AS REM_Q4,ISNULL(SUM(REM.REM_S1),0)AS REM_S1,
          ISNULL(SUM(REM.REM_S2),0)AS REM_S2,ISNULL(SUM(REM.REM_Y),0)AS REM_Y,
          ISNULL(SUM(OBD.TOTAL_DISC),0) AS TOTAL_DISC FROM ORDR_PURCHASE_ORDER OPO INNER JOIN ORDR_PO_BRANDPACK
          OPB ON OPO.PO_REF_NO = OPB.PO_REF_NO
          INNER JOIN ORDR_OA_BRANDPACK OOB ON OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID     
          LEFT OUTER JOIN (
        		    SELECT OA_BRANDPACK_ID,
			    ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'MG' THEN DISC_QTY ELSE 0 END),0) AS RPK,
			    ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'O' THEN DISC_QTY ELSE 0 END),0)AS OTHERS,
			    ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'RMOA' THEN DISC_QTY ELSE 0 END),0) AS LEFT_OA_QTY,
			    ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'G' THEN DISC_QTY ELSE 0 END),0) AS DP,
			    ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'CP' THEN DISC_QTY ELSE 0 END),0) AS CP_D,
			    ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'SC' THEN DISC_QTY ELSE 0 END),0) AS CP_D_S,
				ISNULL(SUM(CASE GQSY_SGT_P_FLAG	WHEN 'CD' THEN DISC_QTY WHEN 'CT' THEN DISC_QTY ELSE 0 END),0) AS CP_RMT,
			    ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'CR' THEN DISC_QTY ELSE 0 END),0) AS CP_R,
        		    ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'KP' THEN DISC_QTY ELSE 0 END),0)AS PKPP,
			    ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'DK' THEN DISC_QTY WHEN 'DN' THEN DISC_QTY ELSE 0 END),0) AS DK,
			    ISNULL(SUM(DISC_QTY),0) AS TOTAL_DISC
			    FROM ORDR_OA_BRANDPACK_DISC
			    GROUP BY OA_BRANDPACK_ID
                         )OBD
          ON OOB.OA_BRANDPACK_ID = OBD.OA_BRANDPACK_ID
          LEFT OUTER JOIN (
                           SELECT OA_BRANDPACK_ID,
                           ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN LEFT_QTY ELSE 0 END),0) AS REM_Q1,
			   ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN LEFT_QTY ELSE 0 END),0) AS REM_Q2,
			   ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN LEFT_QTY ELSE 0 END),0) AS REM_Q3,
			   ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN LEFT_QTY ELSE 0 END),0) AS REM_Q4,
			   ISNULL(SUM(CASE FLAG WHEN 'S1' THEN LEFT_QTY ELSE 0 END),0) AS REM_S1,
			   ISNULL(SUM(CASE FLAG WHEN 'S2' THEN LEFT_QTY ELSE 0 END),0) AS REM_S2,
        		   ISNULL(SUM(CASE FLAG WHEN 'Y' THEN LEFT_QTY ELSE 0 END),0)AS REM_Y
                           FROM ORDR_OA_REMAINDING GROUP BY OA_BRANDPACK_ID
			  )REM
          ON OOB.OA_BRANDPACK_ID = REM.OA_BRANDPACK_ID
          WHERE OPO.PO_REF_DATE >= @START_DATE AND OPO.PO_REF_DATE <= @END_DATE 
          GROUP BY OPO.DISTRIBUTOR_ID,OPB.BRANDPACK_ID
       )OPO
       ON OPO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
      INNER JOIN BRND_BRANDPACK BB ON BB.BRANDPACK_ID = OPO.BRANDPACK_ID
      INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
  
      LEFT OUTER JOIN(
                       SELECT BBS.DISTRIBUTOR_ID,ABI.BRANDPACK_ID,
      		       SUM(CASE BBS.QSY_FLAG WHEN 'Q1' THEN DISC_QTY ELSE 0 END)AS QUARTER_1,
      		       SUM(CASE BBS.QSY_FLAG WHEN 'Q2' THEN DISC_QTY ELSE 0 END)AS QUARTER_2,
	               SUM(CASE BBS.QSY_FLAG WHEN 'Q3' THEN DISC_QTY ELSE 0 END)AS QUARTER_3,
		       SUM(CASE BBS.QSY_FLAG WHEN 'Q4' THEN DISC_QTY ELSE 0 END) AS QUARTER_4,
		       SUM(CASE BBS.QSY_FLAG WHEN 'S1' THEN DISC_QTY ELSE 0 END)AS SEMESTER_1,
		       SUM(CASE BBS.QSY_FLAG WHEN 'S2' THEN DISC_QTY ELSE 0 END)AS SEMESTER_2,
		       SUM(CASE BBS.QSY_FLAG WHEN 'Y' THEN DISC_QTY ELSE 0 END)AS YEARLY,
		       SUM(CASE BBS.QSY_FLAG WHEN 'Q1' THEN RELEASE_QTY ELSE 0 END)AS RELEASE_Q1,
		       SUM(CASE BBS.QSY_FLAG WHEN 'Q2' THEN RELEASE_QTY ELSE 0 END)AS RELEASE_Q2,
		       SUM(CASE BBS.QSY_FLAG WHEN 'Q3' THEN RELEASE_QTY ELSE 0 END)AS RELEASE_Q3,
		       SUM(CASE BBS.QSY_FLAG WHEN 'Q4' THEN RELEASE_QTY ELSE 0 END)AS RELEASE_Q4,
		       SUM(CASE BBS.QSY_FLAG WHEN 'S1' THEN RELEASE_QTY ELSE 0 END)AS RELEASE_S1,
		       SUM(CASE BBS.QSY_FLAG WHEN 'S2' THEN RELEASE_QTY ELSE 0 END)AS RELEASE_S2,
		       SUM(CASE BBS.QSY_FLAG WHEN 'Y' THEN RELEASE_QTY ELSE 0 END)AS RELEASE_Y,
		       SUM(CASE BBS.QSY_FLAG WHEN 'Q1' THEN LEFT_QTY ELSE 0 END)AS LEFT_Q1,
		       SUM(CASE BBS.QSY_FLAG WHEN 'Q2' THEN LEFT_QTY ELSE 0 END) AS LEFT_Q2,
		       SUM(CASE BBS.QSY_FLAG WHEN 'Q3'THEN LEFT_QTY ELSE 0 END)AS LEFT_Q3,
		       SUM(CASE BBS.QSY_FLAG WHEN 'Q4' THEN LEFT_QTY ELSE 0 END) AS LEFT_Q4,
		       SUM(CASE BBS.QSY_FLAG WHEN 'S1' THEN LEFT_QTY ELSE 0 END)AS LEFT_S1,
		       SUM(CASE BBS.QSY_FLAG WHEN 'S2' THEN LEFT_QTY ELSE 0 END)AS LEFT_S2,
		       SUM(CASE BBS.QSY_FLAG WHEN 'Y' THEN LEFT_QTY ELSE 0 END)AS LEFT_Y
		   
		       FROM AGREE_BRANDPACK_INCLUDE ABI LEFT OUTER JOIN BRND_BRANDPACK_SAVING BBS
		       ON ABI.AGREE_BRANDPACK_ID = BBS.AGREE_BRANDPACK_ID
		       WHERE ABI.AGREE_BRANDPACK_ID IN(SELECT AGREE_BRANDPACK_ID FROM AGREE_BRANDPACK_INCLUDE
		       WHERE AGREEMENT_NO IN(SELECT AA.AGREEMENT_NO FROM AGREE_AGREEMENT AA
		       INNER JOIN DISTRIBUTOR_AGREEMENT DA ON DA.AGREEMENT_NO = AA.AGREEMENT_NO
		       WHERE DA.DISTRIBUTOR_ID = BBS.DISTRIBUTOR_ID AND AA.START_DATE >= @START_DATE
		          AND AA.END_DATE <= @END_DATE))
		       GROUP BY BBS.DISTRIBUTOR_ID,ABI.BRANDPACK_ID
		     )BBS
       ON OPO.BRANDPACK_ID = BBS.BRANDPACK_ID
       AND BBS.DISTRIBUTOR_ID = OPO.DISTRIBUTOR_ID
       WHERE OPO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
  END
GO
 
 ALTER PROCEDURE [dbo].[Usp_Create_Temp_Table_BrandPack]
AS 
SET NOCOUNT ON;
SELECT BP.BRANDPACK_NAME,BR.BRAND_NAME AS BRAND_ACCPAC,BB1.BRAND_ID AS BRAND_ID_DTS,
BP.BRANDPACK_ID AS BRANDPACK_ID_DTS,BR.BRAND_ID AS BRAND_ID_ACCPAC
,(BR.BRAND_ID + '' + CASE RTRIM(BP.UNIT)
WHEN ('LITRE')THEN
        (SELECT DevidedQty = CASE 
          WHEN (P.QUANTITY >=1 AND P.QUANTITY <= 9) 
             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'L') 
          WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'L')
          WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999)
             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'L')
            END
         )  
WHEN ('MILILITRE') THEN
      (SELECT DevidedQty = CASE 
       WHEN (P.QUANTITY >= 1 AND P.QUANTITY <= 9) 
             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'M') 
       WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'M')
       WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999 )
             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'M')
	END
         )  	      
WHEN ('KILOGRAM') THEN
      (SELECT DevidedQty = CASE 
       WHEN (BP.DEVIDED_QUANTITY >= 0.001 AND BP.DEVIDED_QUANTITY <= 0.009)
             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G') 
       WHEN (BP.DEVIDED_QUANTITY >= 0.10 AND BP.DEVIDED_QUANTITY <= 0.09)
	     THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G')
       WHEN (BP.DEVIDED_QUANTITY >= 0.1 AND BP.DEVIDED_QUANTITY <= 0.9)
	     THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G') 
       WHEN (P.QUANTITY >=1 AND P.QUANTITY <= 9) 
             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K') 
       WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K')
       WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999)
             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K')
	END
         )  	
WHEN ('GRAM') THEN
      (SELECT DevidedQty = CASE 
       WHEN (P.QUANTITY >=1 AND P.QUANTITY <= 9) 
             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G') 
       WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G')
       WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999)
             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'G')
       END 
      )
WHEN('SACHET') THEN
       (SELECT DevidedQty = CASE 
       WHEN (P.QUANTITY >=1 AND P.QUANTITY <= 9) 
             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'S') 
       WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'S')
       WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999)
             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'S')
       END 
      )   	
WHEN ('BAGS') THEN
      (SELECT DevidedQty = CASE 
       WHEN (P.QUANTITY >=1 AND P.QUANTITY <= 9) 
             THEN ('00' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K') 
       WHEN (P.QUANTITY >= 10 AND P.QUANTITY <= 99)
             THEN ('0' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K')
       WHEN (P.QUANTITY >= 100 AND P.QUANTITY <= 999)
             THEN ('' + CAST((CAST((P.QUANTITY)AS INT))AS VARCHAR(5)) + 'K')
	END
       )  
END	
)AS BRANDPACK_ID_ACCPAC
INTO ##T_BRANDPACK
FROM(SELECT DISTINCT RIGHT(RTRIM(SEG.SEGMENT1),1) + '' + RTRIM(SEG.SEGMENT2)AS BRAND_ID,
       UPPER(RTRIM(IC1.[DESC])) AS BRAND_NAME
       FROM NI87.dbo.ICITEM SEG INNER JOIN NI87.dbo.ICCATG  IC1 ON IC1.CATEGORY = SEG.CATEGORY
       WHERE (RTRIM(SEG.ITEMBRKID) = 'FG' OR  RTRIM(SEG.ITEMBRKID) = 'FGST') AND UPPER(IC1.[DESC]) NOT LIKE '%BULK%'
       AND UPPER(IC1.[DESC]) NOT LIKE '%OTHERS%' AND UPPER(IC1.[DESC]) NOT LIKE '%GARBAGES%' AND UPPER(IC1.[DESC]) NOT LIKE '%-E' 
       AND UPPER(IC1.[DESC]) NOT LIKE '%EXPORT%' AND UPPER(IC1.[DESC]) NOT LIKE '%EXP%'
      )BR
INNER JOIN(SELECT BRAND_ID,BRAND_NAME,BRAND_ID_ACCPAC = CASE REPLACE(BRAND_ID,'-','')
	--ROUNDUP
		WHEN '006020' THEN '00060' WHEN '0060200' THEN '00060'
		WHEN '00604' THEN '00060' WHEN '00601' THEN '00060'
		-----CHIX--
		WHEN '01006' THEN '11006' 
                -------LUGEN---------------------------------------------
		WHEN '01001' THEN '11001'-----------------------------------------
		---GIBGRO
		WHEN '00896' THEN '30896' WHEN '00897' THEN '30897' WHEN '00898' THEN '30898'                
		--MICROTHIOL---
		WHEN '07017' THEN '77017' WHEN '07009' THEN '77009' WHEN '07008' THEN '77008' 
		--KUPROXAT
		WHEN '077001' THEN '77001'
		---BIMARON--
		WHEN '00325' THEN '00310'
                --PRODUCT EXPORT 02-2014
		WHEN '022010' THEN '22010' WHEN '022003' THEN '22003' WHEN '022034' THEN '22034'
		WHEN '022006' THEN '22006' WHEN '022012' THEN '22012' WHEN '022011' THEN '22011'
		ELSE BRAND_ID END
            FROM Nufarm.dbo.BRND_BRAND WHERE BRAND_NAME NOT LIKE 'OTHERS'
           )BB1    
ON BB1.BRAND_ID_ACCPAC = BR.BRAND_ID 
 OR SUBSTRING(BB1.BRAND_ID_ACCPAC,2,5) = BR.BRAND_ID OR RTRIM(BB1.BRAND_NAME) LIKE RTRIM(BR.BRAND_NAME) + '%'
INNER JOIN Nufarm.dbo.BRND_BRANDPACK BP ON BP.BRAND_ID = BB1.BRAND_ID
INNER JOIN Nufarm.dbo.BRND_PACK P ON BP.PACK_ID = P.PACK_ID
WHERE (BP.UNIT <> '' AND BP.UNIT IS NOT NULL)
AND (BP.IsActive = 1 AND BP.IsObsolete = 0)
AND EXISTS(SELECT BRAND_ID FROM Nufarm.dbo.AGREE_BRAND_INCLUDE WHERE BRAND_ID = BB1.BRAND_ID); 

CREATE CLUSTERED INDEX IX_T_BRANDPACK ON ##T_BRANDPACK(BRANDPACK_ID_DTS,BRANDPACK_ID_ACCPAC);
GO

IF EXISTS(SELECT NAME FROM Nufarm.Sys.Objects WHERE NAME = 'Sp_GetView_PURCHASE_ORDER_AGREE_STILL_APPLY' AND TYPE = 'P')
DROP PROCEDURE Sp_GetView_PURCHASE_ORDER_AGREE_STILL_APPLY
GO


IF EXISTS(SELECT NAME FROM Nufarm.Sys.Objects WHERE NAME = 'Usp_Create_View_Target_Reaching' AND TYPE = 'P')
DROP PROCEDURE Usp_Create_View_Target_Reaching
GO
CREATE PROCEDURE Usp_Create_View_Target_Reaching
@DISTRIBUTOR_ID VARCHAR(10),
@AGREEMENT_NO VARCHAR(25),
@FLAG VARCHAR(2)
AS
SET NOCOUNT ON
DECLARE @V_START_DATE DATETIME,@V_SUMDAYS INT,@V_LONG_DATE INT
SET @V_START_DATE = (SELECT START_DATE FROM AGREE_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO)
SET @V_SUMDAYS = CAST((SELECT DATEDIFF(DAY,START_DATE,END_DATE) FROM AGREE_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO)AS INT)
IF (@FLAG = 'Q1') 
  BEGIN
	SET @V_LONG_DATE = (@V_SUMDAYS/4)
	DECLARE @V_START_DATE_Q1 DATETIME,@V_END_DATE_Q1 DATETIME
	SET @V_START_DATE_Q1 = @V_START_DATE
	SET @V_END_DATE_Q1 = (SELECT DATEADD(DAY,90,@V_START_DATE))
 	IF (SELECT COUNT (DISTRIBUTOR_ID) FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO) <= 1
	    BEGIN
		SELECT ABI.BRAND_ID,BR_1.BRAND_NAME,ABI.TARGET_Q1,TARGET_GROUP = 'NO',ISNULL(BR.ACTUAL,0)AS ACTUAL,ISNULL(BR.ACTUAL,0) - ABI.TARGET_Q1 AS LEFT_QTY FROM AGREE_BRAND_INCLUDE ABI INNER JOIN BRND_BRAND BR_1
		ON ABI.BRAND_ID = BR_1.BRAND_ID 
        	LEFT OUTER JOIN(
	                        SELECT ABI_1.AGREE_BRAND_ID,ISNULL(SUM(OPO.ACTUAL),0)AS ACTUAL FROM AGREE_BRANDPACK_INCLUDE ABI_1
	                        INNER JOIN(
			                   SELECT ABI_2.AGREE_BRANDPACK_ID,ISNULL(SUM(OPB.PO_ORIGINAL_QTY),0) AS ACTUAL FROM ORDR_PO_BRANDPACK OPB INNER JOIN AGREE_BRANDPACK_INCLUDE ABI_2
	                                   ON ABI_2.BRANDPACK_ID = OPB.BRANDPACK_ID 
	                                   INNER JOIN ORDR_PURCHASE_ORDER OPO ON OPB.PO_REF_NO = OPO.PO_REF_NO
                                           WHERE OPO.PO_REF_DATE <= @V_END_DATE_Q1 AND OPO.PO_REF_DATE >= @V_START_DATE_Q1
	                                   AND ABI_2.AGREEMENT_NO = @AGREEMENT_NO AND OPO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID GROUP BY ABI_2.AGREE_BRANDPACK_ID 
                                           )OPO 
			                    ON OPO.AGREE_BRANDPACK_ID = ABI_1.AGREE_BRANDPACK_ID  GROUP BY ABI_1.AGREE_BRAND_ID
            		       )BR	
                                ON BR.AGREE_BRAND_ID = ABI.AGREE_BRAND_ID 
		WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO 
	    END
	 ELSE
	    BEGIN
		SELECT ABI.BRAND_ID,BR_1.BRAND_NAME,ABI.TARGET_Q1,TARGET_GROUP = 'YESS',ISNULL(BR.ACTUAL,0)AS ACTUAL_DISTRIBUTOR,ISNULL(BR.ACTUAL_GROUP,0) AS ACTUAL_GROUP,
                ISNULL(BR.ACTUAL_GROUP,0) - ABI.TARGET_Q1 AS LEFT_QTY FROM AGREE_BRAND_INCLUDE ABI INNER JOIN BRND_BRAND BR_1
		ON ABI.BRAND_ID = BR_1.BRAND_ID 
        	LEFT OUTER JOIN(
	                        SELECT ABI_1.AGREE_BRAND_ID,ISNULL(SUM(OPO.ACTUAL),0)AS ACTUAL,ISNULL(SUM(OPO_1.ACTUAL_GROUP),0) AS ACTUAL_GROUP FROM AGREE_BRANDPACK_INCLUDE ABI_1
	                        INNER JOIN(
			                   SELECT ABI_2.AGREE_BRANDPACK_ID,ISNULL(SUM(OPB.PO_ORIGINAL_QTY),0) AS ACTUAL FROM ORDR_PO_BRANDPACK OPB INNER JOIN AGREE_BRANDPACK_INCLUDE ABI_2
	                                   ON ABI_2.BRANDPACK_ID = OPB.BRANDPACK_ID 
	                                   INNER JOIN ORDR_PURCHASE_ORDER OPO ON OPB.PO_REF_NO = OPO.PO_REF_NO
                                           WHERE OPO.PO_REF_DATE <= @V_END_DATE_Q1 AND OPO.PO_REF_DATE >= @V_START_DATE_Q1 AND OPO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
				           AND ABI_2.AGREEMENT_NO = @AGREEMENT_NO
	                                    GROUP BY ABI_2.AGREE_BRANDPACK_ID
                                           )OPO 
                                            ON OPO.AGREE_BRANDPACK_ID = ABI_1.AGREE_BRANDPACK_ID  
			         INNER JOIN(
			                   SELECT ABI_2.AGREE_BRANDPACK_ID,ISNULL(SUM(OPB.PO_ORIGINAL_QTY),0) AS ACTUAL_GROUP FROM ORDR_PO_BRANDPACK OPB INNER JOIN AGREE_BRANDPACK_INCLUDE ABI_2
	                                   ON ABI_2.BRANDPACK_ID = OPB.BRANDPACK_ID 
	                                   INNER JOIN ORDR_PURCHASE_ORDER OPO ON OPB.PO_REF_NO = OPO.PO_REF_NO
                                           WHERE OPO.PO_REF_DATE <= @V_END_DATE_Q1 AND OPO.PO_REF_DATE >= @V_START_DATE_Q1 AND 
					   OPO.DISTRIBUTOR_ID IN(SELECT DISTRIBUTOR_ID FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO)
				           AND ABI_2.AGREEMENT_NO = @AGREEMENT_NO
	                                    GROUP BY ABI_2.AGREE_BRANDPACK_ID
                                           )OPO_1 
                                          ON OPO_1.AGREE_BRANDPACK_ID = ABI_1.AGREE_BRANDPACK_ID  
                                  GROUP BY ABI_1.AGREE_BRAND_ID  					    
                        	 )BR	
                                ON BR.AGREE_BRAND_ID = ABI.AGREE_BRAND_ID 
		WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO 
            END		
	PRINT ' @V_START_DATE_Q1 = ' + CAST((@V_START_DATE_Q1)AS VARCHAR(30))
	PRINT ' @V_END_DATE_Q1 = ' + CAST((@V_END_DATE_Q1)AS VARCHAR(30))
   END
ELSE IF(@FLAG = 'Q2')
   BEGIN
	SET @V_LONG_DATE = @V_SUMDAYS/4
	DECLARE @V_START_DATE_Q2 DATETIME,@V_END_DATE_Q2 DATETIME
	SET @V_START_DATE_Q2 = (SELECT DATEADD(DAY,@V_LONG_DATE,@V_START_DATE))
	SET @V_END_DATE_Q2 = (SELECT DATEADD(DAY,90,@V_START_DATE_Q2))
	IF (SELECT COUNT (DISTRIBUTOR_ID) FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO) <= 1
	    BEGIN
		SELECT ABI.BRAND_ID,BR_1.BRAND_NAME,ABI.TARGET_Q2,TARGET_GROUP = 'NO',ISNULL(BR.ACTUAL,0)AS ACTUAL,ISNULL(BR.ACTUAL,0) - ABI.TARGET_Q1 AS LEFT_QTY FROM AGREE_BRAND_INCLUDE ABI INNER JOIN BRND_BRAND BR_1
		ON ABI.BRAND_ID = BR_1.BRAND_ID 
        	LEFT OUTER JOIN(
	                        SELECT ABI_1.AGREE_BRAND_ID,ISNULL(SUM(OPO.ACTUAL),0)AS ACTUAL FROM AGREE_BRANDPACK_INCLUDE ABI_1
	                        INNER JOIN(
			                   SELECT ABI_2.AGREE_BRANDPACK_ID,ISNULL(SUM(OPB.PO_ORIGINAL_QTY),0) AS ACTUAL FROM ORDR_PO_BRANDPACK OPB INNER JOIN AGREE_BRANDPACK_INCLUDE ABI_2
	                                   ON ABI_2.BRANDPACK_ID = OPB.BRANDPACK_ID 
	                                   INNER JOIN ORDR_PURCHASE_ORDER OPO ON OPB.PO_REF_NO = OPO.PO_REF_NO
                                           WHERE OPO.PO_REF_DATE <= @V_END_DATE_Q2 AND OPO.PO_REF_DATE >= @V_START_DATE_Q2
	                                   AND ABI_2.AGREEMENT_NO = @AGREEMENT_NO AND OPO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID GROUP BY ABI_2.AGREE_BRANDPACK_ID 
                                           )OPO 
			                    ON OPO.AGREE_BRANDPACK_ID = ABI_1.AGREE_BRANDPACK_ID  GROUP BY ABI_1.AGREE_BRAND_ID
            		       )BR	
                                ON BR.AGREE_BRAND_ID = ABI.AGREE_BRAND_ID 
		WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO 
	    END
	 ELSE
	    BEGIN
		SELECT ABI.BRAND_ID,BR_1.BRAND_NAME,ABI.TARGET_Q2,TARGET_GROUP = 'YESS',ISNULL(BR.ACTUAL,0)AS ACTUAL_DISTRIBUTOR,ISNULL(BR.ACTUAL_GROUP,0) AS ACTUAL_GROUP,
                ISNULL(BR.ACTUAL_GROUP,0) - ABI.TARGET_Q1 AS LEFT_QTY FROM AGREE_BRAND_INCLUDE ABI INNER JOIN BRND_BRAND BR_1
		ON ABI.BRAND_ID = BR_1.BRAND_ID 
        	LEFT OUTER JOIN(
	                        SELECT ABI_1.AGREE_BRAND_ID,ISNULL(SUM(OPO.ACTUAL),0)AS ACTUAL,ISNULL(SUM(OPO_1.ACTUAL_GROUP),0) AS ACTUAL_GROUP FROM AGREE_BRANDPACK_INCLUDE ABI_1
	                        INNER JOIN(
			                   SELECT ABI_2.AGREE_BRANDPACK_ID,ISNULL(SUM(OPB.PO_ORIGINAL_QTY),0) AS ACTUAL FROM ORDR_PO_BRANDPACK OPB INNER JOIN AGREE_BRANDPACK_INCLUDE ABI_2
	                                   ON ABI_2.BRANDPACK_ID = OPB.BRANDPACK_ID 
	                                   INNER JOIN ORDR_PURCHASE_ORDER OPO ON OPB.PO_REF_NO = OPO.PO_REF_NO
                                           WHERE OPO.PO_REF_DATE <= @V_END_DATE_Q2 AND OPO.PO_REF_DATE >= @V_START_DATE_Q2 AND OPO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
				           AND ABI_2.AGREEMENT_NO = @AGREEMENT_NO
	                                    GROUP BY ABI_2.AGREE_BRANDPACK_ID
                                           )OPO 
                                            ON OPO.AGREE_BRANDPACK_ID = ABI_1.AGREE_BRANDPACK_ID  
			         INNER JOIN(
			                   SELECT ABI_2.AGREE_BRANDPACK_ID,ISNULL(SUM(OPB.PO_ORIGINAL_QTY),0) AS ACTUAL_GROUP FROM ORDR_PO_BRANDPACK OPB INNER JOIN AGREE_BRANDPACK_INCLUDE ABI_2
	                                   ON ABI_2.BRANDPACK_ID = OPB.BRANDPACK_ID 
	                                   INNER JOIN ORDR_PURCHASE_ORDER OPO ON OPB.PO_REF_NO = OPO.PO_REF_NO
                                           WHERE OPO.PO_REF_DATE <= @V_END_DATE_Q2 AND OPO.PO_REF_DATE >= @V_START_DATE_Q2 AND 
					   OPO.DISTRIBUTOR_ID IN(SELECT DISTRIBUTOR_ID FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO)
				           AND ABI_2.AGREEMENT_NO = @AGREEMENT_NO
	                                    GROUP BY ABI_2.AGREE_BRANDPACK_ID
                                           )OPO_1 
                                          ON OPO_1.AGREE_BRANDPACK_ID = ABI_1.AGREE_BRANDPACK_ID  
                                  GROUP BY ABI_1.AGREE_BRAND_ID  					    
                        	 )BR	
                                ON BR.AGREE_BRAND_ID = ABI.AGREE_BRAND_ID 
		WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO 
            END
	PRINT ' @V_START_DATE_Q2 = ' + CAST((@V_START_DATE_Q2)AS VARCHAR(30))
	PRINT ' @V_END_DATE_Q2 = ' + CAST((@V_END_DATE_Q2)AS VARCHAR(30))
   END
ELSE IF(@FLAG = 'Q3')
   BEGIN
	SET @V_LONG_DATE = @V_SUMDAYS/4
	DECLARE @V_START_DATEQ2 DATETIME,@V_START_DATE_Q3 DATETIME,@V_END_DATE_Q3 DATETIME
	SET @V_START_DATEQ2 = (SELECT DATEADD(DAY,@V_LONG_DATE,@V_START_DATE)) 
	SET @V_START_DATE_Q3 = (SELECT DATEADD(DAY,91, @V_START_DATEQ2)) 
	SET @V_END_DATE_Q3 = (SELECT DATEADD(DAY,90,@V_START_DATE_Q3))
	IF (SELECT COUNT (DISTRIBUTOR_ID) FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO) <= 1
	    BEGIN
		SELECT ABI.BRAND_ID,BR_1.BRAND_NAME,ABI.TARGET_Q3,TARGET_GROUP = 'NO',ISNULL(BR.ACTUAL,0)AS ACTUAL,ISNULL(BR.ACTUAL,0) - ABI.TARGET_Q1 AS LEFT_QTY FROM AGREE_BRAND_INCLUDE ABI INNER JOIN BRND_BRAND BR_1
		ON ABI.BRAND_ID = BR_1.BRAND_ID 
        	LEFT OUTER JOIN(
	                        SELECT ABI_1.AGREE_BRAND_ID,ISNULL(SUM(OPO.ACTUAL),0)AS ACTUAL FROM AGREE_BRANDPACK_INCLUDE ABI_1
	                        INNER JOIN(
			                   SELECT ABI_2.AGREE_BRANDPACK_ID,ISNULL(SUM(OPB.PO_ORIGINAL_QTY),0) AS ACTUAL FROM ORDR_PO_BRANDPACK OPB INNER JOIN AGREE_BRANDPACK_INCLUDE ABI_2
	                                   ON ABI_2.BRANDPACK_ID = OPB.BRANDPACK_ID 
	                                   INNER JOIN ORDR_PURCHASE_ORDER OPO ON OPB.PO_REF_NO = OPO.PO_REF_NO
                                           WHERE OPO.PO_REF_DATE <= @V_END_DATE_Q3 AND OPO.PO_REF_DATE >= @V_START_DATE_Q3
	                                   AND ABI_2.AGREEMENT_NO = @AGREEMENT_NO AND OPO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID GROUP BY ABI_2.AGREE_BRANDPACK_ID 
                                           )OPO 
			                    ON OPO.AGREE_BRANDPACK_ID = ABI_1.AGREE_BRANDPACK_ID  GROUP BY ABI_1.AGREE_BRAND_ID
            		       )BR	
                                ON BR.AGREE_BRAND_ID = ABI.AGREE_BRAND_ID 
		WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO 
	    END
	 ELSE
	    BEGIN
		SELECT ABI.BRAND_ID,BR_1.BRAND_NAME,ABI.TARGET_Q3,TARGET_GROUP = 'YESS',ISNULL(BR.ACTUAL,0)AS ACTUAL_DISTRIBUTOR,ISNULL(BR.ACTUAL_GROUP,0) AS ACTUAL_GROUP,
                ISNULL(BR.ACTUAL_GROUP,0) - ABI.TARGET_Q1 AS LEFT_QTY FROM AGREE_BRAND_INCLUDE ABI INNER JOIN BRND_BRAND BR_1
		ON ABI.BRAND_ID = BR_1.BRAND_ID 
        	LEFT OUTER JOIN(
	                        SELECT ABI_1.AGREE_BRAND_ID,ISNULL(SUM(OPO.ACTUAL),0)AS ACTUAL,ISNULL(SUM(OPO_1.ACTUAL_GROUP),0) AS ACTUAL_GROUP FROM AGREE_BRANDPACK_INCLUDE ABI_1
	                        INNER JOIN(
			                   SELECT ABI_2.AGREE_BRANDPACK_ID,ISNULL(SUM(OPB.PO_ORIGINAL_QTY),0) AS ACTUAL FROM ORDR_PO_BRANDPACK OPB INNER JOIN AGREE_BRANDPACK_INCLUDE ABI_2
	                                   ON ABI_2.BRANDPACK_ID = OPB.BRANDPACK_ID 
	                                   INNER JOIN ORDR_PURCHASE_ORDER OPO ON OPB.PO_REF_NO = OPO.PO_REF_NO
                                           WHERE OPO.PO_REF_DATE <= @V_END_DATE_Q3 AND OPO.PO_REF_DATE >= @V_START_DATE_Q3 AND OPO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
				           AND ABI_2.AGREEMENT_NO = @AGREEMENT_NO
	                                    GROUP BY ABI_2.AGREE_BRANDPACK_ID
                                           )OPO 
                                            ON OPO.AGREE_BRANDPACK_ID = ABI_1.AGREE_BRANDPACK_ID  
			         INNER JOIN(
			                   SELECT ABI_2.AGREE_BRANDPACK_ID,ISNULL(SUM(OPB.PO_ORIGINAL_QTY),0) AS ACTUAL_GROUP FROM ORDR_PO_BRANDPACK OPB INNER JOIN AGREE_BRANDPACK_INCLUDE ABI_2
	                                   ON ABI_2.BRANDPACK_ID = OPB.BRANDPACK_ID 
	                                   INNER JOIN ORDR_PURCHASE_ORDER OPO ON OPB.PO_REF_NO = OPO.PO_REF_NO
                                           WHERE OPO.PO_REF_DATE <= @V_END_DATE_Q3 AND OPO.PO_REF_DATE >= @V_START_DATE_Q3 AND 
					   OPO.DISTRIBUTOR_ID IN(SELECT DISTRIBUTOR_ID FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO)
				           AND ABI_2.AGREEMENT_NO = @AGREEMENT_NO
	                                    GROUP BY ABI_2.AGREE_BRANDPACK_ID
                                           )OPO_1 
                                          ON OPO_1.AGREE_BRANDPACK_ID = ABI_1.AGREE_BRANDPACK_ID  
                                  GROUP BY ABI_1.AGREE_BRAND_ID  					    
                        	 )BR	
                                ON BR.AGREE_BRAND_ID = ABI.AGREE_BRAND_ID 
		WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO 
            END
	PRINT ' @V_START_DATE_Q3 = ' + CAST((@V_START_DATE_Q3)AS VARCHAR(30))
	PRINT ' @V_END_DATE_Q3 = ' + CAST((@V_END_DATE_Q3)AS VARCHAR(30))
   END
ELSE IF (@FLAG = 'Q4')
   BEGIN
	SET @V_LONG_DATE = @V_SUMDAYS/4
	DECLARE @V_START_Q2 DATETIME,@V_START_DATE_Q4 DATETIME,@V_END_DATE_Q4 DATETIME,@V_START_DATEQ3 DATETIME
	SET @V_START_Q2 = (SELECT DATEADD(DAY,@V_LONG_DATE,@V_START_DATE)) 
	SET @V_START_DATEQ3 = (SELECT DATEADD(DAY,91, @V_START_Q2)) 
	SET @V_START_DATE_Q4 = (SELECT DATEADD(DAY,91,@V_START_DATEQ3)) 
	SET @V_END_DATE_Q4 = (SELECT END_DATE FROM AGREE_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO )
	IF (SELECT COUNT (DISTRIBUTOR_ID) FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO) <= 1
	    BEGIN
		SELECT ABI.BRAND_ID,BR_1.BRAND_NAME,ABI.TARGET_Q4,TARGET_GROUP = 'NO',ISNULL(BR.ACTUAL,0)AS ACTUAL,ISNULL(BR.ACTUAL,0) - ABI.TARGET_Q1 AS LEFT_QTY FROM AGREE_BRAND_INCLUDE ABI INNER JOIN BRND_BRAND BR_1
		ON ABI.BRAND_ID = BR_1.BRAND_ID 
        	LEFT OUTER JOIN(
	                        SELECT ABI_1.AGREE_BRAND_ID,ISNULL(SUM(OPO.ACTUAL),0)AS ACTUAL FROM AGREE_BRANDPACK_INCLUDE ABI_1
	                        INNER JOIN(
			                   SELECT ABI_2.AGREE_BRANDPACK_ID,ISNULL(SUM(OPB.PO_ORIGINAL_QTY),0) AS ACTUAL FROM ORDR_PO_BRANDPACK OPB INNER JOIN AGREE_BRANDPACK_INCLUDE ABI_2
	                                   ON ABI_2.BRANDPACK_ID = OPB.BRANDPACK_ID 
	                                   INNER JOIN ORDR_PURCHASE_ORDER OPO ON OPB.PO_REF_NO = OPO.PO_REF_NO
                                           WHERE OPO.PO_REF_DATE <= @V_END_DATE_Q4 AND OPO.PO_REF_DATE >= @V_START_DATE_Q4
	                                   AND ABI_2.AGREEMENT_NO = @AGREEMENT_NO AND OPO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID GROUP BY ABI_2.AGREE_BRANDPACK_ID 
                                           )OPO 
			                    ON OPO.AGREE_BRANDPACK_ID = ABI_1.AGREE_BRANDPACK_ID  GROUP BY ABI_1.AGREE_BRAND_ID
            		       )BR	
                                ON BR.AGREE_BRAND_ID = ABI.AGREE_BRAND_ID 
		WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO 
	    END
	 ELSE
	    BEGIN
		SELECT ABI.BRAND_ID,BR_1.BRAND_NAME,ABI.TARGET_Q4,TARGET_GROUP = 'YESS',ISNULL(BR.ACTUAL,0)AS ACTUAL_DISTRIBUTOR,ISNULL(BR.ACTUAL_GROUP,0) AS ACTUAL_GROUP,
                ISNULL(BR.ACTUAL_GROUP,0) - ABI.TARGET_Q1 AS LEFT_QTY FROM AGREE_BRAND_INCLUDE ABI INNER JOIN BRND_BRAND BR_1
		ON ABI.BRAND_ID = BR_1.BRAND_ID 
        	LEFT OUTER JOIN(
	                        SELECT ABI_1.AGREE_BRAND_ID,ISNULL(SUM(OPO.ACTUAL),0)AS ACTUAL,ISNULL(SUM(OPO_1.ACTUAL_GROUP),0) AS ACTUAL_GROUP FROM AGREE_BRANDPACK_INCLUDE ABI_1
	                        INNER JOIN(
			                   SELECT ABI_2.AGREE_BRANDPACK_ID,ISNULL(SUM(OPB.PO_ORIGINAL_QTY),0) AS ACTUAL FROM ORDR_PO_BRANDPACK OPB INNER JOIN AGREE_BRANDPACK_INCLUDE ABI_2
	                                   ON ABI_2.BRANDPACK_ID = OPB.BRANDPACK_ID 
	                                   INNER JOIN ORDR_PURCHASE_ORDER OPO ON OPB.PO_REF_NO = OPO.PO_REF_NO
                                           WHERE OPO.PO_REF_DATE <= @V_END_DATE_Q4 AND OPO.PO_REF_DATE >= @V_START_DATE_Q4 AND OPO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
				           AND ABI_2.AGREEMENT_NO = @AGREEMENT_NO
	                                    GROUP BY ABI_2.AGREE_BRANDPACK_ID
                                           )OPO 
                                            ON OPO.AGREE_BRANDPACK_ID = ABI_1.AGREE_BRANDPACK_ID  
			         INNER JOIN(
			                   SELECT ABI_2.AGREE_BRANDPACK_ID,ISNULL(SUM(OPB.PO_ORIGINAL_QTY),0) AS ACTUAL_GROUP FROM ORDR_PO_BRANDPACK OPB INNER JOIN AGREE_BRANDPACK_INCLUDE ABI_2
	                                   ON ABI_2.BRANDPACK_ID = OPB.BRANDPACK_ID 
	                                   INNER JOIN ORDR_PURCHASE_ORDER OPO ON OPB.PO_REF_NO = OPO.PO_REF_NO
                                           WHERE OPO.PO_REF_DATE <= @V_END_DATE_Q4 AND OPO.PO_REF_DATE >= @V_START_DATE_Q4 AND 
					   OPO.DISTRIBUTOR_ID IN(SELECT DISTRIBUTOR_ID FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO)
				           AND ABI_2.AGREEMENT_NO = @AGREEMENT_NO
	                                    GROUP BY ABI_2.AGREE_BRANDPACK_ID
                                           )OPO_1 
                                          ON OPO_1.AGREE_BRANDPACK_ID = ABI_1.AGREE_BRANDPACK_ID  
                                  GROUP BY ABI_1.AGREE_BRAND_ID  					    
                        	 )BR	
                                ON BR.AGREE_BRAND_ID = ABI.AGREE_BRAND_ID 
		WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO 
            END

	PRINT ' @V_START_DATE_Q4 = ' + CAST((@V_START_DATE_Q4)AS VARCHAR(30))
	PRINT ' @V_END_DATE_Q4 = ' + CAST((@V_END_DATE_Q4)AS VARCHAR(30))
   END
ELSE IF(@FLAG = 'S1')
     BEGIN
	SET @V_LONG_DATE = @V_SUMDAYS/2
	DECLARE @V_START_DATE_S1 DATETIME,@V_END_DATE_S1 DATETIME
	SET @V_START_DATE_S1 = @V_START_DATE
	SET @V_END_DATE_S1 = (SELECT DATEADD(DAY,@V_LONG_DATE - 1,@V_START_DATE_S1))
	PRINT ' @V_START_DATE_S1 = ' + CAST((@V_START_DATE_S1)AS VARCHAR(30))
	PRINT ' @V_END_DATE_S1 = ' + CAST((@V_END_DATE_S1)AS VARCHAR(30))
	IF (SELECT COUNT (DISTRIBUTOR_ID) FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO) <= 1
	    BEGIN
		SELECT ABI.BRAND_ID,BR_1.BRAND_NAME,ABI.TARGET_S1,TARGET_GROUP = 'NO',ISNULL(BR.ACTUAL,0)AS ACTUAL,ISNULL(BR.ACTUAL,0) - ABI.TARGET_Q1 AS LEFT_QTY FROM AGREE_BRAND_INCLUDE ABI INNER JOIN BRND_BRAND BR_1
		ON ABI.BRAND_ID = BR_1.BRAND_ID 
        	LEFT OUTER JOIN(
	                        SELECT ABI_1.AGREE_BRAND_ID,ISNULL(SUM(OPO.ACTUAL),0)AS ACTUAL FROM AGREE_BRANDPACK_INCLUDE ABI_1
	                        INNER JOIN(
			                   SELECT ABI_2.AGREE_BRANDPACK_ID,ISNULL(SUM(OPB.PO_ORIGINAL_QTY),0) AS ACTUAL FROM ORDR_PO_BRANDPACK OPB INNER JOIN AGREE_BRANDPACK_INCLUDE ABI_2
	                                   ON ABI_2.BRANDPACK_ID = OPB.BRANDPACK_ID 
	                                   INNER JOIN ORDR_PURCHASE_ORDER OPO ON OPB.PO_REF_NO = OPO.PO_REF_NO
                                           WHERE OPO.PO_REF_DATE <= @V_END_DATE_S1 AND OPO.PO_REF_DATE >= @V_START_DATE_S1
	                                   AND ABI_2.AGREEMENT_NO = @AGREEMENT_NO AND OPO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID GROUP BY ABI_2.AGREE_BRANDPACK_ID 
                                           )OPO 
			                    ON OPO.AGREE_BRANDPACK_ID = ABI_1.AGREE_BRANDPACK_ID  GROUP BY ABI_1.AGREE_BRAND_ID
            		       )BR	
                                ON BR.AGREE_BRAND_ID = ABI.AGREE_BRAND_ID 
		WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO 
	    END
	 ELSE
	    BEGIN
		SELECT ABI.BRAND_ID,BR_1.BRAND_NAME,ABI.TARGET_S1,TARGET_GROUP = 'YESS',ISNULL(BR.ACTUAL,0)AS ACTUAL_DISTRIBUTOR,ISNULL(BR.ACTUAL_GROUP,0) AS ACTUAL_GROUP,
                ISNULL(BR.ACTUAL_GROUP,0) - ABI.TARGET_Q1 AS LEFT_QTY FROM AGREE_BRAND_INCLUDE ABI INNER JOIN BRND_BRAND BR_1
		ON ABI.BRAND_ID = BR_1.BRAND_ID 
        	LEFT OUTER JOIN(
	                        SELECT ABI_1.AGREE_BRAND_ID,ISNULL(SUM(OPO.ACTUAL),0)AS ACTUAL,ISNULL(SUM(OPO_1.ACTUAL_GROUP),0) AS ACTUAL_GROUP FROM AGREE_BRANDPACK_INCLUDE ABI_1
	                        INNER JOIN(
			                   SELECT ABI_2.AGREE_BRANDPACK_ID,ISNULL(SUM(OPB.PO_ORIGINAL_QTY),0) AS ACTUAL FROM ORDR_PO_BRANDPACK OPB INNER JOIN AGREE_BRANDPACK_INCLUDE ABI_2
	                                   ON ABI_2.BRANDPACK_ID = OPB.BRANDPACK_ID 
	                                   INNER JOIN ORDR_PURCHASE_ORDER OPO ON OPB.PO_REF_NO = OPO.PO_REF_NO
                                           WHERE OPO.PO_REF_DATE <= @V_END_DATE_S1 AND OPO.PO_REF_DATE >= @V_START_DATE_S1 AND OPO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
				           AND ABI_2.AGREEMENT_NO = @AGREEMENT_NO
	                                    GROUP BY ABI_2.AGREE_BRANDPACK_ID
                                           )OPO 
                                            ON OPO.AGREE_BRANDPACK_ID = ABI_1.AGREE_BRANDPACK_ID  
			         INNER JOIN(
			                   SELECT ABI_2.AGREE_BRANDPACK_ID,ISNULL(SUM(OPB.PO_ORIGINAL_QTY),0) AS ACTUAL_GROUP FROM ORDR_PO_BRANDPACK OPB INNER JOIN AGREE_BRANDPACK_INCLUDE ABI_2
	                                   ON ABI_2.BRANDPACK_ID = OPB.BRANDPACK_ID 
	                                   INNER JOIN ORDR_PURCHASE_ORDER OPO ON OPB.PO_REF_NO = OPO.PO_REF_NO
                                           WHERE OPO.PO_REF_DATE <= @V_END_DATE_S1 AND OPO.PO_REF_DATE >= @V_START_DATE_S1 AND 
					   OPO.DISTRIBUTOR_ID IN(SELECT DISTRIBUTOR_ID FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO)
				           AND ABI_2.AGREEMENT_NO = @AGREEMENT_NO
	                                    GROUP BY ABI_2.AGREE_BRANDPACK_ID
                                           )OPO_1 
                                          ON OPO_1.AGREE_BRANDPACK_ID = ABI_1.AGREE_BRANDPACK_ID  
                                  GROUP BY ABI_1.AGREE_BRAND_ID  					    
                        	 )BR	
                                ON BR.AGREE_BRAND_ID = ABI.AGREE_BRAND_ID 
		WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO 
            END
	
     END
ELSE IF (@FLAG = 'S2')
     BEGIN
	SET @V_LONG_DATE = @V_SUMDAYS/2
	DECLARE @V_START_DATE_S2 DATETIME,@V_END_DATE_S2 DATETIME
	SET @V_START_DATE_S2 = (SELECT DATEADD(DAY,@V_LONG_DATE,@V_START_DATE)) 
	SET @V_END_DATE_S2 = (SELECT END_DATE FROM AGREE_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO)
	PRINT ' @V_START_DATE_S2 = ' + CAST((@V_START_DATE_S2)AS VARCHAR(30))
	PRINT ' @V_END_DATE_S2 = ' + CAST((@V_END_DATE_S2)AS VARCHAR(30))
	IF (SELECT COUNT (DISTRIBUTOR_ID) FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO) <= 1
	    BEGIN
		SELECT ABI.BRAND_ID,BR_1.BRAND_NAME,ABI.TARGET_S2,TARGET_GROUP = 'NO',ISNULL(BR.ACTUAL,0)AS ACTUAL,ISNULL(BR.ACTUAL,0) - ABI.TARGET_Q1 AS LEFT_QTY FROM AGREE_BRAND_INCLUDE ABI INNER JOIN BRND_BRAND BR_1
		ON ABI.BRAND_ID = BR_1.BRAND_ID 
        	LEFT OUTER JOIN(
	                        SELECT ABI_1.AGREE_BRAND_ID,ISNULL(SUM(OPO.ACTUAL),0)AS ACTUAL FROM AGREE_BRANDPACK_INCLUDE ABI_1
	                        INNER JOIN(
			                   SELECT ABI_2.AGREE_BRANDPACK_ID,ISNULL(SUM(OPB.PO_ORIGINAL_QTY),0) AS ACTUAL FROM ORDR_PO_BRANDPACK OPB INNER JOIN AGREE_BRANDPACK_INCLUDE ABI_2
	                                   ON ABI_2.BRANDPACK_ID = OPB.BRANDPACK_ID 
	                                   INNER JOIN ORDR_PURCHASE_ORDER OPO ON OPB.PO_REF_NO = OPO.PO_REF_NO
                                           WHERE OPO.PO_REF_DATE <= @V_END_DATE_S2 AND OPO.PO_REF_DATE >= @V_START_DATE_S2
	                                   AND ABI_2.AGREEMENT_NO = @AGREEMENT_NO AND OPO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID GROUP BY ABI_2.AGREE_BRANDPACK_ID 
                                           )OPO 
			                    ON OPO.AGREE_BRANDPACK_ID = ABI_1.AGREE_BRANDPACK_ID  GROUP BY ABI_1.AGREE_BRAND_ID
            		       )BR	
                                ON BR.AGREE_BRAND_ID = ABI.AGREE_BRAND_ID 
		WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO 
	    END
	 ELSE
	    BEGIN
		SELECT ABI.BRAND_ID,BR_1.BRAND_NAME,ABI.TARGET_S2,TARGET_GROUP = 'YESS',ISNULL(BR.ACTUAL,0)AS ACTUAL_DISTRIBUTOR,ISNULL(BR.ACTUAL_GROUP,0) AS ACTUAL_GROUP,
                ISNULL(BR.ACTUAL_GROUP,0) - ABI.TARGET_Q1 AS LEFT_QTY FROM AGREE_BRAND_INCLUDE ABI INNER JOIN BRND_BRAND BR_1
		ON ABI.BRAND_ID = BR_1.BRAND_ID 
        	LEFT OUTER JOIN(
	                        SELECT ABI_1.AGREE_BRAND_ID,ISNULL(SUM(OPO.ACTUAL),0)AS ACTUAL,ISNULL(SUM(OPO_1.ACTUAL_GROUP),0) AS ACTUAL_GROUP FROM AGREE_BRANDPACK_INCLUDE ABI_1
	                        INNER JOIN(
			                   SELECT ABI_2.AGREE_BRANDPACK_ID,ISNULL(SUM(OPB.PO_ORIGINAL_QTY),0) AS ACTUAL FROM ORDR_PO_BRANDPACK OPB INNER JOIN AGREE_BRANDPACK_INCLUDE ABI_2
	                                   ON ABI_2.BRANDPACK_ID = OPB.BRANDPACK_ID 
	                                   INNER JOIN ORDR_PURCHASE_ORDER OPO ON OPB.PO_REF_NO = OPO.PO_REF_NO
                                           WHERE OPO.PO_REF_DATE <= @V_END_DATE_S2 AND OPO.PO_REF_DATE >= @V_START_DATE_S2 AND OPO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
				           AND ABI_2.AGREEMENT_NO = @AGREEMENT_NO
	                                    GROUP BY ABI_2.AGREE_BRANDPACK_ID
                                           )OPO 
                                            ON OPO.AGREE_BRANDPACK_ID = ABI_1.AGREE_BRANDPACK_ID  
			         INNER JOIN(
			                   SELECT ABI_2.AGREE_BRANDPACK_ID,ISNULL(SUM(OPB.PO_ORIGINAL_QTY),0) AS ACTUAL_GROUP FROM ORDR_PO_BRANDPACK OPB INNER JOIN AGREE_BRANDPACK_INCLUDE ABI_2
	                                   ON ABI_2.BRANDPACK_ID = OPB.BRANDPACK_ID 
	                                   INNER JOIN ORDR_PURCHASE_ORDER OPO ON OPB.PO_REF_NO = OPO.PO_REF_NO
                                           WHERE OPO.PO_REF_DATE <= @V_END_DATE_S2 AND OPO.PO_REF_DATE >= @V_START_DATE_S2 AND 
					   OPO.DISTRIBUTOR_ID IN(SELECT DISTRIBUTOR_ID FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO)
				           AND ABI_2.AGREEMENT_NO = @AGREEMENT_NO
	                                    GROUP BY ABI_2.AGREE_BRANDPACK_ID
                                           )OPO_1 
                                          ON OPO_1.AGREE_BRANDPACK_ID = ABI_1.AGREE_BRANDPACK_ID  
                                  GROUP BY ABI_1.AGREE_BRAND_ID  					    
                        	 )BR	
                                ON BR.AGREE_BRAND_ID = ABI.AGREE_BRAND_ID 
		WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO 
            END
     END
ELSE IF(@FLAG = 'Y')
     BEGIN
	DECLARE @V_END_DATE DATETIME
	SET @V_END_DATE = (SELECT END_DATE FROM AGREE_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO)
 	   IF (SELECT COUNT (DISTRIBUTOR_ID) FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO) <= 1
	    BEGIN
		SELECT ABI.BRAND_ID,BR_1.BRAND_NAME,ABI.TARGET_Q1 + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4
                + ABI.TARGET_S1 + ABI.TARGET_S2 AS TARGET_YEAR,TARGET_GROUP = 'NO',ISNULL(BR.ACTUAL,0)AS ACTUAL,ISNULL(BR.ACTUAL,0) - ABI.TARGET_Q1 AS LEFT_QTY FROM AGREE_BRAND_INCLUDE ABI INNER JOIN BRND_BRAND BR_1
		ON ABI.BRAND_ID = BR_1.BRAND_ID 
        	LEFT OUTER JOIN(
	                        SELECT ABI_1.AGREE_BRAND_ID,ISNULL(SUM(OPO.ACTUAL),0)AS ACTUAL FROM AGREE_BRANDPACK_INCLUDE ABI_1
	                        INNER JOIN(
			                   SELECT ABI_2.AGREE_BRANDPACK_ID,ISNULL(SUM(OPB.PO_ORIGINAL_QTY),0) AS ACTUAL FROM ORDR_PO_BRANDPACK OPB INNER JOIN AGREE_BRANDPACK_INCLUDE ABI_2
	                                   ON ABI_2.BRANDPACK_ID = OPB.BRANDPACK_ID 
	                                   INNER JOIN ORDR_PURCHASE_ORDER OPO ON OPB.PO_REF_NO = OPO.PO_REF_NO
                                           WHERE OPO.PO_REF_DATE <= @V_END_DATE AND OPO.PO_REF_DATE >= @V_START_DATE
	                                   AND ABI_2.AGREEMENT_NO = @AGREEMENT_NO AND OPO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID GROUP BY ABI_2.AGREE_BRANDPACK_ID 
                                           )OPO 
			                    ON OPO.AGREE_BRANDPACK_ID = ABI_1.AGREE_BRANDPACK_ID  GROUP BY ABI_1.AGREE_BRAND_ID
            		       )BR	
                                ON BR.AGREE_BRAND_ID = ABI.AGREE_BRAND_ID 
		WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO 
	    END
	 ELSE
	    BEGIN
		SELECT ABI.BRAND_ID,BR_1.BRAND_NAME,ABI.TARGET_Q1 + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4
                + ABI.TARGET_S1 + ABI.TARGET_S2 AS TARGET_YEAR,TARGET_GROUP = 'YESS',ISNULL(BR.ACTUAL,0)AS ACTUAL_DISTRIBUTOR,ISNULL(BR.ACTUAL_GROUP,0) AS ACTUAL_GROUP,
                ISNULL(BR.ACTUAL_GROUP,0) - (ABI.TARGET_Q1 + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4
                + ABI.TARGET_S1 + ABI.TARGET_S2) AS LEFT_QTY FROM AGREE_BRAND_INCLUDE ABI INNER JOIN BRND_BRAND BR_1
		ON ABI.BRAND_ID = BR_1.BRAND_ID 
        	LEFT OUTER JOIN(
	                        SELECT ABI_1.AGREE_BRAND_ID,ISNULL(SUM(OPO.ACTUAL),0)AS ACTUAL,ISNULL(SUM(OPO_1.ACTUAL_GROUP),0) AS ACTUAL_GROUP FROM AGREE_BRANDPACK_INCLUDE ABI_1
	                        INNER JOIN(
			                   SELECT ABI_2.AGREE_BRANDPACK_ID,ISNULL(SUM(OPB.PO_ORIGINAL_QTY),0) AS ACTUAL FROM ORDR_PO_BRANDPACK OPB INNER JOIN AGREE_BRANDPACK_INCLUDE ABI_2
	                                   ON ABI_2.BRANDPACK_ID = OPB.BRANDPACK_ID 
	                                   INNER JOIN ORDR_PURCHASE_ORDER OPO ON OPB.PO_REF_NO = OPO.PO_REF_NO
                                           WHERE OPO.PO_REF_DATE <= @V_END_DATE AND OPO.PO_REF_DATE >= @V_START_DATE AND OPO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
				           AND ABI_2.AGREEMENT_NO = @AGREEMENT_NO
	                                    GROUP BY ABI_2.AGREE_BRANDPACK_ID
                                           )OPO 
                                            ON OPO.AGREE_BRANDPACK_ID = ABI_1.AGREE_BRANDPACK_ID  
			         INNER JOIN(
			                   SELECT ABI_2.AGREE_BRANDPACK_ID,ISNULL(SUM(OPB.PO_ORIGINAL_QTY),0) AS ACTUAL_GROUP FROM ORDR_PO_BRANDPACK OPB INNER JOIN AGREE_BRANDPACK_INCLUDE ABI_2
	                                   ON ABI_2.BRANDPACK_ID = OPB.BRANDPACK_ID 
	                                   INNER JOIN ORDR_PURCHASE_ORDER OPO ON OPB.PO_REF_NO = OPO.PO_REF_NO
                                           WHERE OPO.PO_REF_DATE <= @V_END_DATE AND OPO.PO_REF_DATE >= @V_START_DATE AND 
					   OPO.DISTRIBUTOR_ID IN(SELECT DISTRIBUTOR_ID FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO)
				           AND ABI_2.AGREEMENT_NO = @AGREEMENT_NO
	                                    GROUP BY ABI_2.AGREE_BRANDPACK_ID
                                           )OPO_1 
                                          ON OPO_1.AGREE_BRANDPACK_ID = ABI_1.AGREE_BRANDPACK_ID  
                                  GROUP BY ABI_1.AGREE_BRAND_ID  					    
                        	 )BR	
                                ON BR.AGREE_BRAND_ID = ABI.AGREE_BRAND_ID 
		WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO 
            END

	PRINT '@V_START_DATE = ' + CAST((@V_START_DATE)AS VARCHAR(30))
	PRINT '@V_END_DATE = ' + CAST((@V_END_DATE)AS VARCHAR(30))
     END
GO

IF EXISTS(SELECT NAME FROM Nufarm.Sys.Objects WHERE NAME = 'Usp_GetView_Actice_PO' AND TYPE = 'P')
DROP PROCEDURE Usp_GetView_Actice_PO
GO
CREATE PROCEDURE Usp_GetView_Actice_PO
@DISTRIBUTOR_ID VARCHAR(10)
AS
SET NOCOUNT ON;
DECLARE @ParamValue INT;
--MSC0002 = Setting berapa bulan PO dapat di cancel terhitung dari tanggal PO
SELECT @ParamValue = CAST((SELECT ParamValue FROM RefBussinesRules WHERE CodeApp = 'MSC0002')AS INT);
SELECT OPO.DISTRIBUTOR_ID,DTR.DISTRIBUTOR_NAME,OPO.PO_REF_NO,OPO.PO_REF_DATE,
OPB.PO_BRANDPACK_ID,PO_ORIGINAL_QTY,BRN.BRANDPACK_NAME,	[REASON] = '' FROM DIST_DISTRIBUTOR DTR
INNER JOIN ORDR_PURCHASE_ORDER OPO ON OPO.DISTRIBUTOR_ID = DTR.DISTRIBUTOR_ID
INNER JOIN ORDR_PO_BRANDPACK OPB ON OPO.PO_REF_NO = OPB.PO_REF_NO
INNER JOIN BRND_BRANDPACK BRN ON OPB.BRANDPACK_ID = BRN.BRANDPACK_ID
WHERE OPO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID AND DATEDIFF(MONTH,OPO.PO_REF_DATE,GETDATE()) <= @ParamValue
AND OPB.PO_ORIGINAL_QTY > 0;
GO
----------------------------------------------------------------------------------------------------
--IF EXISTS(SELECT NAME FROM Nufarm.Sys.Objects WHERE NAME = 'Usp_Check_Availability_Disc_Sales' AND TYPE = 'P')
--BEGIN
--DROP PROCEDURE Usp_Check_Availability_Disc_Sales ;
--END
--GO
--CREATE PROCEDURE Usp_Check_Availability_Disc_Sales
--@DISTRIBUTOR_ID VARCHAR(10),
--@BRANDPACK_ID VARCHAR(14),
--@O_DEVIDED_QTY DECIMAL(18,3) OUTPUT,
--@O_DEVIDE_FACTOR DECIMAL(18,3) OUTPUT,
--@PO_DATE SMALLDATETIME,
--@O_UNIT VARCHAR(15) OUTPUT,
--@O_COUNTMG BIT OUTPUT,
--@O_COUNTCPR BIT OUTPUT,
--@O_COUNTCPD BIT OUTPUT,
--@O_COUNTCPSD BIT OUTPUT,
--@O_COUNTKP BIT OUTPUT,
--@O_COUNTDK BIT OUTPUT,
--@O_CountCPSD_TM BIT OUTPUT,
--@O_CountCPD_TM BIT OUTPUT,
--@O_CountCPMRT_TM BIT OUTPUT,
--@O_CountCPMRT_D BIT OUTPUT
--AS 
--SET NOCOUNT ON;
--SELECT @O_DEVIDED_QTY = (SELECT DEVIDED_QUANTITY FROM BRND_BRANDPACK WHERE BRANDPACK_ID = @BRANDPACK_ID );
--SELECT @O_DEVIDE_FACTOR = (SELECT TOP 1 DEVIDE_FACTOR FROM BRND_PACK WHERE PACK_ID = (SELECT TOP 1 PACK_ID FROM BRND_BRANDPACK 
--						   WHERE BRANDPACK_ID = @BRANDPACK_ID));
--SELECT @O_UNIT = (SELECT UNIT FROM BRND_BRANDPACK WHERE BRANDPACK_ID = @BRANDPACK_ID );
--
--IF OBJECT_ID('tempdb..#T_MRKT') IS NOT NULL
--BEGIN DROP TABLE #T_MRKT; END
--
--SELECT MBD.ISRPK,MBD.GIVEN_DISC_PCT,MBD.ISPKPP,MBD.ISDK,MBD.ISCPR,MBD.ISCP,MBD.ISSCPD,MBD.ISCPMRT,MBD.IS_T_TM_DIST,MBD.ISHK INTO #T_MRKT
--FROM MRKT_BRANDPACK_DISTRIBUTOR MBD INNER JOIN MRKT_BRANDPACK MB ON MBD.PROG_BRANDPACK_ID = MB.PROG_BRANDPACK_ID
--WHERE MBD.START_DATE <= @PO_DATE AND MBD.END_DATE >= @PO_DATE AND MBD.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
--AND MBD.BONUS_VALUE = 0
--AND MB.BRANDPACK_ID = @BRANDPACK_ID;
--
--SELECT @O_COUNTMG = ISNULL((SELECT 1 WHERE EXISTS(SELECT TOP 1 ISRPK,GIVEN_DISC_PCT FROM #T_MRKT WHERE (ISPKPP = 0
--                    AND ISDK = 0 AND ISCPR = 0 AND ISCP = 0 AND ISHK = 0))),0) OPTION(KEEP PLAN);
--SELECT @O_COUNTCPR = ISNULL((SELECT 1 WHERE EXISTS(SELECT TOP 1 ISCPR FROM #T_MRKT WHERE ISCPR = 1)),0);
--
--SELECT @O_COUNTKP = ISNULL((SELECT 1 WHERE EXISTS(SELECT TOP 1 ISPKPP FROM #T_MRKT WHERE ISPKPP = 1)),0);
--SELECT @O_COUNTDK = ISNULL((SELECT 1 WHERE EXISTS(SELECT TOP 1 ISDK  FROM #T_MRKT WHERE ISDK = 1)),0);
----CPD & CPDS DISTRIBUTOR
--SELECT @O_COUNTCPD = ISNULL((SELECT 1 WHERE EXISTS(SELECT TOP 1 ISCP FROM #T_MRKT WHERE (ISCP = 1 AND ISSCPD = 0 AND IS_T_TM_DIST = 0))),0);
--SELECT @O_COUNTCPSD = ISNULL((SELECT 1 WHERE EXISTS(SELECT TOP 1 ISSCPD  FROM #T_MRKT WHERE (ISCP = 1 AND ISSCPD = 1 AND IS_T_TM_DIST = 0))),0);
----CPD & CPDS TM_DISTRIBUTOR
--SELECT @O_CountCPSD_TM = ISNULL((SELECT 1 WHERE EXISTS(SELECT TOP 1 ISSCPD  FROM #T_MRKT WHERE (ISCP = 1 AND ISSCPD = 1 AND IS_T_TM_DIST = 1))),0);
--SELECT @O_CountCPD_TM  = ISNULL((SELECT 1 WHERE EXISTS(SELECT TOP 1 ISSCPD  FROM #T_MRKT WHERE (ISCP = 1 AND ISSCPD = 0 AND IS_T_TM_DIST = 1))),0);
----CP MRT
--SELECT @O_CountCPMRT_TM = ISNULL((SELECT 1 WHERE EXISTS(SELECT TOP 1 ISCPMRT  FROM #T_MRKT WHERE (ISCPMRT = 1 AND IS_T_TM_DIST = 1))),0);
--SELECT @O_CountCPMRT_D  = ISNULL((SELECT 1 WHERE EXISTS(SELECT TOP 1 ISCPMRT FROM #T_MRKT WHERE (ISCPMRT = 1 AND IS_T_TM_DIST = 0))),0);
--DROP TABLE #T_MRKT;
--GO
---------------------------------------------------------
IF EXISTS(SELECT NAME FROM Nufarm.Sys.Objects WHERE NAME = 'Usp_Check_Sum_Mathching_Disc_Qty'
 AND TYPE = 'P')
DROP PROCEDURE Usp_Check_Sum_Mathching_Disc_Qty
GO
CREATE PROCEDURE Usp_Check_Sum_Mathching_Disc_Qty
@OA_BRANDPACK_ID VARCHAR(75),
@DISCOUNT_TYPE VARCHAR(50)
AS
EXECUTE sp_executesql
N'SET NOCOUNT ON;
IF (@V_DISCOUNT_TYPE = ''Sales_Discount'')
   BEGIN
 	DECLARE @SUM_PROG_DISC_QTY DECIMAL(18,3),@PROG_DISC_QTY DECIMAL(18,3);
	SET @PROG_DISC_QTY =  (SELECT PROG_DISC_QTY FROM ORDR_OA_BRANDPACK WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID);-- AS DECIMAL(18,3))
	SET @SUM_PROG_DISC_QTY = (SELECT ISNULL(SUM(DISC_QTY),0) FROM ORDR_OA_BRANDPACK_DISC
	                         WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID AND GQSY_SGT_P_FLAG IN(''MG'',''KP'',''CR'',''CP'',''MS'',''DK'',''CS'',''TD'',''TS'',''CD'',''CT''));
        UPDATE ORDR_OA_BRANDPACK SET PROG_DISC_QTY = @SUM_PROG_DISC_QTY
		WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID;
		
   END
ELSE IF (@V_DISCOUNT_TYPE = ''Agreement_Discount'')
     BEGIN
	  DECLARE @SUM_AGREE_DISC_QTY DECIMAL(18,3),@AGREE_DISC_QTY DECIMAL(18,3)
	    SET @AGREE_DISC_QTY = (SELECT AGREE_DISC_QTY FROM ORDR_OA_BRANDPACK WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID);-- AS DECIMAL(18,3));
	    SET @SUM_AGREE_DISC_QTY = (SELECT ISNULL(SUM(DISC_QTY),0) FROM ORDR_OA_BRANDPACK_DISC
            WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID AND GQSY_SGT_P_FLAG IN(''G'',''Q1'',''Q2'',''Q3'',''Q4'',''S1'',''S2'',''Y''));
	    
            UPDATE ORDR_OA_BRANDPACK SET AGREE_DISC_QTY = @SUM_AGREE_DISC_QTY
	    WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID;
     END
ELSE IF (@V_DISCOUNT_TYPE = ''Other_Discount'')
      BEGIN
	   DECLARE @SUM_OTHER_DISC_QTY DECIMAL(18,3),@OTHER_DISC_QTY DECIMAL(18,3);
	     SET @OTHER_DISC_QTY = CAST((SELECT OTHER_DISC_QTY FROM ORDR_OA_BRANDPACK WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID) AS DECIMAL(18,3));
	     SET @SUM_OTHER_DISC_QTY = (SELECT ISNULL(SUM(DISC_QTY),0) FROM ORDR_OA_BRANDPACK_DISC
	     WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID AND GQSY_SGT_P_FLAG = ''O'');   
	    
             UPDATE ORDR_OA_BRANDPACK SET OTHER_DISC_QTY = @SUM_OTHER_DISC_QTY
		   WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID;
      END
ELSE IF (@V_DISCOUNT_TYPE = ''Project_Discount'')
     BEGIN
	  DECLARE @SUM_PROJ_DISC_QTY DECIMAL(18,3),@PROJ_DISC_QTY DECIMAL(18,3);
	     SET @PROJ_DISC_QTY = CAST((SELECT PROJ_DISC_QTY FROM ORDR_OA_BRANDPACK WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID) AS DECIMAL(18,3));
             SET @SUM_PROJ_DISC_QTY = CAST((SELECT ISNULL(SUM(DISC_QTY),0)
	        FROM ORDR_OA_BRANDPACK_DISC WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID AND
	        GQSY_SGT_P_FLAG = ''P'')AS DECIMAL(18,3));
	     UPDATE ORDR_OA_BRANDPACK SET PROJ_DISC_QTY = @SUM_PROJ_DISC_QTY 
		   WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID;	
      END',N'@V_OA_BRANDPACK_ID VARCHAR(70),@V_DISCOUNT_TYPE VARCHAR(50)',
     @V_OA_BRANDPACK_ID = @OA_BRANDPACK_ID,@V_DISCOUNT_TYPE = @DISCOUNT_TYPE;
         	
GO
--------------------------------------------------------

----------------------------------------------------------------------------
IF EXISTS(SELECT NAME FROM Nufarm.Sys.Objects WHERE NAME = 'Usp_Create_View_Report_Per_OA_Ref_No' AND TYPE = 'P')
DROP PROCEDURE Usp_Create_View_Report_Per_OA_Ref_No
GO
CREATE PROCEDURE Usp_Create_View_Report_Per_OA_Ref_No
@OA_REF_NO VARCHAR(32)
AS
EXECUTE sp_executesql
N'SELECT OPO.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,OPO.PO_REF_NO,OPO.PO_REF_DATE,
OOA.OA_ID AS OA_REF_NO,OOA.OA_DATE,BB.BRANDPACK_NAME,OOB.OA_ORIGINAL_QTY ,OOB.QTY_EVEN,
OOB.OA_PRICE_PERQTY AS PRICE,OOB.UNIT,OOB.REMARK,OA_DISC.REMAIND_QTY,OA_DISC.GIVEN_AGREEMENT,OA_DISC.[QUARTER],
OA_DISC.[SEMESTER],OA_DISC.YEARLY,OA_DISC.RPK,OA_DISC.CP_MRT,OA_DISC.DK,OA_DISC.CP_D,OA_DISC.CP_DK,OA_DISC.PKPP,OA_DISC.CP_R,
OA_DISC.OTHER,(OA_DISC.GIVEN_AGREEMENT * OOB.OA_PRICE_PERQTY) AS GIVEN_AMOUNT,
(OA_DISC.[QUARTER]* OOB.OA_PRICE_PERQTY) AS QUARTER_AMOUNT,
(OA_DISC.[SEMESTER] * OOB.OA_PRICE_PERQTY) AS SEMESTER_AMOUNT,
(OA_DISC.[YEARLY] * OOB.OA_PRICE_PERQTY) AS YEARLY_AMOUNT,
(OA_DISC.RPK * OOB.OA_PRICE_PERQTY) AS RPK_AMOUNT,
(OA_DISC.DK * OOB.OA_PRICE_PERQTY) AS DK_AMOUNT,
(OA_DISC.CP_D * OOB.OA_PRICE_PERQTY) AS CP_D_AMOUNT,
(OA_DISC.CP_DK * OOB.OA_PRICE_PERQTY) AS CP_DK_AMOUNT,
(OA_DISC.PKPP * OOB.OA_PRICE_PERQTY) AS PKPP_AMOUNT,
(OA_DISC.CP_R * OOB.OA_PRICE_PERQTY) AS CP_R_AMOUNT,
(OA_DISC.OTHER * OOB.OA_PRICE_PERQTY) AS OTHER_AMOUNT,
(OA_DISC.CP_MRT * OOB.OA_PRICE_PERQTY) AS CP_MRT_AMOUNT, 
(OOB.QTY_EVEN + ISNULL(OA_LEFT.TOTAL_DISC,0)) * OOB.OA_PRICE_PERQTY AS OA_AMOUNT,
(T_DISC.TOTAL_DISC * OOB.OA_PRICE_PERQTY) AS TOTAL_DISC_AMOUNT      
FROM ORDR_PURCHASE_ORDER OPO INNER JOIN DIST_DISTRIBUTOR DR ON OPO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
 INNER JOIN ORDR_PO_BRANDPACK OPB ON OPB.PO_REF_NO = OPO.PO_REF_NO INNER JOIN ORDR_ORDER_ACCEPTANCE OOA
ON OOA.PO_REF_NO = OPB.PO_REF_NO
INNER JOIN ORDR_OA_BRANDPACK OOB ON OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID AND OOB.OA_ID = OOA.OA_ID
INNER JOIN BRND_BRANDPACK BB ON OPB.BRANDPACK_ID = BB.BRANDPACK_ID --INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD ON OOBD.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
LEFT OUTER JOIN
               (
                 SELECT OA_BRANDPACK_ID,
                 SUM(CASE GQSY_SGT_P_FLAG WHEN ''RMOA'' THEN DISC_QTY ELSE 0 END)AS REMAIND_QTY,
                 SUM(CASE GQSY_SGT_P_FLAG WHEN ''G''  THEN DISC_QTY ELSE 0 END)AS GIVEN_AGREEMENT, 
            	 SUM(CASE GQSY_SGT_P_FLAG WHEN ''Q1'' THEN DISC_QTY WHEN ''Q2'' THEN DISC_QTY WHEN ''Q3'' THEN DISC_QTY
                                     	  WHEN ''Q4'' THEN DISC_QTY ELSE 0 END)AS [QUARTER],
				 SUM(CASE GQSY_SGT_P_FLAG WHEN ''S1'' THEN DISC_QTY WHEN ''S2'' THEN DISC_QTY ELSE 0 END)AS [SEMESTER], 
           		 SUM(CASE GQSY_SGT_P_FLAG WHEN ''Y''  THEN DISC_QTY ELSE 0 END)AS YEARLY, 
           		 SUM(CASE GQSY_SGT_P_FLAG WHEN ''MG'' THEN DISC_QTY ELSE 0 END)AS RPK,
				 SUM(CASE GQSY_SGT_P_FLAG WHEN ''DK'' THEN DISC_QTY WHEN ''DN'' THEN DISC_QTY ELSE 0 END)AS DK,
           		 SUM(CASE GQSY_SGT_P_FLAG WHEN ''CP'' THEN DISC_QTY  WHEN ''TD'' THEN DISC_QTY ELSE 0 END)AS CP_D,
				 SUM(CASE GQSY_SGT_P_FLAG WHEN ''CS'' THEN DISC_QTY  WHEN ''TS'' THEN DISC_QTY ELSE 0 END)AS CP_DK,
				 SUM(CASE GQSY_SGT_P_FLAG WHEN ''CT'' THEN DISC_QTY WHEN ''CD'' THEN DISC_QTY ELSE 0 END)AS CP_MRT,
				 SUM(CASE GQSY_SGT_P_FLAG WHEN ''KP'' THEN DISC_QTY ELSE 0 END)AS PKPP,
				 SUM(CASE GQSY_SGT_P_FLAG WHEN ''CR'' THEN DISC_QTY ELSE 0 END) AS CP_R,
				 SUM(CASE GQSY_SGT_P_FLAG WHEN ''O''  THEN DISC_QTY ELSE 0 END)AS OTHER
				 FROM ORDR_OA_BRANDPACK_DISC GROUP BY OA_BRANDPACK_ID
           	)OA_DISC ON OA_DISC.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID
LEFT OUTER JOIN(
                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
                 WHERE GQSY_SGT_P_FLAG != ''RMOA''
                 GROUP BY OA_BRANDPACK_ID
                )T_DISC ON OOB.OA_BRANDPACK_ID = T_DISC.OA_BRANDPACK_ID
LEFT OUTER JOIN( 
                 SELECT OA_BRANDPACK_ID,ISNULL(SUM(DISC_QTY),0)AS TOTAL_DISC FROM ORDR_OA_BRANDPACK_DISC 
                 WHERE GQSY_SGT_P_FLAG = ''RMOA''
                 GROUP BY OA_BRANDPACK_ID
                )OA_LEFT ON OA_LEFT.OA_BRANDPACK_ID = OOB.OA_BRANDPACK_ID 
WHERE OOA.OA_ID = @V_OA_REF_NO OPTION(KEEP PLAN)',N'@V_OA_REF_NO VARCHAR(32)',@V_OA_REF_NO = @OA_REF_NO
GO
--EXEC Usp_Create_View_Report_Per_OA_Ref_No @OA_REF_NO = 'TEST_CPMRT_004-00020879'

-----------------------------------------------------------------------
--IF EXISTS(SELECT NAME FROM Nufarm.Sys.Objects WHERE NAME = 'Usp_Create_View_Sales_Program_Distributor_History' AND TYPE = 'P')
--DROP PROCEDURE Usp_Create_View_Sales_Program_Distributor_History
--GO
--CREATE PROCEDURE Usp_Create_View_Sales_Program_Distributor_History
--@DISTRIBUTOR_ID VARCHAR(30)
----,
----@END_DATE SMALLDATETIME,
----@START_DATE SMALLDATETIME
--AS
--SET NOCOUNT ON;
--SELECT MP.PROGRAM_ID,MP.PROGRAM_NAME,MB.BRANDPACK_ID,BB.BRANDPACK_NAME,MBD.START_DATE,
--MBD.END_DATE,MBD.GIVEN_DISC_PCT AS [GIVEN %],MBD.TARGET_QTY,MBD.TARGET_DISC_PCT AS [TARGET %],
--MBD.ISHK,MBD.ISRPK AS DPRDS,MBD.PRICE_HK,MBD.TARGET_HK,MBD.ISDK AS DK,MBD.GIVEN_DK,MBD.TARGET_DK,
--MBD.ISCP AS [CP(D)],MBD.GIVEN_CP AS [GIVEN_CP(D)],MBD.TARGET_CP AS [TARGET_CP(D)],
--MBD.ISSCPD AS [CP(DK)],MBD.IS_T_TM_DIST AS TARGET_TM_DIST,MBD.ISCPMRT AS [CP(R M/T)],
--MBD.GIVEN_CPMRT AS [GIVEN_CP(R M/T)],MBD.TARGET_CPMRT AS [TARGET_CP(R M/T)],
--MBD.ISCPR AS [CP(RD)],MBD.GIVEN_CPR AS [GIVEN_CP(RD)],MBD.TARGET_CPR AS [TARGET_CP(RD)],
--MBD.ISPKPP AS PKPP,MBD.GIVEN_PKPP,MBD.TARGET_PKPP,MBD.BONUS_VALUE AS GIVEN_VALUE_PKPP,MBD.DESCRIPTIONS
--FROM MRKT_MARKETING_PROGRAM MP INNER JOIN MRKT_BRANDPACK MB ON
--MP.PROGRAM_ID = MB.PROGRAM_ID INNER JOIN MRKT_BRANDPACK_DISTRIBUTOR MBD
--ON MB.PROG_BRANDPACK_ID = MBD.PROG_BRANDPACK_ID 
--INNER JOIN BRND_BRANDPACK BB ON BB.BRANDPACK_ID = MB.BRANDPACK_ID
--WHERE --MBD.START_DATE >= @START_DATE AND MBD.END_DATE <= @END_DATE AND 
--MBD.DISTRIBUTOR_ID = @DISTRIBUTOR_ID
--GO
-----------------------------DK(NATIONAL)February 2015------------------------------------------------
USE [Nufarm]
GO
/****** Object:  Table [dbo].[SALES_DKN_SCHEMA]    Script Date: 03/30/2015 16:44:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[SALES_DKN_SCHEMA]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
CREATE TABLE [dbo].[SALES_DKN_SCHEMA](
	[IDApp] [int] IDENTITY(1,1) NOT NULL,
	[START_DATE] [smalldatetime] NOT NULL,
	[END_DATE] [smalldatetime] NOT NULL,
	[ProductToGive] [char](1) NOT NULL,
	[ProductRule] [char](1) NULL,
	[CreatedDate] [smalldatetime] NULL,
	[CreatedBy] [varchar](50) NULL,
	[ModifiedDate] [smalldatetime] NULL,
	[ModifiedBy] [varchar](50) NULL,
 CONSTRAINT [PK_SALES_DKN_SCHEMA] PRIMARY KEY NONCLUSTERED 
(
	[IDApp] ASC
) ON [PRIMARY]
) ON [PRIMARY]
END
GO

/****** Object:  Index [IX_SALES_DKN_SCHEMA]    Script Date: 03/30/2015 16:44:20 ******/
IF NOT EXISTS (SELECT * FROM dbo.sysindexes WHERE id = OBJECT_ID(N'[dbo].[SALES_DKN_SCHEMA]') AND name = N'IX_SALES_DKN_SCHEMA')
CREATE CLUSTERED INDEX [IX_SALES_DKN_SCHEMA] ON [dbo].[SALES_DKN_SCHEMA] 
(
	[END_DATE] ASC,
	[START_DATE] ASC
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SALES_DKN_PROGRESSIVE]    Script Date: 03/30/2015 16:44:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[SALES_DKN_PROGRESSIVE]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
CREATE TABLE [dbo].[SALES_DKN_PROGRESSIVE](
	[IDApp] [int] IDENTITY(1,1) NOT NULL,
	[FKApp_SDB] [int] NULL,
	[FKApp_SDS] [int] NOT NULL,
	[BRAND_ID] [varchar](7) NULL,
	[MIN_TO_DATE] [int] NOT NULL,
	[DISCOUNT] [decimal](10, 3) NOT NULL,
	[CreatedDate] [smalldatetime] NOT NULL,
	[CreatedBy] [varchar](50) NOT NULL,
	[ModifiedDate] [smalldatetime] NULL,
	[ModifiedBy] [varchar](50) NULL,
 CONSTRAINT [PK_SALES_DKN_PROGRESSIVE] PRIMARY KEY NONCLUSTERED 
(
	[IDApp] ASC
) ON [PRIMARY]
) ON [PRIMARY]
END
GO

/****** Object:  Index [IX_SALES_DKN_PROGRESSIVE]    Script Date: 03/30/2015 16:44:20 ******/
IF NOT EXISTS (SELECT * FROM dbo.sysindexes WHERE id = OBJECT_ID(N'[dbo].[SALES_DKN_PROGRESSIVE]') AND name = N'IX_SALES_DKN_PROGRESSIVE')
CREATE NONCLUSTERED INDEX [IX_SALES_DKN_PROGRESSIVE] ON [dbo].[SALES_DKN_PROGRESSIVE] 
(
	[BRAND_ID] ASC,
	[FKApp_SDS] ASC
) ON [PRIMARY]
GO
/****** Object:  Table [dbo].[SALES_DKN_BRAND]    Script Date: 03/30/2015 16:44:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF NOT EXISTS (SELECT * FROM dbo.sysobjects WHERE id = OBJECT_ID(N'[dbo].[SALES_DKN_BRAND]') AND OBJECTPROPERTY(id, N'IsUserTable') = 1)
BEGIN
CREATE TABLE [dbo].[SALES_DKN_BRAND](
	[IDApp] [int] IDENTITY(1,1) NOT NULL,
	[FKApp] [int] NOT NULL,
	[BRAND_ID] [varchar](7) NOT NULL,
	[CreatedDate] [smalldatetime] NOT NULL,
	[CreatedBy] [varchar](50) NOT NULL,
 CONSTRAINT [PK_SALES_DKN_BRAND] PRIMARY KEY NONCLUSTERED 
(
	[IDApp] ASC
) ON [PRIMARY]
) ON [PRIMARY]
END
GO

/****** Object:  Index [IX_SALES_DKN_BRAND]    Script Date: 03/30/2015 16:44:20 ******/
IF NOT EXISTS (SELECT * FROM dbo.sysindexes WHERE id = OBJECT_ID(N'[dbo].[SALES_DKN_BRAND]') AND name = N'IX_SALES_DKN_BRAND')
CREATE CLUSTERED INDEX [IX_SALES_DKN_BRAND] ON [dbo].[SALES_DKN_BRAND] 
(
	[BRAND_ID] ASC
) ON [PRIMARY]
GO
EXEC dbo.sp_addextendedproperty @name=N'MS_Description', @value=N'Referenced to SALES_DKN_SCHEMA Column IDApp' ,@level0type=N'USER', @level0name=N'dbo', @level1type=N'TABLE', @level1name=N'SALES_DKN_BRAND', @level2type=N'COLUMN', @level2name=N'FKApp'


IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'MRKT_DISC_HISTORY')C WHERE ColumnName = 'FKApp_SDS')
ALTER TABLE MRKT_DISC_HISTORY ADD FKApp_SDS int NULL;
GO


IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'MRKT_DISC_HISTORY')C WHERE ColumnName = 'FKApp_SDS')
ALTER TABLE MRKT_DISC_HISTORY ADD FKApp_SDS int NULL;
GO

-----------------------------------------------------------------
IF EXISTS(SELECT NAME FROM Nufarm.Sys.Objects WHERE NAME = 'Usp_CreateViewOA_DISCOUNT' AND TYPE = 'P')
DROP PROCEDURE Usp_CreateViewOA_DISCOUNT
GO
CREATE PROCEDURE Usp_CreateViewOA_DISCOUNT
@OA_BRANDPACK_ID VARCHAR(75)
AS
  SET NOCOUNT ON
EXECUTE sp_executesql
 N'SET NOCOUNT ON; IF EXISTS(SELECT OA_BRANDPACK_ID FROM ORDR_OA_BRANDPACK_DISC WHERE OA_BRANDPACK_ID
          = @OA_BRANDPACK_ID)
	BEGIN
           SELECT DISC_DESCRIPTION =  
           CASE
	   WHEN OOBD.OA_RM_ID IS NOT NULL  THEN
	      ''LEFT DISCOUNT FROM OA '' + (SELECT TOP 1 OA_ID AS OA_REF_NO FROM ORDR_OA_BRANDPACK WHERE OA_BRANDPACK_ID = (SELECT TOP 1 OA_BRANDPACK_ID FROM ORDR_OA_REMAINDING
	      WHERE OA_RM_ID = OOBD.OA_RM_ID))
	   WHEN OOBD.AGREE_DISC_HIST_ID IS NOT NULL THEN
	      ''DISCOUNT FROM OA '' + (SELECT TOP 1 OA_ID FROM ORDR_OA_BRANDPACK WHERE OA_BRANDPACK_ID = (SELECT TOP 1 OA_BRANDPACK_ID FROM AGREE_DISC_HISTORY WHERE AGREE_DISC_HIST_ID
	      = OOBD.AGREE_DISC_HIST_ID))
	   WHEN OOBD.MRKT_DISC_HIST_ID IS NOT NULL THEN
	      ''DISCOUNT FROM OA '' + (SELECT TOP 1 OA_ID FROM ORDR_OA_BRANDPACK WHERE OA_BRANDPACK_ID = (SELECT TOP 1 OA_BRANDPACK_ID FROM MRKT_DISC_HISTORY WHERE MRKT_DISC_HIST_ID
	      = OOBD.MRKT_DISC_HIST_ID))
	   WHEN OOBD.MRKT_M_S_ID IS NOT NULL THEN 
	      ''DISCOUNT FROM SALES PROGRAM ''  + (SELECT TOP 1 PROGRAM_ID FROM MRKT_BRANDPACK WHERE PROG_BRANDPACK_ID  
		=(SELECT TOP 1 PROG_BRANDPACK_ID FROM MRKT_BRANDPACK_DISTRIBUTOR WHERE PROG_BRANDPACK_DIST_ID = 
		(SELECT TOP 1 PROG_BRANDPACK_DIST_ID FROM MRKT_MARKETING_SAVING WHERE PROG_BRANDPACK_DIST_ID = OOBD.MRKT_M_S_ID)))
	   WHEN OOBD.BRND_B_S_ID IS NOT NULL THEN
	      ''DISCOUNT FROM AGREEMENT '' + (SELECT TOP 1 AGREEMENT_NO FROM AGREE_BRANDPACK_INCLUDE WHERE AGREE_BRANDPACK_ID  
               =(SELECT TOP 1 AGREE_BRANDPACK_ID FROM BRND_BRANDPACK_SAVING WHERE BRND_B_S_ID = OOBD.BRND_B_S_ID))
	   WHEN OOBD.ACHIEVEMENT_BRANDPACK_ID IS NOT NULL THEN
	      ''DISCOUNT FROM AGREEMENT  ''  + (SELECT TOP 1 AGREEMENT_NO FROM ACCRUED_HEADER WHERE ACHIEVEMENT_ID =(SELECT TOP 1 
		ACHIEVEMENT_ID FROM ACCRUED_DETAIL WHERE ACHIEVEMENT_BRANDPACK_ID =  OOBD.ACHIEVEMENT_BRANDPACK_ID))
           END,
	   OOBD.OA_BRANDPACK_DISC_ID,OOBD.OA_BRANDPACK_ID,OPB.BRANDPACK_ID,BB.BRANDPACK_NAME,
	   OOBD.DISC_QTY AS DISC_QUANTITY,OOBD.PRICE_PRQTY,(OOBD.DISC_QTY * OOBD.PRICE_PRQTY) AS TOTAL,
	   OOBD.GQSY_SGT_P_FLAG,OOBD.BRND_B_S_ID,OOBD.ACHIEVEMENT_BRANDPACK_ID,OOBD.MRKT_M_S_ID,OOBD.AGREE_DISC_HIST_ID,
	   OOBD.MRKT_DISC_HIST_ID,OOBD.PROJ_DISC_HIST_ID,OOBD.OA_RM_ID
	   FROM ORDR_PO_BRANDPACK OPB INNER JOIN ORDR_OA_BRANDPACK OOB ON OPB.PO_BRANDPACK_ID = OOB.PO_BRANDPACK_ID
	   INNER JOIN ORDR_OA_BRANDPACK_DISC OOBD ON OOB.OA_BRANDPACK_ID = OOBD.OA_BRANDPACK_ID
	   INNER JOIN BRND_BRANDPACK BB ON BB.BRANDPACK_ID = OPB.BRANDPACK_ID
	   WHERE OOB.OA_BRANDPACK_ID = @OA_BRANDPACK_ID OPTION(KEEP PLAN)
	END
',N'@OA_BRANDPACK_ID VARCHAR(75)',@OA_BRANDPACK_ID = @OA_BRANDPACK_ID
GO

IF EXISTS(SELECT NAME FROM Nufarm.Sys.Objects WHERE NAME = 'Usp_Check_Sum_Mathching_Disc_Qty'
 AND TYPE = 'P')
DROP PROCEDURE Usp_Check_Sum_Mathching_Disc_Qty
GO
CREATE PROCEDURE Usp_Check_Sum_Mathching_Disc_Qty
@OA_BRANDPACK_ID VARCHAR(75),
@DISCOUNT_TYPE VARCHAR(50)
AS
EXECUTE sp_executesql
N'SET NOCOUNT ON;
IF (@V_DISCOUNT_TYPE = ''Sales_Discount'')
   BEGIN
 	DECLARE @SUM_PROG_DISC_QTY DECIMAL(18,3),@PROG_DISC_QTY DECIMAL(18,3);
	SET @PROG_DISC_QTY =  (SELECT PROG_DISC_QTY FROM ORDR_OA_BRANDPACK WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID);-- AS DECIMAL(18,3))
	SET @SUM_PROG_DISC_QTY = (SELECT ISNULL(SUM(DISC_QTY),0) FROM ORDR_OA_BRANDPACK_DISC
	                         WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID AND GQSY_SGT_P_FLAG IN(''MG'',''KP'',''CR'',''CP'',''MS'',''DK'',''CS'',''TD'',''TS'',''CD'',''CT'',''DN''));
        UPDATE ORDR_OA_BRANDPACK SET PROG_DISC_QTY = @SUM_PROG_DISC_QTY
		WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID;
		
   END
ELSE IF (@V_DISCOUNT_TYPE = ''Agreement_Discount'')
     BEGIN
	  DECLARE @SUM_AGREE_DISC_QTY DECIMAL(18,3),@AGREE_DISC_QTY DECIMAL(18,3)
	    SET @AGREE_DISC_QTY = (SELECT AGREE_DISC_QTY FROM ORDR_OA_BRANDPACK WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID);-- AS DECIMAL(18,3));
	    SET @SUM_AGREE_DISC_QTY = (SELECT ISNULL(SUM(DISC_QTY),0) FROM ORDR_OA_BRANDPACK_DISC
            WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID AND GQSY_SGT_P_FLAG IN(''G'',''Q1'',''Q2'',''Q3'',''Q4'',''S1'',''S2'',''Y''));
	    
            UPDATE ORDR_OA_BRANDPACK SET AGREE_DISC_QTY = @SUM_AGREE_DISC_QTY
	    WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID;
     END
ELSE IF (@V_DISCOUNT_TYPE = ''Other_Discount'')
      BEGIN
	   DECLARE @SUM_OTHER_DISC_QTY DECIMAL(18,3),@OTHER_DISC_QTY DECIMAL(18,3);
	     SET @OTHER_DISC_QTY = CAST((SELECT OTHER_DISC_QTY FROM ORDR_OA_BRANDPACK WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID) AS DECIMAL(18,3));
	     SET @SUM_OTHER_DISC_QTY = (SELECT ISNULL(SUM(DISC_QTY),0) FROM ORDR_OA_BRANDPACK_DISC
	     WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID AND GQSY_SGT_P_FLAG = ''O'');   
	    
             UPDATE ORDR_OA_BRANDPACK SET OTHER_DISC_QTY = @SUM_OTHER_DISC_QTY
		   WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID;
      END
ELSE IF (@V_DISCOUNT_TYPE = ''Project_Discount'')
     BEGIN
	  DECLARE @SUM_PROJ_DISC_QTY DECIMAL(18,3),@PROJ_DISC_QTY DECIMAL(18,3);
	     SET @PROJ_DISC_QTY = CAST((SELECT PROJ_DISC_QTY FROM ORDR_OA_BRANDPACK WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID) AS DECIMAL(18,3));
             SET @SUM_PROJ_DISC_QTY = CAST((SELECT ISNULL(SUM(DISC_QTY),0)
	        FROM ORDR_OA_BRANDPACK_DISC WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID AND
	        GQSY_SGT_P_FLAG = ''P'')AS DECIMAL(18,3));
	     UPDATE ORDR_OA_BRANDPACK SET PROJ_DISC_QTY = @SUM_PROJ_DISC_QTY 
		   WHERE OA_BRANDPACK_ID = @V_OA_BRANDPACK_ID;	
      END',N'@V_OA_BRANDPACK_ID VARCHAR(70),@V_DISCOUNT_TYPE VARCHAR(50)',
     @V_OA_BRANDPACK_ID = @OA_BRANDPACK_ID,@V_DISCOUNT_TYPE = @DISCOUNT_TYPE;
         	
GO


IF EXISTS(SELECT NAME FROM Nufarm.Sys.Objects WHERE NAME  ='Usp_Get_Detail_Qty_Dispro_By_Invoice' 
           AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Detail_Qty_Dispro_By_Invoice
GO
CREATE PROCEDURE Usp_Get_Detail_Qty_Dispro_By_Invoice
@DISTRIBUTOR_ID VARCHAR(10),
@START_DATE SMALLDATETIME,
@END_DATE SMALLDATETIME
AS
SET NOCOUNT ON;
-------------------------------------------------------------------------------- 
IF (@DISTRIBUTOR_ID IS NOT NULL)
BEGIN
	SELECT DR.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,BR.BRAND_NAME,BB.BRANDPACK_NAME,(OPO.QTY_EVEN + ISNULL(OPO.LEFT_OA_QTY,0)) AS OA_QTY,OPO.RPK,
	OPO.DP,OPO.CP_D,OPO.CP_R,OPO.PKPP,OPO.DK,OPO.OTHERS,(ISNULL(OPO.TOTAL_DISC,0) + OPO.QTY_EVEN)AS TOTAL_DELIVERY,
	ACCRUE.QUARTER_1 ,ACCRUE.QUARTER_2 ,ACCRUE.QUARTER_3,ACCRUE.QUARTER_4,ACCRUE.SEMESTER_1,
	ACCRUE.SEMESTER_2 ,ACCRUE.YEARLY,ACCRUE.RELEASE_Q1 - OPO.REM_Q1 AS RELEASE_Q1,
	ACCRUE.RELEASE_Q2 - OPO.REM_Q2 AS RELEASE_Q2,ACCRUE.RELEASE_Q3 - OPO.REM_Q3 AS RELEASE_Q3,
	ACCRUE.RELEASE_Q4 - OPO.REM_Q4 AS RELEASE_Q4,ACCRUE.RELEASE_S1 - OPO.REM_S1 AS RELEASE_S1,
	ACCRUE.RELEASE_S2 - OPO.REM_S2 AS RELEASE_S2,ACCRUE.RELEASE_Y - OPO.REM_Y AS RELEASE_Y, 

	TOTAL_RELEASE = CASE WHEN (ISNULL((ACCRUE.RELEASE_Q1 + ACCRUE.RELEASE_Q2 + ACCRUE.RELEASE_Q3 + ACCRUE.RELEASE_Q4 + ACCRUE.RELEASE_S1 + ACCRUE.RELEASE_S2 + ACCRUE.RELEASE_Y),0)
	- ISNULL((OPO.REM_Q1 + OPO.REM_Q2 + OPO.REM_Q3 + OPO.REM_Q4 + OPO.REM_S1 + OPO.REM_S2 + OPO.REM_Y),0) < 0) THEN 0 
        ELSE ISNULL((ACCRUE.RELEASE_Q1 + ACCRUE.RELEASE_Q2 + ACCRUE.RELEASE_Q3 + ACCRUE.RELEASE_Q4 + ACCRUE.RELEASE_S1 + ACCRUE.RELEASE_S2 + ACCRUE.RELEASE_Y),0)
	- ISNULL((OPO.REM_Q1 + OPO.REM_Q2 + OPO.REM_Q3 + OPO.REM_Q4 + OPO.REM_S1 + OPO.REM_S2 + OPO.REM_Y),0) END, 
	
	ACCRUE.LEFT_Q1,ACCRUE.LEFT_Q2,ACCRUE.LEFT_Q3,ACCRUE.LEFT_Q4,ACCRUE.LEFT_S1, ACCRUE.LEFT_S2,ACCRUE.LEFT_Y,
	ISNULL((ACCRUE.LEFT_Q1 + ACCRUE.LEFT_Q2 + ACCRUE.LEFT_Q3 + ACCRUE.LEFT_Q4 + ACCRUE.LEFT_S1 +  ACCRUE.LEFT_S2 + ACCRUE.LEFT_Y),0)
	 AS TOTAL_LEFT,OPO.REM_Q1, OPO.REM_Q2, OPO.REM_Q3, OPO.REM_Q4, OPO.REM_S1, OPO.REM_S2, OPO.REM_Y,
	  (OPO.REM_Q1 + OPO.REM_Q2 + OPO.REM_Q3 + OPO.REM_Q4 + OPO.REM_S1 + OPO.REM_S2 + OPO.REM_Y) AS TOTAL_REMAIND
	FROM Nufarm.dbo.DIST_DISTRIBUTOR DR INNER JOIN
	(
	  SELECT OPO.DISTRIBUTOR_ID,OPB.BRANDPACK_ID,ISNULL(SUM(OOB.QTY_EVEN),0) AS QTY_EVEN,
	  ISNULL(SUM(OBD.RPK),0)AS RPK,ISNULL(SUM(OBD.OTHERS),0)AS OTHERS,ISNULL(SUM(OBD.LEFT_OA_QTY),0) AS LEFT_OA_QTY,
	  ISNULL(SUM(OBD.DP),0)AS DP,ISNULL(SUM(OBD.CP_D),0)AS CP_D,ISNULL(SUM(OBD.CP_R),0)AS CP_R,
	  ISNULL(SUM(OBD.PKPP),0) AS PKPP,ISNULL(SUM(OBD.DK),0) AS DK,
	  ISNULL(SUM(REM.REM_Q1),0)AS REM_Q1,ISNULL(SUM(REM.REM_Q2),0)AS REM_Q2,ISNULL(SUM(REM.REM_Q3),0)AS REM_Q3,
	  ISNULL(SUM(REM.REM_Q4),0)AS REM_Q4,ISNULL(SUM(REM.REM_S1),0)AS REM_S1,
	  ISNULL(SUM(REM.REM_S2),0)AS REM_S2,ISNULL(SUM(REM.REM_Y),0)AS REM_Y,
	  ISNULL(SUM(OBD.TOTAL_DISC),0) AS TOTAL_DISC
	  FROM Nufarm.dbo.ORDR_PURCHASE_ORDER OPO 
	  INNER JOIN Nufarm.dbo.ORDR_PO_BRANDPACK OPB ON OPO.PO_REF_NO = OPB.PO_REF_NO
	  INNER JOIN Nufarm.dbo.ORDR_OA_BRANDPACK OOB ON OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID 
	  LEFT OUTER JOIN (
			    SELECT OA_BRANDPACK_ID,
			    ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'MG' THEN DISC_QTY ELSE 0 END),0) AS RPK,
			    ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'O' THEN DISC_QTY ELSE 0 END),0)AS OTHERS,
			    ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'RMOA' THEN DISC_QTY ELSE 0 END),0) AS LEFT_OA_QTY,
			    ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'G' THEN DISC_QTY ELSE 0 END),0) AS DP,
			    ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'CP' THEN DISC_QTY ELSE 0 END),0) AS CP_D,
			    ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'SC' THEN DISC_QTY ELSE 0 END),0) AS CP_D_S,
			    ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'CR' THEN DISC_QTY ELSE 0 END),0) AS CP_R,
			    ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'KP' THEN DISC_QTY ELSE 0 END),0)AS PKPP,
			    ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'DK' THEN DISC_QTY ELSE 0 END),0) AS DK,
			    ISNULL(SUM(DISC_QTY),0) AS TOTAL_DISC
			    FROM Nufarm.dbo.ORDR_OA_BRANDPACK_DISC
			    GROUP BY OA_BRANDPACK_ID
	                  )OBD
	  ON OOB.OA_BRANDPACK_ID = OBD.OA_BRANDPACK_ID
	  LEFT OUTER JOIN (
	                    SELECT OA_BRANDPACK_ID,
	                    ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN LEFT_QTY ELSE 0 END),0) AS REM_Q1,
			    ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN LEFT_QTY ELSE 0 END),0) AS REM_Q2,
			    ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN LEFT_QTY ELSE 0 END),0) AS REM_Q3,
			    ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN LEFT_QTY ELSE 0 END),0) AS REM_Q4,
			    ISNULL(SUM(CASE FLAG WHEN 'S1' THEN LEFT_QTY ELSE 0 END),0) AS REM_S1,
			    ISNULL(SUM(CASE FLAG WHEN 'S2' THEN LEFT_QTY ELSE 0 END),0) AS REM_S2,
			    ISNULL(SUM(CASE FLAG WHEN 'Y' THEN LEFT_QTY ELSE 0 END),0)AS REM_Y
	                    FROM Nufarm.dbo.ORDR_OA_REMAINDING GROUP BY OA_BRANDPACK_ID
			  )REM
	  ON OOB.OA_BRANDPACK_ID = REM.OA_BRANDPACK_ID
	  WHERE OPO.PO_REF_DATE >= @START_DATE
	  AND OPB.PO_ORIGINAL_QTY > 0  
	  GROUP BY OPO.DISTRIBUTOR_ID,OPB.BRANDPACK_ID
	)OPO
	ON OPO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
	INNER JOIN Nufarm.dbo.BRND_BRANDPACK BB ON BB.BRANDPACK_ID = OPO.BRANDPACK_ID
	INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
	LEFT OUTER JOIN(
	                 SELECT ACRH.DISTRIBUTOR_ID,ACRD.BRANDPACK_ID,

		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'Q1' THEN ACRD.DISC_QTY END),0)AS QUARTER_1,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'Q2' THEN ACRD.DISC_QTY END),0)AS QUARTER_2,
	                 ISNULL(SUM(CASE ACRH.FLAG WHEN 'Q3' THEN ACRD.DISC_QTY  END),0)AS QUARTER_3,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'Q4' THEN ACRD.DISC_QTY  END),0) AS QUARTER_4,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'S1' THEN ACRD.DISC_QTY  END),0)AS SEMESTER_1,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'S2' THEN ACRD.DISC_QTY  END),0)AS SEMESTER_2,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'Y'  THEN ACRD.DISC_QTY  END),0)AS YEARLY,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'Q1' THEN ACRD.RELEASE_QTY END),0)AS RELEASE_Q1,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'Q2' THEN ACRD.RELEASE_QTY END),0)AS RELEASE_Q2,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'Q3' THEN ACRD.RELEASE_QTY END),0)AS RELEASE_Q3,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'Q4' THEN ACRD.RELEASE_QTY END),0)AS RELEASE_Q4,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'S1' THEN ACRD.RELEASE_QTY END),0)AS RELEASE_S1,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'S2' THEN ACRD.RELEASE_QTY END),0)AS RELEASE_S2,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'Y'  THEN ACRD.RELEASE_QTY END),0)AS RELEASE_Y,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'Q1' THEN ACRD.LEFT_QTY END),0)AS LEFT_Q1,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'Q2' THEN ACRD.LEFT_QTY END),0) AS LEFT_Q2,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'Q3' THEN ACRD.LEFT_QTY END),0)AS LEFT_Q3,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'Q4' THEN ACRD.LEFT_QTY END),0) AS LEFT_Q4,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'S1' THEN ACRD.LEFT_QTY END),0)AS LEFT_S1,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'S2' THEN ACRD.LEFT_QTY END),0)AS LEFT_S2,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'Y'  THEN ACRD.LEFT_QTY END),0)AS LEFT_Y

		         FROM Nufarm.dbo.ACCRUED_HEADER ACRH INNER JOIN Nufarm.dbo.ACCRUED_DETAIL ACRD
	                 ON ACRH.ACHIEVEMENT_ID = ACRD.ACHIEVEMENT_ID
			 INNER JOIN Nufarm.dbo.AGREE_AGREEMENT AA ON ACRH.AGREEMENT_NO = AA.AGREEMENT_NO
                         WHERE AA.START_DATE >= @START_DATE AND AA.END_DATE <= @END_DATE
			 GROUP BY ACRH.DISTRIBUTOR_ID,ACRD.BRANDPACK_ID
		       )ACCRUE
	ON OPO.BRANDPACK_ID = ACCRUE.BRANDPACK_ID
	AND OPO.DISTRIBUTOR_ID = ACCRUE.DISTRIBUTOR_ID
	WHERE OPO.DISTRIBUTOR_ID = @DISTRIBUTOR_ID;
    END
ELSE
    BEGIN
	SELECT DR.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME,BR.BRAND_NAME,BB.BRANDPACK_NAME,(OPO.QTY_EVEN + ISNULL(OPO.LEFT_OA_QTY,0)) AS OA_QTY,OPO.RPK,
	OPO.DP,OPO.CP_D,OPO.CP_R,OPO.PKPP,OPO.DK,OPO.OTHERS,(ISNULL(OPO.TOTAL_DISC,0) + OPO.QTY_EVEN) AS TOTAL_DELIVERY,
	ACCRUE.QUARTER_1 ,ACCRUE.QUARTER_2 ,ACCRUE.QUARTER_3,ACCRUE.QUARTER_4,ACCRUE.SEMESTER_1,
	ACCRUE.SEMESTER_2 ,ACCRUE.YEARLY,ACCRUE.RELEASE_Q1 - OPO.REM_Q1 AS RELEASE_Q1,
	ACCRUE.RELEASE_Q2 - OPO.REM_Q2 AS RELEASE_Q2,ACCRUE.RELEASE_Q3 - OPO.REM_Q3 AS RELEASE_Q3,
	ACCRUE.RELEASE_Q4 - OPO.REM_Q4 AS RELEASE_Q4,ACCRUE.RELEASE_S1 - OPO.REM_S1 AS RELEASE_S1,
	ACCRUE.RELEASE_S2 - OPO.REM_S2 AS RELEASE_S2,ACCRUE.RELEASE_Y - OPO.REM_Y AS RELEASE_Y,

	TOTAL_RELEASE = CASE WHEN (ISNULL((ACCRUE.RELEASE_Q1 + ACCRUE.RELEASE_Q2 + ACCRUE.RELEASE_Q3 + ACCRUE.RELEASE_Q4 + ACCRUE.RELEASE_S1 + ACCRUE.RELEASE_S2 + ACCRUE.RELEASE_Y),0)
	- ISNULL((OPO.REM_Q1 + OPO.REM_Q2 + OPO.REM_Q3 + OPO.REM_Q4 + OPO.REM_S1 + OPO.REM_S2 + OPO.REM_Y),0) < 0) THEN 0 
        ELSE ISNULL((ACCRUE.RELEASE_Q1 + ACCRUE.RELEASE_Q2 + ACCRUE.RELEASE_Q3 + ACCRUE.RELEASE_Q4 + ACCRUE.RELEASE_S1 + ACCRUE.RELEASE_S2 + ACCRUE.RELEASE_Y),0)
	- ISNULL((OPO.REM_Q1 + OPO.REM_Q2 + OPO.REM_Q3 + OPO.REM_Q4 + OPO.REM_S1 + OPO.REM_S2 + OPO.REM_Y),0) END, 
		
	ACCRUE.LEFT_Q1,ACCRUE.LEFT_Q2,ACCRUE.LEFT_Q3,ACCRUE.LEFT_Q4,ACCRUE.LEFT_S1, ACCRUE.LEFT_S2,ACCRUE.LEFT_Y,
	ISNULL((ACCRUE.LEFT_Q1 + ACCRUE.LEFT_Q2 + ACCRUE.LEFT_Q3 + ACCRUE.LEFT_Q4 + ACCRUE.LEFT_S1 +  ACCRUE.LEFT_S2 + ACCRUE.LEFT_Y),0)
	 AS TOTAL_LEFT,OPO.REM_Q1, OPO.REM_Q2, OPO.REM_Q3, OPO.REM_Q4, OPO.REM_S1, OPO.REM_S2, OPO.REM_Y,
	  (OPO.REM_Q1 + OPO.REM_Q2 + OPO.REM_Q3 + OPO.REM_Q4 + OPO.REM_S1 + OPO.REM_S2 + OPO.REM_Y) AS TOTAL_REMAIND
	FROM Nufarm.dbo.DIST_DISTRIBUTOR DR INNER JOIN
	(
	  SELECT OPO.DISTRIBUTOR_ID,OPB.BRANDPACK_ID,ISNULL(SUM(OOB.QTY_EVEN),0) AS QTY_EVEN,
	  ISNULL(SUM(OBD.RPK),0)AS RPK,ISNULL(SUM(OBD.OTHERS),0)AS OTHERS,ISNULL(SUM(OBD.LEFT_OA_QTY),0) AS LEFT_OA_QTY,
	  ISNULL(SUM(OBD.DP),0)AS DP,ISNULL(SUM(OBD.CP_D),0)AS CP_D,ISNULL(SUM(OBD.CP_R),0)AS CP_R,
	  ISNULL(SUM(OBD.PKPP),0) AS PKPP,ISNULL(SUM(OBD.DK),0) AS DK,
	  ISNULL(SUM(REM.REM_Q1),0)AS REM_Q1,ISNULL(SUM(REM.REM_Q2),0)AS REM_Q2,ISNULL(SUM(REM.REM_Q3),0)AS REM_Q3,
	  ISNULL(SUM(REM.REM_Q4),0)AS REM_Q4,ISNULL(SUM(REM.REM_S1),0)AS REM_S1,
	  ISNULL(SUM(REM.REM_S2),0)AS REM_S2,ISNULL(SUM(REM.REM_Y),0)AS REM_Y,
	  ISNULL(SUM(OBD.TOTAL_DISC),0) AS TOTAL_DISC
	  FROM Nufarm.dbo.ORDR_PURCHASE_ORDER OPO 
	  INNER JOIN Nufarm.dbo.ORDR_PO_BRANDPACK OPB ON OPO.PO_REF_NO = OPB.PO_REF_NO
	  INNER JOIN Nufarm.dbo.ORDR_OA_BRANDPACK OOB ON OOB.PO_BRANDPACK_ID = OPB.PO_BRANDPACK_ID 
	  LEFT OUTER JOIN (
			    SELECT OA_BRANDPACK_ID,
			    ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'MG' THEN DISC_QTY ELSE 0 END),0) AS RPK,
			    ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'O' THEN DISC_QTY ELSE 0 END),0)AS OTHERS,
			    ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'RMOA' THEN DISC_QTY ELSE 0 END),0) AS LEFT_OA_QTY,
			    ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'G' THEN DISC_QTY ELSE 0 END),0) AS DP,
			    ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'CP' THEN DISC_QTY ELSE 0 END),0) AS CP_D,
			    ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'SC' THEN DISC_QTY ELSE 0 END),0) AS CP_D_S,
			    ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'CR' THEN DISC_QTY ELSE 0 END),0) AS CP_R,
			    ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'KP' THEN DISC_QTY ELSE 0 END),0)AS PKPP,
			    ISNULL(SUM(CASE GQSY_SGT_P_FLAG WHEN 'DK' THEN DISC_QTY ELSE 0 END),0) AS DK,
			    ISNULL(SUM(DISC_QTY),0) AS TOTAL_DISC
			    FROM Nufarm.dbo.ORDR_OA_BRANDPACK_DISC
			    GROUP BY OA_BRANDPACK_ID
	                  )OBD
	  ON OOB.OA_BRANDPACK_ID = OBD.OA_BRANDPACK_ID
	  LEFT OUTER JOIN (
	                    SELECT OA_BRANDPACK_ID,
	                    ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN LEFT_QTY ELSE 0 END),0) AS REM_Q1,
			    ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN LEFT_QTY ELSE 0 END),0) AS REM_Q2,
			    ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN LEFT_QTY ELSE 0 END),0) AS REM_Q3,
			    ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN LEFT_QTY ELSE 0 END),0) AS REM_Q4,
			    ISNULL(SUM(CASE FLAG WHEN 'S1' THEN LEFT_QTY ELSE 0 END),0) AS REM_S1,
			    ISNULL(SUM(CASE FLAG WHEN 'S2' THEN LEFT_QTY ELSE 0 END),0) AS REM_S2,
			    ISNULL(SUM(CASE FLAG WHEN 'Y' THEN LEFT_QTY ELSE 0 END),0)AS REM_Y
	                    FROM Nufarm.dbo.ORDR_OA_REMAINDING GROUP BY OA_BRANDPACK_ID
			  )REM
	  ON OOB.OA_BRANDPACK_ID = REM.OA_BRANDPACK_ID
	  WHERE OPO.PO_REF_DATE >= @START_DATE 
	  AND OPB.PO_ORIGINAL_QTY > 0 
	  GROUP BY OPO.DISTRIBUTOR_ID,OPB.BRANDPACK_ID
	)OPO
	ON OPO.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID
	INNER JOIN Nufarm.dbo.BRND_BRANDPACK BB ON BB.BRANDPACK_ID = OPO.BRANDPACK_ID
	INNER JOIN BRND_BRAND BR ON BR.BRAND_ID = BB.BRAND_ID
	LEFT OUTER JOIN(
	                 SELECT ACRH.DISTRIBUTOR_ID,ACRD.BRANDPACK_ID,
	
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'Q1' THEN ACRD.DISC_QTY END),0)AS QUARTER_1,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'Q2' THEN ACRD.DISC_QTY END),0)AS QUARTER_2,
	                 ISNULL(SUM(CASE ACRH.FLAG WHEN 'Q3' THEN ACRD.DISC_QTY  END),0)AS QUARTER_3,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'Q4' THEN ACRD.DISC_QTY  END),0) AS QUARTER_4,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'S1' THEN ACRD.DISC_QTY  END),0)AS SEMESTER_1,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'S2' THEN ACRD.DISC_QTY  END),0)AS SEMESTER_2,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'Y'  THEN ACRD.DISC_QTY  END),0)AS YEARLY,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'Q1' THEN ACRD.RELEASE_QTY END),0)AS RELEASE_Q1,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'Q2' THEN ACRD.RELEASE_QTY END),0)AS RELEASE_Q2,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'Q3' THEN ACRD.RELEASE_QTY END),0)AS RELEASE_Q3,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'Q4' THEN ACRD.RELEASE_QTY END),0)AS RELEASE_Q4,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'S1' THEN ACRD.RELEASE_QTY END),0)AS RELEASE_S1,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'S2' THEN ACRD.RELEASE_QTY END),0)AS RELEASE_S2,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'Y'  THEN ACRD.RELEASE_QTY END),0)AS RELEASE_Y,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'Q1' THEN ACRD.LEFT_QTY END),0)AS LEFT_Q1,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'Q2' THEN ACRD.LEFT_QTY END),0) AS LEFT_Q2,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'Q3' THEN ACRD.LEFT_QTY END),0)AS LEFT_Q3,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'Q4' THEN ACRD.LEFT_QTY END),0) AS LEFT_Q4,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'S1' THEN ACRD.LEFT_QTY END),0)AS LEFT_S1,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'S2' THEN ACRD.LEFT_QTY END),0)AS LEFT_S2,
		         ISNULL(SUM(CASE ACRH.FLAG WHEN 'Y'  THEN ACRD.LEFT_QTY END),0)AS LEFT_Y
		   
		         FROM Nufarm.dbo.ACCRUED_HEADER ACRH INNER JOIN Nufarm.dbo.ACCRUED_DETAIL ACRD
	                 ON ACRH.ACHIEVEMENT_ID = ACRD.ACHIEVEMENT_ID
			 INNER JOIN Nufarm.dbo.AGREE_AGREEMENT AA ON ACRH.AGREEMENT_NO = AA.AGREEMENT_NO
                         WHERE AA.START_DATE >= @START_DATE AND AA.END_DATE <= @END_DATE
			 GROUP BY ACRH.DISTRIBUTOR_ID,ACRD.BRANDPACK_ID
		       )ACCRUE
	ON OPO.BRANDPACK_ID = ACCRUE.BRANDPACK_ID
	AND OPO.DISTRIBUTOR_ID = ACCRUE.DISTRIBUTOR_ID;
   END
GO



IF EXISTS(SELECT NAME FROM Nufarm.Sys.Objects WHERE NAME = 'Usp_Get_Total_Acrue_By_Year' AND TYPE = 'P')
DROP PROCEDURE Usp_Get_Total_Acrue_By_Year
GO
CREATE PROCEDURE Usp_Get_Total_Acrue_By_Year
@AGREEMENT_NO VARCHAR(32),
@CURRENT_FLAG VARCHAR(2)
AS
SET DEADLOCK_PRIORITY NORMAL; SET NOCOUNT ON;
DECLARE @V_QS_TREATMENT_FLAG CHAR(1),@V_IsTargetGroup BIT;
SET @V_QS_TREATMENT_FLAG = (SELECT TOP 1 QS_TREATMENT_FLAG FROM AGREE_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO);
IF (SELECT COUNT(AGREEMENT_NO) FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO) > 1
    BEGIN SET @V_IsTargetGroup = 1; END
ELSE 
    BEGIN SET @V_IsTargetGroup = 0; END
IF @V_QS_TREATMENT_FLAG = 'Q'
   BEGIN 
	SELECT ABI.DISTRIBUTOR_ID,ABI.AGREEMENT_NO,ABI.[ID] AS AGREE_BRAND_ID,ABI.BRAND_ID,ABI.TARGET_YEAR,
       TOTAL_ACTUAL = CASE @CURRENT_FLAG 
			 WHEN 'Q1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4
			 WHEN 'Q2' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q3 + ABI.TARGET_Q4
			 WHEN 'Q3' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q4
			 ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
       			 END,
	ISNULL(ACRH.TOTAL_PO_ORIGINAL,0)AS TOTAL_PO_ORIGINAL,ISNULL(ACRH.TOTAL_PO_DISTRIBUTOR,0) AS TOTAL_PO_DISTRIBUTOR,
	ACTUAL_YEAR_DISTRIBUTOR = CASE @V_IsTargetGroup
				    WHEN 0 THEN CASE @CURRENT_FLAG 
					        WHEN 'Q1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4
					        WHEN 'Q2' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q3 + ABI.TARGET_Q4
					        WHEN 'Q3' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q4
					        ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) END
                                    ELSE  ISNULL(ACRH.ACTUAL_YEAR_DISTRIBUTOR,0)
                                    END,           		
        ABI.COMBINED_BRAND FROM VIEW_AGREE_BRAND_INCLUDE ABI
	LEFT OUTER JOIN( 
                   SELECT ACRHA.AGREE_BRAND_ID,ISNULL(ACRHA.ACTUAL_Q1,0) + ISNULL(ACRHA.ACTUAL_Q2,0) + ISNULL(ACRHA.ACTUAL_Q3,0) + ISNULL(ACRHA.ACTUAL_Q4,0)  + ISNULL(ACRHA.TOTAL_JOIN_CP,0) AS TOTAL_ACTUAL,
		   ISNULL(ACRHA.TOTAL_PO_Q1,0) + ISNULL(ACRHA.TOTAL_PO_Q2,0) + ISNULL(ACRHA.TOTAL_PO_Q3,0) + ISNULL(ACRHA.TOTAL_PO_Q4,0) AS TOTAL_PO_ORIGINAL,	
		   ISNULL(ACRHA1.ACTUAL_Y,0)AS ACTUAL_Y,ACRHD.DISTRIBUTOR_ID,
		   ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q1,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q2,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q3,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q4,0)  + ISNULL(ACRHD.TOTAL_CP,0) AS ACTUAL_YEAR_DISTRIBUTOR,
		   ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_Q1,0) + ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_Q2,0) + ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_Q3,0) + ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_Q4,0) AS TOTAL_PO_DISTRIBUTOR
                   FROM
                     (
                      	 SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
				 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_DISTRIBUTOR END),0)  AS ACTUAL_Q1,
			 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q1,
				 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_Q2,
			 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q2, 
				 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_DISTRIBUTOR END),0)  AS ACTUAL_Q3,
			 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q3,
				 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_Q4,
			 ISNULL(SUM(CASE FLAG when 'Q4' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q4,
			     ISNULL(SUM(TOTAL_CPQ1),0) + ISNULL(SUM(TOTAL_CPQ2),0) + ISNULL(SUM(TOTAL_CPQ3),0) AS TOTAL_JOIN_CP
			 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO 
			 GROUP BY AGREEMENT_NO + BRAND_ID
            	      )ACRHA
		    LEFT OUTER JOIN
                            (SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,TOTAL_ACTUAL AS ACTUAL_Y
	  	             FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO AND FLAG = 'Y'	
            		     )ACRHA1
		    ON ACRHA.AGREE_BRAND_ID = ACRHA1.AGREE_BRAND_ID
                    INNER JOIN 
                            (SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
				 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q1,
				 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_Q1,
				     ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q2,
				 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_Q2,
				     ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q3,
				 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_Q3,
					 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q4,
				 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_Q4,
			      ISNULL(SUM(TOTAL_CPQ1),0) + ISNULL(SUM(TOTAL_CPQ2),0) + ISNULL(SUM(TOTAL_CPQ3),0) AS TOTAL_CP
					 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO
				 GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID 
            	 	     )ACRHD
		    ON ACRHD.AGREE_BRAND_ID = ACRHA.AGREE_BRAND_ID
                   )ACRH
         ON ACRH.AGREE_BRAND_ID = ABI.[ID] AND ACRH.DISTRIBUTOR_ID = ABI.DISTRIBUTOR_ID
	WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO
 	OPTION(KEEP PLAN);
    END
 ELSE
     BEGIN
 	 SELECT ABI.DISTRIBUTOR_ID,ABI.AGREEMENT_NO,ABI.[ID] AS AGREE_BRAND_ID,ABI.BRAND_ID,ABI.TARGET_YEAR,
        TOTAL_ACTUAL = CASE @CURRENT_FLAG 
			 WHEN 'S1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_S2
			 ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
        		 END,
	ISNULL(ACRH.TOTAL_PO_ORIGINAL,0) AS TOTAL_PO_ORIGINAL,ISNULL(ACRH.TOTAL_PO_DISTRIBUTOR,0) AS TOTAL_PO_DISTRIBUTOR,
	ACTUAL_YEAR_DISTRIBUTOR = CASE @V_IsTargetGroup
				    WHEN 0 THEN CASE @CURRENT_FLAG 
					       WHEN 'S1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_S2
			 		       ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
        		 		       END
                                    ELSE  ISNULL(ACRH.ACTUAL_YEAR_DISTRIBUTOR,0)
                                    END,           		
        ABI.COMBINED_BRAND FROM VIEW_AGREE_BRAND_INCLUDE ABI
	LEFT OUTER JOIN ( 
                        SELECT ACRHA.AGREE_BRAND_ID,ISNULL(ACRHA.ACTUAL_S1,0) + ISNULL(ACRHA.ACTUAL_S2,0) + ISNULL(ACRHA.TOTAL_JOIN_CP,0) AS TOTAL_ACTUAL,
			ISNULL(ACRHA1.ACTUAL_Y,0)AS ACTUAL_Y,ACRHD.DISTRIBUTOR_ID,
			ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_S1,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_S2,0)  + ISNULL(ACRHD.TOTAL_CP,0) AS ACTUAL_YEAR_DISTRIBUTOR,
			 ISNULL(ACRHA.TOTAL_PO_S1,0) + ISNULL(ACRHA.TOTAL_PO_S2,0) AS TOTAL_PO_ORIGINAL,
			 ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_S1,0) +  ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_S2,0) AS TOTAL_PO_DISTRIBUTOR
                         FROM
                             (
                         	SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
		    		ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_S1,
				  ISNULL(SUM(CASE FLAG WHEN 'S1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_S1,
				  ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_S2,
				  ISNULL(SUM(CASE FLAG WHEN 'S2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_S2,
				 ISNULL(SUM(TOTAL_CPS1),0) AS TOTAL_JOIN_CP
				  FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO
				  GROUP BY AGREEMENT_NO + BRAND_ID 
                    	      )ACRHA
 			LEFT OUTER JOIN
                                 (SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,TOTAL_ACTUAL AS ACTUAL_Y
	  	                  FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO AND FLAG = 'Y'	
		   	          )ACRHA1
			ON ACRHA.AGREE_BRAND_ID = ACRHA1.AGREE_BRAND_ID
                        INNER JOIN 
                                 (SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
						ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_S1,
				ISNULL(SUM(CASE FLAG WHEN 'S1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_S1,
					ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_S2,
				ISNULL(SUM(CASE FLAG WHEN 'S2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_S2,
    	 				    ISNULL(SUM(TOTAL_CPS1),0) AS TOTAL_CP
					FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO 
				GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID
                    	 	  )ACRHD
   			ON ACRHD.AGREE_BRAND_ID = ACRHA.AGREE_BRAND_ID
                     )ACRH
        ON ACRH.AGREE_BRAND_ID = ABI.[ID] AND ACRH.DISTRIBUTOR_ID = ABI.DISTRIBUTOR_ID
	WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO
 	OPTION(KEEP PLAN);
   END
GO

IF EXISTS(SELECT NAME FROM Nufarm.Sys.Objects WHERE NAME = 'Usp_Changed_Actual_Accrue_By_Year' AND TYPE = 'P')
	DROP PROCEDURE Usp_Changed_Actual_Accrue_By_Year
GO
CREATE PROCEDURE Usp_Changed_Actual_Accrue_By_Year
@AGREEMENT_NO VARCHAR(32),
@CURRENT_FLAG VARCHAR(2)
AS
SET DEADLOCK_PRIORITY NORMAL; SET NOCOUNT ON;
DECLARE @V_QS_TREATMENT_FLAG CHAR(1),@V_IsTargetGroup BIT;
SET @V_QS_TREATMENT_FLAG = (SELECT TOP 1 QS_TREATMENT_FLAG FROM AGREE_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO);
IF (SELECT COUNT(AGREEMENT_NO) FROM DISTRIBUTOR_AGREEMENT WHERE AGREEMENT_NO = @AGREEMENT_NO) > 1
    BEGIN SET @V_IsTargetGroup = 1; END
ELSE 
    BEGIN SET @V_IsTargetGroup = 0; END

IF @V_QS_TREATMENT_FLAG = 'Q'
   BEGIN 
	SELECT ABI.DISTRIBUTOR_ID,ABI.AGREEMENT_NO,ABI.[ID] AS AGREE_BRAND_ID,ABI.BRAND_ID,ABI.TARGET_YEAR,
       TOTAL_ACTUAL = CASE @CURRENT_FLAG 
			 WHEN 'Q1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4
			 WHEN 'Q2' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q3 + ABI.TARGET_Q4
			 WHEN 'Q3' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q4
			 ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
       			 END,
	ISNULL(ACRH.TOTAL_PO_ORIGINAL,0)AS TOTAL_PO_ORIGINAL,ISNULL(ACRH.TOTAL_PO_DISTRIBUTOR,0) AS TOTAL_PO_DISTRIBUTOR,
	ACTUAL_YEAR_DISTRIBUTOR = CASE @V_IsTargetGroup
				    WHEN 0 THEN CASE @CURRENT_FLAG 
					        WHEN 'Q1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q2 + ABI.TARGET_Q3 + ABI.TARGET_Q4
					        WHEN 'Q2' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q3 + ABI.TARGET_Q4
					        WHEN 'Q3' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_Q4
					        ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) END
                                    ELSE  ISNULL(ACRH.ACTUAL_YEAR_DISTRIBUTOR,0)
                                    END,           		
        ABI.COMBINED_BRAND FROM VIEW_AGREE_BRAND_INCLUDE ABI
	INNER JOIN( 
                   SELECT ACRHA.AGREE_BRAND_ID,ISNULL(ACRHA.ACTUAL_Q1,0) + ISNULL(ACRHA.ACTUAL_Q2,0) + ISNULL(ACRHA.ACTUAL_Q3,0) + ISNULL(ACRHA.ACTUAL_Q4,0)  + ISNULL(ACRHA.TOTAL_JOIN_CP,0) AS TOTAL_ACTUAL,
		   ISNULL(ACRHA.TOTAL_PO_Q1,0) + ISNULL(ACRHA.TOTAL_PO_Q2,0) + ISNULL(ACRHA.TOTAL_PO_Q3,0) + ISNULL(ACRHA.TOTAL_PO_Q4,0) AS TOTAL_PO_ORIGINAL,	
		   ISNULL(ACRHA1.ACTUAL_Y,0)AS ACTUAL_Y,ACRHD.DISTRIBUTOR_ID,
		   ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q1,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q2,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q3,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_Q4,0)  + ISNULL(ACRHD.TOTAL_CP,0) AS ACTUAL_YEAR_DISTRIBUTOR,
		   ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_Q1,0) + ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_Q2,0) + ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_Q3,0) + ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_Q4,0) AS TOTAL_PO_DISTRIBUTOR
                   FROM
                     (
                      	 SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
				 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_DISTRIBUTOR END),0)  AS ACTUAL_Q1,
			 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q1,
				 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_Q2,
			 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q2, 
				 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_DISTRIBUTOR END),0)  AS ACTUAL_Q3,
			 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q3,
				 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_Q4,
			 ISNULL(SUM(CASE FLAG when 'Q4' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_Q4,
			     ISNULL(SUM(TOTAL_CPQ1),0) + ISNULL(SUM(TOTAL_CPQ2),0) + ISNULL(SUM(TOTAL_CPQ3),0) AS TOTAL_JOIN_CP
			 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO 
			 GROUP BY AGREEMENT_NO + BRAND_ID
            	      )ACRHA
		    INNER JOIN
                            (SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,TOTAL_ACTUAL AS ACTUAL_Y
	  	             FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO AND FLAG = 'Y'	
            		     )ACRHA1
		    ON ACRHA.AGREE_BRAND_ID = ACRHA1.AGREE_BRAND_ID
                    INNER JOIN 
                            (SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
				 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q1,
				 ISNULL(SUM(CASE FLAG WHEN 'Q1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_Q1,
				     ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q2,
				 ISNULL(SUM(CASE FLAG WHEN 'Q2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_Q2,
				     ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q3,
				 ISNULL(SUM(CASE FLAG WHEN 'Q3' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_Q3,
					 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_Q4,
				 ISNULL(SUM(CASE FLAG WHEN 'Q4' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_Q4,
			      ISNULL(SUM(TOTAL_CPQ1),0) + ISNULL(SUM(TOTAL_CPQ2),0) + ISNULL(SUM(TOTAL_CPQ3),0) AS TOTAL_CP
					 FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO
				 GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID 
            	 	     )ACRHD
		    ON ACRHD.AGREE_BRAND_ID = ACRHA.AGREE_BRAND_ID
                   )ACRH
         ON ACRH.AGREE_BRAND_ID = ABI.[ID] AND ACRH.DISTRIBUTOR_ID = ABI.DISTRIBUTOR_ID
	WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO
 	AND ACRH.ACTUAL_Y <> ACRH.TOTAL_ACTUAL OPTION(KEEP PLAN);
    END
 ELSE
     BEGIN
 	 SELECT ABI.DISTRIBUTOR_ID,ABI.AGREEMENT_NO,ABI.[ID] AS AGREE_BRAND_ID,ABI.BRAND_ID,ABI.TARGET_YEAR,
        TOTAL_ACTUAL = CASE @CURRENT_FLAG 
			 WHEN 'S1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_S2
			 ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
        		 END,
	ISNULL(ACRH.TOTAL_PO_ORIGINAL,0) AS TOTAL_PO_ORIGINAL,ISNULL(ACRH.TOTAL_PO_DISTRIBUTOR,0) AS TOTAL_PO_DISTRIBUTOR,
	ACTUAL_YEAR_DISTRIBUTOR = CASE @V_IsTargetGroup
				    WHEN 0 THEN CASE @CURRENT_FLAG 
					       WHEN 'S1' THEN ISNULL(ACRH.TOTAL_ACTUAL,0) + ABI.TARGET_S2
			 		       ELSE ISNULL(ACRH.TOTAL_ACTUAL,0) 
        		 		       END
                                    ELSE  ISNULL(ACRH.ACTUAL_YEAR_DISTRIBUTOR,0)
                                    END,           		
        ABI.COMBINED_BRAND FROM VIEW_AGREE_BRAND_INCLUDE ABI
	INNER JOIN ( 
                        SELECT ACRHA.AGREE_BRAND_ID,ISNULL(ACRHA.ACTUAL_S1,0) + ISNULL(ACRHA.ACTUAL_S2,0) + ISNULL(ACRHA.TOTAL_JOIN_CP,0) AS TOTAL_ACTUAL,
			ISNULL(ACRHA1.ACTUAL_Y,0)AS ACTUAL_Y,ACRHD.DISTRIBUTOR_ID,
			ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_S1,0) + ISNULL(ACRHD.ACTUAL_DISTRIBUTOR_S2,0)  + ISNULL(ACRHD.TOTAL_CP,0) AS ACTUAL_YEAR_DISTRIBUTOR,
			 ISNULL(ACRHA.TOTAL_PO_S1,0) + ISNULL(ACRHA.TOTAL_PO_S2,0) AS TOTAL_PO_ORIGINAL,
			 ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_S1,0) +  ISNULL(ACRHD.TOTAL_PO_DISTRIBUTOR_S2,0) AS TOTAL_PO_DISTRIBUTOR
                         FROM
                             (
                         	SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
		    		ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_S1,
				  ISNULL(SUM(CASE FLAG WHEN 'S1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_S1,
				  ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_S2,
				  ISNULL(SUM(CASE FLAG WHEN 'S2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_S2,
				 ISNULL(SUM(TOTAL_CPS1),0) AS TOTAL_JOIN_CP
				  FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO
				  GROUP BY AGREEMENT_NO + BRAND_ID 
                    	      )ACRHA
 			INNER JOIN
                                 (SELECT AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,TOTAL_ACTUAL AS ACTUAL_Y
	  	                  FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO AND FLAG = 'Y'	
		   	          )ACRHA1
			ON ACRHA.AGREE_BRAND_ID = ACRHA1.AGREE_BRAND_ID
                        INNER JOIN 
                                 (SELECT DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID AS AGREE_BRAND_ID,
						ISNULL(SUM(CASE FLAG WHEN 'S1' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_S1,
				ISNULL(SUM(CASE FLAG WHEN 'S1' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_S1,
					ISNULL(SUM(CASE FLAG WHEN 'S2' THEN ACTUAL_DISTRIBUTOR END),0) AS ACTUAL_DISTRIBUTOR_S2,
				ISNULL(SUM(CASE FLAG WHEN 'S2' THEN TOTAL_PO_DISTRIBUTOR END),0) AS TOTAL_PO_DISTRIBUTOR_S2,
    	 				    ISNULL(SUM(TOTAL_CPS1),0) AS TOTAL_CP
					FROM ACCRUED_HEADER WHERE AGREEMENT_NO = @AGREEMENT_NO 
				GROUP BY DISTRIBUTOR_ID,AGREEMENT_NO + BRAND_ID
                    	 	  )ACRHD
   			ON ACRHD.AGREE_BRAND_ID = ACRHA.AGREE_BRAND_ID
                     )ACRH
        ON ACRH.AGREE_BRAND_ID = ABI.[ID] AND ACRH.DISTRIBUTOR_ID = ABI.DISTRIBUTOR_ID
	WHERE ABI.AGREEMENT_NO = @AGREEMENT_NO
 	AND ACRH.ACTUAL_Y <> ACRH.TOTAL_ACTUAL OPTION(KEEP PLAN);
   END
GO


-----------------------------2015 february-------------------------------------------------------------
IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'DIST_DISTRIBUTOR')C WHERE ColumnName = 'SHIP_TO')
ALTER TABLE DIST_DISTRIBUTOR ADD SHIP_TO VARCHAR(10);
GO
---------------------------------------------------------------------------------------
IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'DIST_DISTRIBUTOR')C WHERE ColumnName = 'SOLD_TO')
ALTER TABLE DIST_DISTRIBUTOR ADD SOLD_TO VARCHAR(10);
GO
--------------------------------------------------------------------------------------------------
IF NOT EXISTS(SELECT ColumnName FROM (
			   SELECT t.[TABLE_NAME],c.[COLUMN_NAME] as ColumnName from INFORMATION_SCHEMA.TABLES t 
               INNER JOIN INFORMATION_SCHEMA.COLUMNS c
			   ON c.[TABLE_NAME] = t.[TABLE_NAME]
			   WHERE t.[TABLE_NAME] = 'DIST_DISTRIBUTOR')C WHERE ColumnName = 'MINIMUM_ORDER')
ALTER TABLE DIST_DISTRIBUTOR ADD MINIMUM_ORDER DECIMAL(18,4);
GO


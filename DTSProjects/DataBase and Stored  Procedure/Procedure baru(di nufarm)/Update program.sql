-------------------------PROCEDURE UNTUK MEMBUAT----------------------------

-----------------------------------------------------------------------------------------------------------------
--PROCEDURE UNTUK MENGECEK PO_REF_NO DI PO_BRANDPACK DENGAN DATANYA YAN BELUM 0-
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_CheckPOBrandPackIDByPOREfNO' AND TYPE = 'P')
DROP PROCEDURE Usp_CheckPOBrandPackIDByPOREfNO
GO
CREATE PROCEDURE Usp_CheckPOBrandPackIDByPOREfNO
@PO_REF_NO VARCHAR(25)
AS
IF (SELECT COUNT(PO_BRANDPACK_ID) FROM ORDR_PO_BRANDPACK WHERE PO_REF_NO = @PO_REF_NO AND PO_ORIGINAL_QTY > 0) > 0
    RETURN(1)
GO
--------------------------------------------------------------------------------
----PROCEDURE MEMBIKINTABLE GIVEN---------------------------------------------
if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[FK_AGREE_DISC_HISTORY_GIVEN_STORY]') and OBJECTPROPERTY(id, N'IsForeignKey') = 1)
ALTER TABLE [dbo].[AGREE_DISC_HISTORY] DROP CONSTRAINT FK_AGREE_DISC_HISTORY_GIVEN_STORY
GO

if exists (select * from dbo.sysobjects where id = object_id(N'[dbo].[GIVEN_STORY]') and OBJECTPROPERTY(id, N'IsUserTable') = 1)
drop table [dbo].[GIVEN_STORY]
GO

CREATE TABLE [dbo].[GIVEN_STORY] (
	[GIVEN_ID] [varchar] (44) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
	[START_DATE] [smalldatetime] NOT NULL ,
	[END_DATE] [smalldatetime] NOT NULL ,
	[AGREE_BRAND_ID] [varchar] (32) COLLATE SQL_Latin1_General_CP1_CI_AS NOT NULL ,
	[DISC_PCT] [decimal](18, 2) NOT NULL ,
	[GIVEN_DESCRIPTION] [varchar] (150) COLLATE SQL_Latin1_General_CP1_CI_AS NULL 
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[GIVEN_STORY] WITH NOCHECK ADD 
	CONSTRAINT [PK_GIVEN_STORY] PRIMARY KEY  CLUSTERED 
	(
		[GIVEN_ID]
	)  ON [PRIMARY] 
GO

 CREATE  INDEX [IX_GIVEN_STORY] ON [dbo].[GIVEN_STORY]([START_DATE]) ON [PRIMARY]
GO

 CREATE  INDEX [IX_GIVEN_STORY_1] ON [dbo].[GIVEN_STORY]([END_DATE]) ON [PRIMARY]
GO

 CREATE  INDEX [IX_GIVEN_STORY_2] ON [dbo].[GIVEN_STORY]([AGREE_BRAND_ID]) ON [PRIMARY]
GO

ALTER TABLE [dbo].[GIVEN_STORY] ADD 
	CONSTRAINT [FK_GIVEN_STORY_AGREE_BRAND_INCLUDE] FOREIGN KEY 
	(
		[AGREE_BRAND_ID]
	) REFERENCES [dbo].[AGREE_BRAND_INCLUDE] (
		[AGREE_BRAND_ID]
	)
GO

---PROCEDURE UNTUK MENGINPUT GIVEN---------------------------------------
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_INSERT_GIVEN_STORY'
   AND TYPE = 'P')
DROP PROCEDURE Usp_INSERT_GIVEN_STORY
GO
CREATE PROCEDURE Usp_INSERT_GIVEN_STORY
@O_MESSAGE VARCHAR(100)OUTPUT,
@GIVEN_ID VARCHAR(44),
@START_DATE SMALLDATETIME,
@AGREE_BRAND_ID VARCHAR(32),
@DISC_PCT DECIMAL(10,4),
@GIVEN_DESCRIPTION VARCHAR(150)
AS 
BEGIN
     IF EXISTS(SELECT GIVEN_ID FROM GIVEN_STORY WHERE GIVEN_ID = @GIVEN_ID) 
	BEGIN
             SET @O_MESSAGE = 'Data has existed !.'
	     RETURN(1)
	END
     ELSE
	BEGIN
  	     INSERT INTO GIVEN_STORY(GIVEN_ID,START_DATE,AGREE_BRAND_ID,DISC_PCT,GIVEN_DESCRIPTION)
	     VALUES(@GIVEN_ID,@START_DATE,@AGREE_BRAND_ID,@DISC_PCT,@GIVEN_DESCRIPTION)
	END

END
GO

----------------------PROCEDURE UNTUK MENGUPDATE DATA GIVEN_STORY------------------------------
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_UPDATE_GIVEN_STORY' AND TYPE = 'P')
DROP PROCEDURE Usp_UPDATE_GIVEN_STORY
GO
CREATE PROCEDURE Usp_UPDATE_GIVEN_STORY
@GIVEN_ID VARCHAR(44),
@START_DATE SMALLDATETIME,
@AGREE_BRAND_ID VARCHAR(32),
@DISC_PCT DECIMAL(10,4),
@GIVEN_DESCRIPTION VARCHAR(150)
AS
UPDATE GIVEN_STORY SET START_DATE = @START_DATE,AGREE_BRAND_ID = @AGREE_BRAND_ID
,DISC_PCT = @DISC_PCT,GIVEN_DESCRIPTION = @GIVEN_DESCRIPTION WHERE GIVEN_ID = @GIVEN_ID
GO

--------------------PROCEDURE UNTUK MENDELETE GIVEN_STORY------------------------
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_DELETE_GIVEN_STORY'
AND TYPE  = 'P')
DROP PROCEDURE Usp_DELETE_GIVEN_STORY
GO
CREATE PROCEDURE Usp_DELETE_GIVEN_STORY
@GIVEN_ID VARCHAR(44),
@O_MESSAGE VARCHAR(100) output
AS
BEGIN
    IF (SELECT COUNT(GIVEN_ID) FROM AGREE_DISC_HISTORY WHERE GIVEN_ID = @GIVEN_ID) > 0
	BEGIN
	    SET @O_MESSAGE = 'Data can not be deleted'
	    RETURN(1)
	END
    ELSE
	 BEGIN
	     DELETE FROM GIVEN_STORY WHERE GIVEN_ID = @GIVEN_ID
	 END	 

END
GO

-------PROCEDURE UNTUK MEMVIEW AGREE_BRAND_GIVEN_STORY
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Create_View_Agree_Brand_Given_Story' AND TYPE = 'P')
DROP PROCEDURE Usp_Create_View_Agree_Brand_Given_Story
GO
CREATE PROCEDURE Usp_Create_View_Agree_Brand_Given_Story
@AGREE_BRAND_ID VARCHAR(32)
AS
SELECT GIVEN_STORY.*,BRND_BRAND.BRAND_ID,BRND_BRAND.BRAND_NAME FROM BRND_BRAND,AGREE_BRAND_INCLUDE,GIVEN_STORY
WHERE BRND_BRAND.BRAND_ID = AGREE_BRAND_INCLUDE.BRAND_ID AND AGREE_BRAND_INCLUDE.AGREE_BRAND_ID = 
GIVEN_STORY.AGREE_BRAND_ID AND AGREE_BRAND_INCLUDE.AGREE_BRAND_ID = @AGREE_BRAND_ID
ORDER BY GIVEN_STORY.START_DATE DESC
GO
--EXEC Usp_Create_View_Agree_Brand_Given_Story @Agree_Brand_ID = '0001/NI/I/200900055'

--EXEC Usp_Create_View_Agree_Brand_Given_Story @AGREE_BRAND_ID = ''
----------------------------------------------------------------------------------
---PROCEDURE UNTUK MENGECEK REFERENSI GIVEN_ID-----------------------------------
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Chek_Reference_Given_ID' AND TYPE = 'P')
DROP PROCEDURE Usp_Chek_Reference_Given_ID
GO
CREATE PROCEDURE Usp_Chek_Reference_Given_ID
@GIVEN_ID VARCHAR(44)
AS
IF (SELECT COUNT(GIVEN_ID) FROM AGREE_DISC_HISTORY WHERE GIVEN_ID = @GIVEN_ID) > 0
	RETURN(1)
GO

--------PROCEDURE UNTUK MENAMPILKAN AGREEMENT YANG BELUM DAN SUDAH DI GENERATED-----
IF EXISTS(SELECT NAME FROM DBO.SYSOBJECTS WHERE NAME = 'Usp_Create_View_Generated_Agreement' AND TYPE = 'P')
DROP PROCEDURE Usp_Create_View_Generated_Agreement
GO
CREATE PROCEDURE Usp_Create_View_Generated_Agreement
@_HAS_GENERATED BIT,
@_FLAG VARCHAR(2)
AS
SET NOCOUNT ON;
DECLARE @V_FLAG VARCHAR(2);
IF @_FLAG <> 'Y'
BEGIN SET @V_FLAG = LEFT(@_FLAG,1); END
ELSE BEGIN SET @V_FLAG = @_FLAG ; END
IF (@_HAS_GENERATED = 1)
   BEGIN
	  SELECT DR.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME FROM DIST_DISTRIBUTOR DR
          WHERE EXISTS(SELECT DA.DISTRIBUTOR_ID FROM DISTRIBUTOR_AGREEMENT DA INNER JOIN
		       AGREE_AGREEMENT AA ON DA.AGREEMENT_NO = AA.AGREEMENT_NO
		       WHERE DA.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID							 
		       AND EXISTS(SELECT BBS.AGREE_BRANDPACK_ID FROM BRND_BRANDPACK_SAVING BBS INNER JOIN AGREE_BRANDPACK_INCLUDE ABI
				      ON BBS.AGREE_BRANDPACK_ID = ABI.AGREE_BRANDPACK_ID WHERE BBS.QSY_FLAG = @_FLAG
				      AND BBS.DISTRIBUTOR_ID = DA.DISTRIBUTOR_ID AND ABI.AGREEMENT_NO = DA.AGREEMENT_NO
				     )
		       AND YEAR(AA.END_DATE) >= YEAR(GETDATE()) -1
		       AND AA.QS_TREATMENT_FLAG = @V_FLAG
		      );
   END
ELSE IF(@_HAS_GENERATED = 0)
    BEGIN
        SELECT DR.DISTRIBUTOR_ID,DR.DISTRIBUTOR_NAME FROM DIST_DISTRIBUTOR DR
        WHERE EXISTS(SELECT DA.DISTRIBUTOR_ID FROM DISTRIBUTOR_AGREEMENT DA INNER JOIN
	              AGREE_AGREEMENT AA ON DA.AGREEMENT_NO = AA.AGREEMENT_NO
		      WHERE DA.DISTRIBUTOR_ID = DR.DISTRIBUTOR_ID							 
		      AND NOT EXISTS(SELECT BBS.AGREE_BRANDPACK_ID FROM BRND_BRANDPACK_SAVING BBS INNER JOIN AGREE_BRANDPACK_INCLUDE ABI
				      ON BBS.AGREE_BRANDPACK_ID = ABI.AGREE_BRANDPACK_ID WHERE BBS.QSY_FLAG = @_FLAG
				      AND BBS.DISTRIBUTOR_ID = DA.DISTRIBUTOR_ID AND ABI.AGREEMENT_NO = DA.AGREEMENT_NO
				     )
		      AND YEAR(AA.END_DATE) >= YEAR(GETDATE()) -1
		      AND AA.QS_TREATMENT_FLAG = @V_FLAG
		     );
   END
GO
---------------------------------------------------------------------------------------	    	
 --exec Usp_Create_View_Generated_Agreement
--@_HAS_GENERATED = 0,
--@_FLAG = 's1'

